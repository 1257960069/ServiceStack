// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: services.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ServiceStack.Extensions.Tests.Protoc {

  /// <summary>Holder for reflection information generated from services.proto</summary>
  public static partial class ServicesReflection {

    #region Descriptor
    /// <summary>File descriptor for services.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ServicesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5zZXJ2aWNlcy5wcm90bxoWcHJvdG9idWYtbmV0L2JjbC5wcm90byIoCglB",
            "ZGRIZWFkZXISDAoETmFtZRgBIAEoCRINCgVWYWx1ZRgCIAEoCSIYCghBbnlI",
            "ZWxsbxIMCgROYW1lGAEgASgJIpYBCgtBc3NpZ25Sb2xlcxIQCghVc2VyTmFt",
            "ZRgBIAEoCRITCgtQZXJtaXNzaW9ucxgCIAMoCRINCgVSb2xlcxgDIAMoCRIk",
            "CgRNZXRhGAQgAygLMhYuQXNzaWduUm9sZXMuTWV0YUVudHJ5GisKCU1ldGFF",
            "bnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIsMBChNBc3Np",
            "Z25Sb2xlc1Jlc3BvbnNlEhAKCEFsbFJvbGVzGAEgAygJEhYKDkFsbFBlcm1p",
            "c3Npb25zGAIgAygJEiwKBE1ldGEYAyADKAsyHi5Bc3NpZ25Sb2xlc1Jlc3Bv",
            "bnNlLk1ldGFFbnRyeRInCg5SZXNwb25zZVN0YXR1cxgEIAEoCzIPLlJlc3Bv",
            "bnNlU3RhdHVzGisKCU1ldGFFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUY",
            "AiABKAk6AjgBIrsDCgxBdXRoZW50aWNhdGUSEAoIcHJvdmlkZXIYASABKAkS",
            "DQoFU3RhdGUYAiABKAkSEwoLb2F1dGhfdG9rZW4YAyABKAkSFgoOb2F1dGhf",
            "dmVyaWZpZXIYBCABKAkSEAoIVXNlck5hbWUYBSABKAkSEAoIUGFzc3dvcmQY",
            "BiABKAkSEgoKUmVtZW1iZXJNZRgHIAEoCBIQCghDb250aW51ZRgIIAEoCRIR",
            "CglFcnJvclZpZXcYCSABKAkSDQoFbm9uY2UYCiABKAkSCwoDdXJpGAsgASgJ",
            "EhAKCHJlc3BvbnNlGAwgASgJEgsKA3FvcBgNIAEoCRIKCgJuYxgOIAEoCRIO",
            "CgZjbm9uY2UYDyABKAkSFgoOVXNlVG9rZW5Db29raWUYECABKAgSEwoLQWNj",
            "ZXNzVG9rZW4YESABKAkSGQoRQWNjZXNzVG9rZW5TZWNyZXQYEiABKAkSDQoF",
            "c2NvcGUYEyABKAkSJQoETWV0YRgUIAMoCzIXLkF1dGhlbnRpY2F0ZS5NZXRh",
            "RW50cnkaKwoJTWV0YUVudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEo",
            "CToCOAEi3QIKFEF1dGhlbnRpY2F0ZVJlc3BvbnNlEg4KBlVzZXJJZBgBIAEo",
            "CRIRCglTZXNzaW9uSWQYAiABKAkSEAoIVXNlck5hbWUYAyABKAkSEwoLRGlz",
            "cGxheU5hbWUYBCABKAkSEwoLUmVmZXJyZXJVcmwYBSABKAkSEwoLQmVhcmVy",
            "VG9rZW4YBiABKAkSFAoMUmVmcmVzaFRva2VuGAcgASgJEhIKClByb2ZpbGVV",
            "cmwYCCABKAkSDQoFUm9sZXMYCSADKAkSEwoLUGVybWlzc2lvbnMYCiADKAkS",
            "JwoOUmVzcG9uc2VTdGF0dXMYCyABKAsyDy5SZXNwb25zZVN0YXR1cxItCgRN",
            "ZXRhGAwgAygLMh8uQXV0aGVudGljYXRlUmVzcG9uc2UuTWV0YUVudHJ5GisK",
            "CU1ldGFFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIhYK",
            "FENoYW5nZUNvbm5lY3Rpb25JbmZvIlMKCENoYW5nZURiEhcKD05hbWVkQ29u",
            "bmVjdGlvbhgBIAEoCRIYChBDb25uZWN0aW9uU3RyaW5nGAIgASgJEhQKDFBy",
            "b3ZpZGVyTmFtZRgDIAEoCSIuChBDaGFuZ2VEYlJlc3BvbnNlEhoKB1Jlc3Vs",
            "dHMYASADKAsyCS5Sb2Nrc3RhciKbAQoLQ2hhdE1lc3NhZ2USCgoCSWQYASAB",
            "KAMSDwoHQ2hhbm5lbBgCIAEoCRISCgpGcm9tVXNlcklkGAMgASgJEhAKCEZy",
            "b21OYW1lGAQgASgJEhMKC0Rpc3BsYXlOYW1lGAUgASgJEg8KB01lc3NhZ2UY",
            "BiABKAkSEgoKVXNlckF1dGhJZBgHIAEoCRIPCgdQcml2YXRlGAggASgIIo0B",
            "ChVDb252ZXJ0U2Vzc2lvblRvVG9rZW4SFwoPUHJlc2VydmVTZXNzaW9uGAEg",
            "ASgIEi4KBE1ldGEYAiADKAsyIC5Db252ZXJ0U2Vzc2lvblRvVG9rZW4uTWV0",
            "YUVudHJ5GisKCU1ldGFFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiAB",
            "KAk6AjgBItgBCh1Db252ZXJ0U2Vzc2lvblRvVG9rZW5SZXNwb25zZRI2CgRN",
            "ZXRhGAEgAygLMiguQ29udmVydFNlc3Npb25Ub1Rva2VuUmVzcG9uc2UuTWV0",
            "YUVudHJ5EhMKC0FjY2Vzc1Rva2VuGAIgASgJEhQKDFJlZnJlc2hUb2tlbhgD",
            "IAEoCRInCg5SZXNwb25zZVN0YXR1cxgEIAEoCzIPLlJlc3BvbnNlU3RhdHVz",
            "GisKCU1ldGFFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgB",
            "IioKCkNyZWF0ZVRvZG8SDQoFVGl0bGUYASABKAkSDQoFT3JkZXIYAiABKAUi",
            "VAoSQ3JlYXRlVG9kb1Jlc3BvbnNlEhUKBlJlc3VsdBgBIAEoCzIFLlRvZG8S",
            "JwoOUmVzcG9uc2VTdGF0dXMYAiABKAsyDy5SZXNwb25zZVN0YXR1cyJ4Cg5D",
            "dXN0b21Sb2Nrc3RhchIRCglGaXJzdE5hbWUYASABKAkSEAoITGFzdE5hbWUY",
            "AiABKAkSCwoDQWdlGAMgASgFEhkKEVJvY2tzdGFyQWxidW1OYW1lGAQgASgJ",
            "EhkKEVJvY2tzdGFyR2VucmVOYW1lGAUgASgJIhgKCkRlbGV0ZVRvZG8SCgoC",
            "SWQYASABKAMiHgoLRGVsZXRlVG9kb3MSDwoDSWRzGAEgAygDQgIQACI4Cg1F",
            "bXB0eVJlc3BvbnNlEicKDlJlc3BvbnNlU3RhdHVzGAEgASgLMg8uUmVzcG9u",
            "c2VTdGF0dXMicAoLRmlsZUNvbnRlbnQSDAoETmFtZRgBIAEoCRIMCgRUeXBl",
            "GAIgASgJEg4KBkxlbmd0aBgDIAEoBRIMCgRCb2R5GAQgASgMEicKDlJlc3Bv",
            "bnNlU3RhdHVzGAUgASgLMg8uUmVzcG9uc2VTdGF0dXMilAEKDkdldEFjY2Vz",
            "c1Rva2VuEhQKDFJlZnJlc2hUb2tlbhgBIAEoCRIWCg5Vc2VUb2tlbkNvb2tp",
            "ZRgCIAEoCBInCgRNZXRhGAMgAygLMhkuR2V0QWNjZXNzVG9rZW4uTWV0YUVu",
            "dHJ5GisKCU1ldGFFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6",
            "AjgBIrQBChZHZXRBY2Nlc3NUb2tlblJlc3BvbnNlEhMKC0FjY2Vzc1Rva2Vu",
            "GAEgASgJEi8KBE1ldGEYAiADKAsyIS5HZXRBY2Nlc3NUb2tlblJlc3BvbnNl",
            "Lk1ldGFFbnRyeRInCg5SZXNwb25zZVN0YXR1cxgDIAEoCzIPLlJlc3BvbnNl",
            "U3RhdHVzGisKCU1ldGFFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiAB",
            "KAk6AjgBInMKCkdldEFwaUtleXMSEwoLRW52aXJvbm1lbnQYASABKAkSIwoE",
            "TWV0YRgCIAMoCzIVLkdldEFwaUtleXMuTWV0YUVudHJ5GisKCU1ldGFFbnRy",
            "eRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIrUBChJHZXRBcGlL",
            "ZXlzUmVzcG9uc2USHAoHUmVzdWx0cxgBIAMoCzILLlVzZXJBcGlLZXkSKwoE",
            "TWV0YRgCIAMoCzIdLkdldEFwaUtleXNSZXNwb25zZS5NZXRhRW50cnkSJwoO",
            "UmVzcG9uc2VTdGF0dXMYAyABKAsyDy5SZXNwb25zZVN0YXR1cxorCglNZXRh",
            "RW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASIYCghHZXRI",
            "ZWxsbxIMCgROYW1lGAEgASgJIhUKB0dldFRvZG8SCgoCSWQYASABKAMiUQoP",
            "R2V0VG9kb1Jlc3BvbnNlEhUKBlJlc3VsdBgBIAEoCzIFLlRvZG8SJwoOUmVz",
            "cG9uc2VTdGF0dXMYAiABKAsyDy5SZXNwb25zZVN0YXR1cyIKCghHZXRUb2Rv",
            "cyJTChBHZXRUb2Rvc1Jlc3BvbnNlEhYKB1Jlc3VsdHMYASADKAsyBS5Ub2Rv",
            "EicKDlJlc3BvbnNlU3RhdHVzGAIgASgLMg8uUmVzcG9uc2VTdGF0dXMiLQoI",
            "SGVsbG9Kd3QSDAoETmFtZRgBIAEoCRITCgtCZWFyZXJUb2tlbhgCIAEoCSJL",
            "ChBIZWxsb0p3dFJlc3BvbnNlEg4KBlJlc3VsdBgBIAEoCRInCg5SZXNwb25z",
            "ZVN0YXR1cxgCIAEoCzIPLlJlc3BvbnNlU3RhdHVzIkgKDUhlbGxvUmVzcG9u",
            "c2USDgoGUmVzdWx0GAEgASgJEicKDlJlc3BvbnNlU3RhdHVzGAIgASgLMg8u",
            "UmVzcG9uc2VTdGF0dXMiFgoESW5jchIOCgZBbW91bnQYASABKAUitgEKBU1v",
            "dmllEgoKAklkGAEgASgFEg4KBkltZGJJZBgCIAEoCRINCgVUaXRsZRgDIAEo",
            "CRIOCgZSYXRpbmcYBCABKAkSGwoFU2NvcmUYBSABKAsyDC5iY2wuRGVjaW1h",
            "bBIQCghEaXJlY3RvchgGIAEoCRIiCgtSZWxlYXNlRGF0ZRgHIAEoCzINLmJj",
            "bC5EYXRlVGltZRIPCgdUYWdMaW5lGAggASgJEg4KBkdlbnJlcxgJIAMoCSIg",
            "CghNdWx0aXBseRIJCgFYGAEgASgFEgkKAVkYAiABKAUiIgoQTXVsdGlwbHlS",
            "ZXNwb25zZRIOCgZSZXN1bHQYASABKAUiZwoRUG9zdENoYXRUb0NoYW5uZWwS",
            "DAoERnJvbRgBIAEoCRIQCghUb1VzZXJJZBgCIAEoCRIPCgdDaGFubmVsGAMg",
            "ASgJEg8KB01lc3NhZ2UYBCABKAkSEAoIU2VsZWN0b3IYBSABKAkivAMKCVF1",
            "ZXJ5QmFzZRIMCgRTa2lwGAEgASgFEgwKBFRha2UYAiABKAUSDwoHT3JkZXJC",
            "eRgDIAEoCRITCgtPcmRlckJ5RGVzYxgEIAEoCRIPCgdJbmNsdWRlGAUgASgJ",
            "Eg4KBkZpZWxkcxgGIAEoCRIiCgRNZXRhGAcgAygLMhQuUXVlcnlCYXNlLk1l",
            "dGFFbnRyeRJNCh9RdWVyeURiX1JvY2tzdGFyX0N1c3RvbVJvY2tzdGFyGPyw",
            "YSABKAsyIC5RdWVyeURiX1JvY2tzdGFyX0N1c3RvbVJvY2tzdGFySAASKgoN",
            "UXVlcnlEYl9Nb3ZpZRiT8r0/IAEoCzIOLlF1ZXJ5RGJfTW92aWVIABJCChlR",
            "dWVyeURiX1JvY2tzdGFyUmVmZXJlbmNlGKqT2EIgASgLMhouUXVlcnlEYl9S",
            "b2Nrc3RhclJlZmVyZW5jZUgAEjEKEFF1ZXJ5RGJfUm9ja3N0YXIYyfjB1QEg",
            "ASgLMhEuUXVlcnlEYl9Sb2Nrc3RhckgAGisKCU1ldGFFbnRyeRILCgNrZXkY",
            "ASABKAkSDQoFdmFsdWUYAiABKAk6AjgBQgkKB3N1YnR5cGUiKgobUXVlcnlD",
            "YXNlSW5zZW5zaXRpdmVPcmRlckJ5EgsKA0FnZRgBIAEoBSIbChlRdWVyeUNo",
            "YW5nZUNvbm5lY3Rpb25JbmZvIi0KHlF1ZXJ5Q3VzdG9tUm9ja3N0YXJzUmVm",
            "ZXJlbmNlcxILCgNBZ2UYASABKAUiRAoNUXVlcnlEYl9Nb3ZpZRIoCgxTdHJl",
            "YW1Nb3ZpZXMYmIGxeSABKAsyDS5TdHJlYW1Nb3ZpZXNIAEIJCgdzdWJ0eXBl",
            "IuoBChBRdWVyeURiX1JvY2tzdGFyEkIKGVF1ZXJ5Q2hhbmdlQ29ubmVjdGlv",
            "bkluZm8Y5/yfFyABKAsyGi5RdWVyeUNoYW5nZUNvbm5lY3Rpb25JbmZvSAAS",
            "PgoXUXVlcnlPdmVycmlkZWRSb2Nrc3RhcnMYs5CdOSABKAsyGC5RdWVyeU92",
            "ZXJyaWRlZFJvY2tzdGFyc0gAEkcKG1F1ZXJ5Q2FzZUluc2Vuc2l0aXZlT3Jk",
            "ZXJCeRi7uo/LASABKAsyHC5RdWVyeUNhc2VJbnNlbnNpdGl2ZU9yZGVyQnlI",
            "AEIJCgdzdWJ0eXBlInUKGVF1ZXJ5RGJfUm9ja3N0YXJSZWZlcmVuY2USTQoe",
            "UXVlcnlDdXN0b21Sb2Nrc3RhcnNSZWZlcmVuY2VzGNTg27MBIAEoCzIfLlF1",
            "ZXJ5Q3VzdG9tUm9ja3N0YXJzUmVmZXJlbmNlc0gAQgkKB3N1YnR5cGUizgEK",
            "H1F1ZXJ5RGJfUm9ja3N0YXJfQ3VzdG9tUm9ja3N0YXISUwohUXVlcnlSb2Nr",
            "c3RhckFsYnVtc0N1c3RvbUxlZnRKb2luGIei9bwBIAEoCzIiLlF1ZXJ5Um9j",
            "a3N0YXJBbGJ1bXNDdXN0b21MZWZ0Sm9pbkgAEksKHVF1ZXJ5T3ZlcnJpZGVk",
            "Q3VzdG9tUm9ja3N0YXJzGMO8kdMBIAEoCzIeLlF1ZXJ5T3ZlcnJpZGVkQ3Vz",
            "dG9tUm9ja3N0YXJzSABCCQoHc3VidHlwZSIsCh1RdWVyeU92ZXJyaWRlZEN1",
            "c3RvbVJvY2tzdGFycxILCgNBZ2UYASABKAUiJgoXUXVlcnlPdmVycmlkZWRS",
            "b2Nrc3RhcnMSCwoDQWdlGAEgASgFIuwBChxRdWVyeVJlc3BvbnNlX0N1c3Rv",
            "bVJvY2tzdGFyEg4KBk9mZnNldBgBIAEoBRINCgVUb3RhbBgCIAEoBRIgCgdS",
            "ZXN1bHRzGAMgAygLMg8uQ3VzdG9tUm9ja3N0YXISNQoETWV0YRgEIAMoCzIn",
            "LlF1ZXJ5UmVzcG9uc2VfQ3VzdG9tUm9ja3N0YXIuTWV0YUVudHJ5EicKDlJl",
            "c3BvbnNlU3RhdHVzGAUgASgLMg8uUmVzcG9uc2VTdGF0dXMaKwoJTWV0YUVu",
            "dHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEi0QEKE1F1ZXJ5",
            "UmVzcG9uc2VfTW92aWUSDgoGT2Zmc2V0GAEgASgFEg0KBVRvdGFsGAIgASgF",
            "EhcKB1Jlc3VsdHMYAyADKAsyBi5Nb3ZpZRIsCgRNZXRhGAQgAygLMh4uUXVl",
            "cnlSZXNwb25zZV9Nb3ZpZS5NZXRhRW50cnkSJwoOUmVzcG9uc2VTdGF0dXMY",
            "BSABKAsyDy5SZXNwb25zZVN0YXR1cxorCglNZXRhRW50cnkSCwoDa2V5GAEg",
            "ASgJEg0KBXZhbHVlGAIgASgJOgI4ASLaAQoWUXVlcnlSZXNwb25zZV9Sb2Nr",
            "c3RhchIOCgZPZmZzZXQYASABKAUSDQoFVG90YWwYAiABKAUSGgoHUmVzdWx0",
            "cxgDIAMoCzIJLlJvY2tzdGFyEi8KBE1ldGEYBCADKAsyIS5RdWVyeVJlc3Bv",
            "bnNlX1JvY2tzdGFyLk1ldGFFbnRyeRInCg5SZXNwb25zZVN0YXR1cxgFIAEo",
            "CzIPLlJlc3BvbnNlU3RhdHVzGisKCU1ldGFFbnRyeRILCgNrZXkYASABKAkS",
            "DQoFdmFsdWUYAiABKAk6AjgBIvUBCh9RdWVyeVJlc3BvbnNlX1JvY2tzdGFy",
            "UmVmZXJlbmNlEg4KBk9mZnNldBgBIAEoBRINCgVUb3RhbBgCIAEoBRIjCgdS",
            "ZXN1bHRzGAMgAygLMhIuUm9ja3N0YXJSZWZlcmVuY2USOAoETWV0YRgEIAMo",
            "CzIqLlF1ZXJ5UmVzcG9uc2VfUm9ja3N0YXJSZWZlcmVuY2UuTWV0YUVudHJ5",
            "EicKDlJlc3BvbnNlU3RhdHVzGAUgASgLMg8uUmVzcG9uc2VTdGF0dXMaKwoJ",
            "TWV0YUVudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEiWQoh",
            "UXVlcnlSb2Nrc3RhckFsYnVtc0N1c3RvbUxlZnRKb2luEgsKA0FnZRgBIAEo",
            "BRIRCglBbGJ1bU5hbWUYAiABKAkSFAoMSWROb3RFcXVhbFRvGAMgASgFIoEB",
            "ChFSZWdlbmVyYXRlQXBpS2V5cxITCgtFbnZpcm9ubWVudBgBIAEoCRIqCgRN",
            "ZXRhGAIgAygLMhwuUmVnZW5lcmF0ZUFwaUtleXMuTWV0YUVudHJ5GisKCU1l",
            "dGFFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIsMBChlS",
            "ZWdlbmVyYXRlQXBpS2V5c1Jlc3BvbnNlEhwKB1Jlc3VsdHMYASADKAsyCy5V",
            "c2VyQXBpS2V5EjIKBE1ldGEYAiADKAsyJC5SZWdlbmVyYXRlQXBpS2V5c1Jl",
            "c3BvbnNlLk1ldGFFbnRyeRInCg5SZXNwb25zZVN0YXR1cxgDIAEoCzIPLlJl",
            "c3BvbnNlU3RhdHVzGisKCU1ldGFFbnRyeRILCgNrZXkYASABKAkSDQoFdmFs",
            "dWUYAiABKAk6AjgBIpgCCghSZWdpc3RlchIQCghVc2VyTmFtZRgBIAEoCRIR",
            "CglGaXJzdE5hbWUYAiABKAkSEAoITGFzdE5hbWUYAyABKAkSEwoLRGlzcGxh",
            "eU5hbWUYBCABKAkSDQoFRW1haWwYBSABKAkSEAoIUGFzc3dvcmQYBiABKAkS",
            "FwoPQ29uZmlybVBhc3N3b3JkGAcgASgJEhEKCUF1dG9Mb2dpbhgIIAEoCBIQ",
            "CghDb250aW51ZRgJIAEoCRIRCglFcnJvclZpZXcYCiABKAkSIQoETWV0YRgL",
            "IAMoCzITLlJlZ2lzdGVyLk1ldGFFbnRyeRorCglNZXRhRW50cnkSCwoDa2V5",
            "GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASKIAgoQUmVnaXN0ZXJSZXNwb25z",
            "ZRIOCgZVc2VySWQYASABKAkSEQoJU2Vzc2lvbklkGAIgASgJEhAKCFVzZXJO",
            "YW1lGAMgASgJEhMKC1JlZmVycmVyVXJsGAQgASgJEhMKC0JlYXJlclRva2Vu",
            "GAUgASgJEhQKDFJlZnJlc2hUb2tlbhgGIAEoCRInCg5SZXNwb25zZVN0YXR1",
            "cxgHIAEoCzIPLlJlc3BvbnNlU3RhdHVzEikKBE1ldGEYCCADKAsyGy5SZWdp",
            "c3RlclJlc3BvbnNlLk1ldGFFbnRyeRorCglNZXRhRW50cnkSCwoDa2V5GAEg",
            "ASgJEg0KBXZhbHVlGAIgASgJOgI4ASIxCgxSZXF1aXJlc0F1dGgSDAoETmFt",
            "ZRgBIAEoCRITCgtCZWFyZXJUb2tlbhgCIAEoCSIMCgpSZXNldFRvZG9zIpsB",
            "Cg1SZXNwb25zZUVycm9yEhEKCUVycm9yQ29kZRgBIAEoCRIRCglGaWVsZE5h",
            "bWUYAiABKAkSDwoHTWVzc2FnZRgDIAEoCRImCgRNZXRhGAQgAygLMhguUmVz",
            "cG9uc2VFcnJvci5NZXRhRW50cnkaKwoJTWV0YUVudHJ5EgsKA2tleRgBIAEo",
            "CRINCgV2YWx1ZRgCIAEoCToCOAEivgEKDlJlc3BvbnNlU3RhdHVzEhEKCUVy",
            "cm9yQ29kZRgBIAEoCRIPCgdNZXNzYWdlGAIgASgJEhIKClN0YWNrVHJhY2UY",
            "AyABKAkSHgoGRXJyb3JzGAQgAygLMg4uUmVzcG9uc2VFcnJvchInCgRNZXRh",
            "GAUgAygLMhkuUmVzcG9uc2VTdGF0dXMuTWV0YUVudHJ5GisKCU1ldGFFbnRy",
            "eRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIrIBCghSb2Nrc3Rh",
            "chIKCgJJZBgBIAEoBRIRCglGaXJzdE5hbWUYAiABKAkSEAoITGFzdE5hbWUY",
            "AyABKAkSCwoDQWdlGAQgASgFEiIKC0RhdGVPZkJpcnRoGAUgASgLMg0uYmNs",
            "LkRhdGVUaW1lEh8KCERhdGVEaWVkGAYgASgLMg0uYmNsLkRhdGVUaW1lEiMK",
            "DExpdmluZ1N0YXR1cxgHIAEoDjINLkxpdmluZ1N0YXR1cyJMCg1Sb2Nrc3Rh",
            "ckFsYnVtEgoKAklkGAEgASgFEhIKClJvY2tzdGFySWQYAiABKAUSDAoETmFt",
            "ZRgDIAEoCRINCgVHZW5yZRgEIAEoCSJxChFSb2Nrc3RhclJlZmVyZW5jZRIK",
            "CgJJZBgBIAEoBRIRCglGaXJzdE5hbWUYAiABKAkSEAoITGFzdE5hbWUYAyAB",
            "KAkSCwoDQWdlGAQgASgFEh4KBkFsYnVtcxgFIAMoCzIOLlJvY2tzdGFyQWxi",
            "dW0iFwoHU2VjdXJlZBIMCgROYW1lGAEgASgJIkoKD1NlY3VyZWRSZXNwb25z",
            "ZRIOCgZSZXN1bHQYASABKAkSJwoOUmVzcG9uc2VTdGF0dXMYAiABKAsyDy5S",
            "ZXNwb25zZVN0YXR1cyIcCgtTdHJlYW1GaWxlcxINCgVQYXRocxgBIAMoCSIf",
            "CgxTdHJlYW1Nb3ZpZXMSDwoHUmF0aW5ncxgBIAMoCSImChJTdHJlYW1TZXJ2",
            "ZXJFdmVudHMSEAoIQ2hhbm5lbHMYASADKAkimwQKGlN0cmVhbVNlcnZlckV2",
            "ZW50c1Jlc3BvbnNlEg8KB0V2ZW50SWQYASABKAMSDwoHQ2hhbm5lbBgCIAEo",
            "CRIQCghTZWxlY3RvchgEIAEoCRIMCgRKc29uGAUgASgJEgoKAk9wGAYgASgJ",
            "Eg4KBlRhcmdldBgHIAEoCRITCgtDc3NTZWxlY3RvchgIIAEoCRIzCgRNZXRh",
            "GAkgAygLMiUuU3RyZWFtU2VydmVyRXZlbnRzUmVzcG9uc2UuTWV0YUVudHJ5",
            "Eg4KBlVzZXJJZBgKIAEoCRITCgtEaXNwbGF5TmFtZRgLIAEoCRISCgpQcm9m",
            "aWxlVXJsGAwgASgJEhcKD0lzQXV0aGVudGljYXRlZBgNIAEoCBIQCghDaGFu",
            "bmVscxgOIAMoCRIRCglDcmVhdGVkQXQYDyABKAMSCgoCSWQYFSABKAkSFQoN",
            "VW5SZWdpc3RlclVybBgWIAEoCRIbChNVcGRhdGVTdWJzY3JpYmVyVXJsGBcg",
            "ASgJEhQKDEhlYXJ0YmVhdFVybBgYIAEoCRIbChNIZWFydGJlYXRJbnRlcnZh",
            "bE1zGBkgASgDEhUKDUlkbGVUaW1lb3V0TXMYGiABKAMSJwoOUmVzcG9uc2VT",
            "dGF0dXMYHiABKAsyDy5SZXNwb25zZVN0YXR1cxorCglNZXRhRW50cnkSCwoD",
            "a2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASIYCgVUaHJvdxIPCgdNZXNz",
            "YWdlGAEgASgJIg0KC1Rocm93Q3VzdG9tIj4KE1Rocm93Q3VzdG9tUmVzcG9u",
            "c2USJwoOUmVzcG9uc2VTdGF0dXMYASABKAsyDy5SZXNwb25zZVN0YXR1cyIc",
            "CglUaHJvd1ZvaWQSDwoHTWVzc2FnZRgBIAEoCSJDCgRUb2RvEgoKAklkGAEg",
            "ASgDEg0KBVRpdGxlGAIgASgJEg0KBU9yZGVyGAMgASgFEhEKCUNvbXBsZXRl",
            "ZBgEIAEoCCLnAgoRVHJpZ2dlclZhbGlkYXRvcnMSEgoKQ3JlZGl0Q2FyZBgB",
            "IAEoCRINCgVFbWFpbBgCIAEoCRINCgVFbXB0eRgDIAEoCRINCgVFcXVhbBgE",
            "IAEoCRIYChBFeGNsdXNpdmVCZXR3ZWVuGAUgASgFEhoKEkdyZWF0ZXJUaGFu",
            "T3JFcXVhbBgGIAEoBRITCgtHcmVhdGVyVGhhbhgHIAEoBRIYChBJbmNsdXNp",
            "dmVCZXR3ZWVuGAggASgFEg4KBkxlbmd0aBgJIAEoCRIXCg9MZXNzVGhhbk9y",
            "RXF1YWwYCiABKAUSEAoITGVzc1RoYW4YCyABKAUSEAoITm90RW1wdHkYDCAB",
            "KAkSEAoITm90RXF1YWwYDSABKAkSDAoETnVsbBgOIAEoCRIZChFSZWd1bGFy",
            "RXhwcmVzc2lvbhgPIAEoCRIkCg5TY2FsZVByZWNpc2lvbhgQIAEoCzIMLmJj",
            "bC5EZWNpbWFsIpoBCg1VbkFzc2lnblJvbGVzEhAKCFVzZXJOYW1lGAEgASgJ",
            "EhMKC1Blcm1pc3Npb25zGAIgAygJEg0KBVJvbGVzGAMgAygJEiYKBE1ldGEY",
            "BCADKAsyGC5VbkFzc2lnblJvbGVzLk1ldGFFbnRyeRorCglNZXRhRW50cnkS",
            "CwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASLHAQoVVW5Bc3NpZ25S",
            "b2xlc1Jlc3BvbnNlEhAKCEFsbFJvbGVzGAEgAygJEhYKDkFsbFBlcm1pc3Np",
            "b25zGAIgAygJEi4KBE1ldGEYAyADKAsyIC5VbkFzc2lnblJvbGVzUmVzcG9u",
            "c2UuTWV0YUVudHJ5EicKDlJlc3BvbnNlU3RhdHVzGAQgASgLMg8uUmVzcG9u",
            "c2VTdGF0dXMaKwoJTWV0YUVudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgC",
            "IAEoCToCOAEiSQoKVXBkYXRlVG9kbxIKCgJJZBgBIAEoAxINCgVUaXRsZRgC",
            "IAEoCRINCgVPcmRlchgDIAEoBRIRCglDb21wbGV0ZWQYBCABKAginwEKClVz",
            "ZXJBcGlLZXkSCwoDS2V5GAEgASgJEg8KB0tleVR5cGUYAiABKAkSIQoKRXhw",
            "aXJ5RGF0ZRgDIAEoCzINLmJjbC5EYXRlVGltZRIjCgRNZXRhGAQgAygLMhUu",
            "VXNlckFwaUtleS5NZXRhRW50cnkaKwoJTWV0YUVudHJ5EgsKA2tleRgBIAEo",
            "CRINCgV2YWx1ZRgCIAEoCToCOAEqIwoMTGl2aW5nU3RhdHVzEgkKBUFsaXZl",
            "EAASCAoERGVhZBABMpUaCgxHcnBjU2VydmljZXMSLAoMR2V0QWRkSGVhZGVy",
            "EgouQWRkSGVhZGVyGg4uRW1wdHlSZXNwb25zZSIAEioKC0dldEFueUhlbGxv",
            "EgkuQW55SGVsbG8aDi5IZWxsb1Jlc3BvbnNlIgASKwoMUG9zdEFueUhlbGxv",
            "EgkuQW55SGVsbG8aDi5IZWxsb1Jlc3BvbnNlIgASKgoLUHV0QW55SGVsbG8S",
            "CS5BbnlIZWxsbxoOLkhlbGxvUmVzcG9uc2UiABItCg5EZWxldGVBbnlIZWxs",
            "bxIJLkFueUhlbGxvGg4uSGVsbG9SZXNwb25zZSIAEiwKDVBhdGNoQW55SGVs",
            "bG8SCS5BbnlIZWxsbxoOLkhlbGxvUmVzcG9uc2UiABI3Cg9Qb3N0QXNzaWdu",
            "Um9sZXMSDC5Bc3NpZ25Sb2xlcxoULkFzc2lnblJvbGVzUmVzcG9uc2UiABI9",
            "ChNPcHRpb25zQXV0aGVudGljYXRlEg0uQXV0aGVudGljYXRlGhUuQXV0aGVu",
            "dGljYXRlUmVzcG9uc2UiABI5Cg9HZXRBdXRoZW50aWNhdGUSDS5BdXRoZW50",
            "aWNhdGUaFS5BdXRoZW50aWNhdGVSZXNwb25zZSIAEjoKEFBvc3RBdXRoZW50",
            "aWNhdGUSDS5BdXRoZW50aWNhdGUaFS5BdXRoZW50aWNhdGVSZXNwb25zZSIA",
            "EjwKEkRlbGV0ZUF1dGhlbnRpY2F0ZRINLkF1dGhlbnRpY2F0ZRoVLkF1dGhl",
            "bnRpY2F0ZVJlc3BvbnNlIgASRQoXR2V0Q2hhbmdlQ29ubmVjdGlvbkluZm8S",
            "FS5DaGFuZ2VDb25uZWN0aW9uSW5mbxoRLkNoYW5nZURiUmVzcG9uc2UiABIt",
            "CgtHZXRDaGFuZ2VEYhIJLkNoYW5nZURiGhEuQ2hhbmdlRGJSZXNwb25zZSIA",
            "ElUKGVBvc3RDb252ZXJ0U2Vzc2lvblRvVG9rZW4SFi5Db252ZXJ0U2Vzc2lv",
            "blRvVG9rZW4aHi5Db252ZXJ0U2Vzc2lvblRvVG9rZW5SZXNwb25zZSIAEjQK",
            "DlBvc3RDcmVhdGVUb2RvEgsuQ3JlYXRlVG9kbxoTLkNyZWF0ZVRvZG9SZXNw",
            "b25zZSIAEi8KDkNhbGxEZWxldGVUb2RvEgsuRGVsZXRlVG9kbxoOLkVtcHR5",
            "UmVzcG9uc2UiABIxCg9DYWxsRGVsZXRlVG9kb3MSDC5EZWxldGVUb2RvcxoO",
            "LkVtcHR5UmVzcG9uc2UiABJAChJQb3N0R2V0QWNjZXNzVG9rZW4SDy5HZXRB",
            "Y2Nlc3NUb2tlbhoXLkdldEFjY2Vzc1Rva2VuUmVzcG9uc2UiABI0Cg5DYWxs",
            "R2V0QXBpS2V5cxILLkdldEFwaUtleXMaEy5HZXRBcGlLZXlzUmVzcG9uc2Ui",
            "ABIrCgxDYWxsR2V0SGVsbG8SCS5HZXRIZWxsbxoOLkhlbGxvUmVzcG9uc2Ui",
            "ABIrCgtDYWxsR2V0VG9kbxIILkdldFRvZG8aEC5HZXRUb2RvUmVzcG9uc2Ui",
            "ABIuCgxDYWxsR2V0VG9kb3MSCS5HZXRUb2RvcxoRLkdldFRvZG9zUmVzcG9u",
            "c2UiABItCgtHZXRIZWxsb0p3dBIJLkhlbGxvSnd0GhEuSGVsbG9Kd3RSZXNw",
            "b25zZSIAEi4KDFBvc3RIZWxsb0p3dBIJLkhlbGxvSnd0GhEuSGVsbG9Kd3RS",
            "ZXNwb25zZSIAEi0KC1B1dEhlbGxvSnd0EgkuSGVsbG9Kd3QaES5IZWxsb0p3",
            "dFJlc3BvbnNlIgASMAoORGVsZXRlSGVsbG9Kd3QSCS5IZWxsb0p3dBoRLkhl",
            "bGxvSnd0UmVzcG9uc2UiABIvCg1QYXRjaEhlbGxvSnd0EgkuSGVsbG9Kd3Qa",
            "ES5IZWxsb0p3dFJlc3BvbnNlIgASIgoHR2V0SW5jchIFLkluY3IaDi5FbXB0",
            "eVJlc3BvbnNlIgASIwoIUG9zdEluY3ISBS5JbmNyGg4uRW1wdHlSZXNwb25z",
            "ZSIAEiIKB1B1dEluY3ISBS5JbmNyGg4uRW1wdHlSZXNwb25zZSIAEiUKCkRl",
            "bGV0ZUluY3ISBS5JbmNyGg4uRW1wdHlSZXNwb25zZSIAEiQKCVBhdGNoSW5j",
            "chIFLkluY3IaDi5FbXB0eVJlc3BvbnNlIgASLgoMUG9zdE11bHRpcGx5Egku",
            "TXVsdGlwbHkaES5NdWx0aXBseVJlc3BvbnNlIgASOwoVQ2FsbFBvc3RDaGF0",
            "VG9DaGFubmVsEhIuUG9zdENoYXRUb0NoYW5uZWwaDC5DaGF0TWVzc2FnZSIA",
            "ElkKHkdldFF1ZXJ5Q2FzZUluc2Vuc2l0aXZlT3JkZXJCeRIcLlF1ZXJ5Q2Fz",
            "ZUluc2Vuc2l0aXZlT3JkZXJCeRoXLlF1ZXJ5UmVzcG9uc2VfUm9ja3N0YXIi",
            "ABJVChxHZXRRdWVyeUNoYW5nZUNvbm5lY3Rpb25JbmZvEhouUXVlcnlDaGFu",
            "Z2VDb25uZWN0aW9uSW5mbxoXLlF1ZXJ5UmVzcG9uc2VfUm9ja3N0YXIiABJo",
            "CiFHZXRRdWVyeUN1c3RvbVJvY2tzdGFyc1JlZmVyZW5jZXMSHy5RdWVyeUN1",
            "c3RvbVJvY2tzdGFyc1JlZmVyZW5jZXMaIC5RdWVyeVJlc3BvbnNlX1JvY2tz",
            "dGFyUmVmZXJlbmNlIgASYwogR2V0UXVlcnlPdmVycmlkZWRDdXN0b21Sb2Nr",
            "c3RhcnMSHi5RdWVyeU92ZXJyaWRlZEN1c3RvbVJvY2tzdGFycxodLlF1ZXJ5",
            "UmVzcG9uc2VfQ3VzdG9tUm9ja3N0YXIiABJRChpHZXRRdWVyeU92ZXJyaWRl",
            "ZFJvY2tzdGFycxIYLlF1ZXJ5T3ZlcnJpZGVkUm9ja3N0YXJzGhcuUXVlcnlS",
            "ZXNwb25zZV9Sb2Nrc3RhciIAEmsKJEdldFF1ZXJ5Um9ja3N0YXJBbGJ1bXND",
            "dXN0b21MZWZ0Sm9pbhIiLlF1ZXJ5Um9ja3N0YXJBbGJ1bXNDdXN0b21MZWZ0",
            "Sm9pbhodLlF1ZXJ5UmVzcG9uc2VfQ3VzdG9tUm9ja3N0YXIiABJJChVQb3N0",
            "UmVnZW5lcmF0ZUFwaUtleXMSEi5SZWdlbmVyYXRlQXBpS2V5cxoaLlJlZ2Vu",
            "ZXJhdGVBcGlLZXlzUmVzcG9uc2UiABItCgtQdXRSZWdpc3RlchIJLlJlZ2lz",
            "dGVyGhEuUmVnaXN0ZXJSZXNwb25zZSIAEi4KDFBvc3RSZWdpc3RlchIJLlJl",
            "Z2lzdGVyGhEuUmVnaXN0ZXJSZXNwb25zZSIAEjEKD0dldFJlcXVpcmVzQXV0",
            "aBINLlJlcXVpcmVzQXV0aBoNLlJlcXVpcmVzQXV0aCIAEjIKEFBvc3RSZXF1",
            "aXJlc0F1dGgSDS5SZXF1aXJlc0F1dGgaDS5SZXF1aXJlc0F1dGgiABIxCg9Q",
            "dXRSZXF1aXJlc0F1dGgSDS5SZXF1aXJlc0F1dGgaDS5SZXF1aXJlc0F1dGgi",
            "ABI0ChJEZWxldGVSZXF1aXJlc0F1dGgSDS5SZXF1aXJlc0F1dGgaDS5SZXF1",
            "aXJlc0F1dGgiABIzChFQYXRjaFJlcXVpcmVzQXV0aBINLlJlcXVpcmVzQXV0",
            "aBoNLlJlcXVpcmVzQXV0aCIAEi8KDlBvc3RSZXNldFRvZG9zEgsuUmVzZXRU",
            "b2RvcxoOLkVtcHR5UmVzcG9uc2UiABIrCgtQb3N0U2VjdXJlZBIILlNlY3Vy",
            "ZWQaEC5TZWN1cmVkUmVzcG9uc2UiABIzChFTZXJ2ZXJTdHJlYW1GaWxlcxIM",
            "LlN0cmVhbUZpbGVzGgwuRmlsZUNvbnRlbnQiADABEjgKD0dldFN0cmVhbU1v",
            "dmllcxINLlN0cmVhbU1vdmllcxoULlF1ZXJ5UmVzcG9uc2VfTW92aWUiABJQ",
            "ChhTZXJ2ZXJTdHJlYW1TZXJ2ZXJFdmVudHMSEy5TdHJlYW1TZXJ2ZXJFdmVu",
            "dHMaGy5TdHJlYW1TZXJ2ZXJFdmVudHNSZXNwb25zZSIAMAESJAoIR2V0VGhy",
            "b3cSBi5UaHJvdxoOLkhlbGxvUmVzcG9uc2UiABI2Cg5HZXRUaHJvd0N1c3Rv",
            "bRIMLlRocm93Q3VzdG9tGhQuVGhyb3dDdXN0b21SZXNwb25zZSIAEiwKDEdl",
            "dFRocm93Vm9pZBIKLlRocm93Vm9pZBoOLkVtcHR5UmVzcG9uc2UiABI9ChVQ",
            "b3N0VHJpZ2dlclZhbGlkYXRvcnMSEi5UcmlnZ2VyVmFsaWRhdG9ycxoOLkVt",
            "cHR5UmVzcG9uc2UiABI9ChFQb3N0VW5Bc3NpZ25Sb2xlcxIOLlVuQXNzaWdu",
            "Um9sZXMaFi5VbkFzc2lnblJvbGVzUmVzcG9uc2UiABIuCg1QdXRVcGRhdGVU",
            "b2RvEgsuVXBkYXRlVG9kbxoOLkVtcHR5UmVzcG9uc2UiAEJOqgIkU2Vydmlj",
            "ZVN0YWNrLkV4dGVuc2lvbnMuVGVzdHMuUHJvdG9jygIkU2VydmljZVN0YWNr",
            "LkV4dGVuc2lvbnMuVGVzdHMuUHJvdG9jYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::ProtoBuf.Bcl.BclReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::ServiceStack.Extensions.Tests.Protoc.LivingStatus), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.AddHeader), global::ServiceStack.Extensions.Tests.Protoc.AddHeader.Parser, new[]{ "Name", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.AnyHello), global::ServiceStack.Extensions.Tests.Protoc.AnyHello.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.AssignRoles), global::ServiceStack.Extensions.Tests.Protoc.AssignRoles.Parser, new[]{ "UserName", "Permissions", "Roles", "Meta" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.AssignRolesResponse), global::ServiceStack.Extensions.Tests.Protoc.AssignRolesResponse.Parser, new[]{ "AllRoles", "AllPermissions", "Meta", "ResponseStatus" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.Authenticate), global::ServiceStack.Extensions.Tests.Protoc.Authenticate.Parser, new[]{ "Provider", "State", "OauthToken", "OauthVerifier", "UserName", "Password", "RememberMe", "Continue", "ErrorView", "Nonce", "Uri", "Response", "Qop", "Nc", "Cnonce", "UseTokenCookie", "AccessToken", "AccessTokenSecret", "Scope", "Meta" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.AuthenticateResponse), global::ServiceStack.Extensions.Tests.Protoc.AuthenticateResponse.Parser, new[]{ "UserId", "SessionId", "UserName", "DisplayName", "ReferrerUrl", "BearerToken", "RefreshToken", "ProfileUrl", "Roles", "Permissions", "ResponseStatus", "Meta" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.ChangeConnectionInfo), global::ServiceStack.Extensions.Tests.Protoc.ChangeConnectionInfo.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.ChangeDb), global::ServiceStack.Extensions.Tests.Protoc.ChangeDb.Parser, new[]{ "NamedConnection", "ConnectionString", "ProviderName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.ChangeDbResponse), global::ServiceStack.Extensions.Tests.Protoc.ChangeDbResponse.Parser, new[]{ "Results" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.ChatMessage), global::ServiceStack.Extensions.Tests.Protoc.ChatMessage.Parser, new[]{ "Id", "Channel", "FromUserId", "FromName", "DisplayName", "Message", "UserAuthId", "Private" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.ConvertSessionToToken), global::ServiceStack.Extensions.Tests.Protoc.ConvertSessionToToken.Parser, new[]{ "PreserveSession", "Meta" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.ConvertSessionToTokenResponse), global::ServiceStack.Extensions.Tests.Protoc.ConvertSessionToTokenResponse.Parser, new[]{ "Meta", "AccessToken", "RefreshToken", "ResponseStatus" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.CreateTodo), global::ServiceStack.Extensions.Tests.Protoc.CreateTodo.Parser, new[]{ "Title", "Order" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.CreateTodoResponse), global::ServiceStack.Extensions.Tests.Protoc.CreateTodoResponse.Parser, new[]{ "Result", "ResponseStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.CustomRockstar), global::ServiceStack.Extensions.Tests.Protoc.CustomRockstar.Parser, new[]{ "FirstName", "LastName", "Age", "RockstarAlbumName", "RockstarGenreName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.DeleteTodo), global::ServiceStack.Extensions.Tests.Protoc.DeleteTodo.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.DeleteTodos), global::ServiceStack.Extensions.Tests.Protoc.DeleteTodos.Parser, new[]{ "Ids" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.EmptyResponse), global::ServiceStack.Extensions.Tests.Protoc.EmptyResponse.Parser, new[]{ "ResponseStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.FileContent), global::ServiceStack.Extensions.Tests.Protoc.FileContent.Parser, new[]{ "Name", "Type", "Length", "Body", "ResponseStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.GetAccessToken), global::ServiceStack.Extensions.Tests.Protoc.GetAccessToken.Parser, new[]{ "RefreshToken", "UseTokenCookie", "Meta" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.GetAccessTokenResponse), global::ServiceStack.Extensions.Tests.Protoc.GetAccessTokenResponse.Parser, new[]{ "AccessToken", "Meta", "ResponseStatus" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.GetApiKeys), global::ServiceStack.Extensions.Tests.Protoc.GetApiKeys.Parser, new[]{ "Environment", "Meta" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.GetApiKeysResponse), global::ServiceStack.Extensions.Tests.Protoc.GetApiKeysResponse.Parser, new[]{ "Results", "Meta", "ResponseStatus" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.GetHello), global::ServiceStack.Extensions.Tests.Protoc.GetHello.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.GetTodo), global::ServiceStack.Extensions.Tests.Protoc.GetTodo.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.GetTodoResponse), global::ServiceStack.Extensions.Tests.Protoc.GetTodoResponse.Parser, new[]{ "Result", "ResponseStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.GetTodos), global::ServiceStack.Extensions.Tests.Protoc.GetTodos.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.GetTodosResponse), global::ServiceStack.Extensions.Tests.Protoc.GetTodosResponse.Parser, new[]{ "Results", "ResponseStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.HelloJwt), global::ServiceStack.Extensions.Tests.Protoc.HelloJwt.Parser, new[]{ "Name", "BearerToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.HelloJwtResponse), global::ServiceStack.Extensions.Tests.Protoc.HelloJwtResponse.Parser, new[]{ "Result", "ResponseStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.HelloResponse), global::ServiceStack.Extensions.Tests.Protoc.HelloResponse.Parser, new[]{ "Result", "ResponseStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.Incr), global::ServiceStack.Extensions.Tests.Protoc.Incr.Parser, new[]{ "Amount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.Movie), global::ServiceStack.Extensions.Tests.Protoc.Movie.Parser, new[]{ "Id", "ImdbId", "Title", "Rating", "Score", "Director", "ReleaseDate", "TagLine", "Genres" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.Multiply), global::ServiceStack.Extensions.Tests.Protoc.Multiply.Parser, new[]{ "X", "Y" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.MultiplyResponse), global::ServiceStack.Extensions.Tests.Protoc.MultiplyResponse.Parser, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.PostChatToChannel), global::ServiceStack.Extensions.Tests.Protoc.PostChatToChannel.Parser, new[]{ "From", "ToUserId", "Channel", "Message", "Selector" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryBase), global::ServiceStack.Extensions.Tests.Protoc.QueryBase.Parser, new[]{ "Skip", "Take", "OrderBy", "OrderByDesc", "Include", "Fields", "Meta", "QueryDbRockstarCustomRockstar", "QueryDbMovie", "QueryDbRockstarReference", "QueryDbRockstar" }, new[]{ "Subtype" }, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryCaseInsensitiveOrderBy), global::ServiceStack.Extensions.Tests.Protoc.QueryCaseInsensitiveOrderBy.Parser, new[]{ "Age" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryChangeConnectionInfo), global::ServiceStack.Extensions.Tests.Protoc.QueryChangeConnectionInfo.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryCustomRockstarsReferences), global::ServiceStack.Extensions.Tests.Protoc.QueryCustomRockstarsReferences.Parser, new[]{ "Age" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Movie), global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Movie.Parser, new[]{ "StreamMovies" }, new[]{ "Subtype" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Rockstar), global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Rockstar.Parser, new[]{ "QueryChangeConnectionInfo", "QueryOverridedRockstars", "QueryCaseInsensitiveOrderBy" }, new[]{ "Subtype" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryDb_RockstarReference), global::ServiceStack.Extensions.Tests.Protoc.QueryDb_RockstarReference.Parser, new[]{ "QueryCustomRockstarsReferences" }, new[]{ "Subtype" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Rockstar_CustomRockstar), global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Rockstar_CustomRockstar.Parser, new[]{ "QueryRockstarAlbumsCustomLeftJoin", "QueryOverridedCustomRockstars" }, new[]{ "Subtype" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryOverridedCustomRockstars), global::ServiceStack.Extensions.Tests.Protoc.QueryOverridedCustomRockstars.Parser, new[]{ "Age" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryOverridedRockstars), global::ServiceStack.Extensions.Tests.Protoc.QueryOverridedRockstars.Parser, new[]{ "Age" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryResponse_CustomRockstar), global::ServiceStack.Extensions.Tests.Protoc.QueryResponse_CustomRockstar.Parser, new[]{ "Offset", "Total", "Results", "Meta", "ResponseStatus" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryResponse_Movie), global::ServiceStack.Extensions.Tests.Protoc.QueryResponse_Movie.Parser, new[]{ "Offset", "Total", "Results", "Meta", "ResponseStatus" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryResponse_Rockstar), global::ServiceStack.Extensions.Tests.Protoc.QueryResponse_Rockstar.Parser, new[]{ "Offset", "Total", "Results", "Meta", "ResponseStatus" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryResponse_RockstarReference), global::ServiceStack.Extensions.Tests.Protoc.QueryResponse_RockstarReference.Parser, new[]{ "Offset", "Total", "Results", "Meta", "ResponseStatus" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarAlbumsCustomLeftJoin), global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarAlbumsCustomLeftJoin.Parser, new[]{ "Age", "AlbumName", "IdNotEqualTo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.RegenerateApiKeys), global::ServiceStack.Extensions.Tests.Protoc.RegenerateApiKeys.Parser, new[]{ "Environment", "Meta" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.RegenerateApiKeysResponse), global::ServiceStack.Extensions.Tests.Protoc.RegenerateApiKeysResponse.Parser, new[]{ "Results", "Meta", "ResponseStatus" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.Register), global::ServiceStack.Extensions.Tests.Protoc.Register.Parser, new[]{ "UserName", "FirstName", "LastName", "DisplayName", "Email", "Password", "ConfirmPassword", "AutoLogin", "Continue", "ErrorView", "Meta" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.RegisterResponse), global::ServiceStack.Extensions.Tests.Protoc.RegisterResponse.Parser, new[]{ "UserId", "SessionId", "UserName", "ReferrerUrl", "BearerToken", "RefreshToken", "ResponseStatus", "Meta" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.RequiresAuth), global::ServiceStack.Extensions.Tests.Protoc.RequiresAuth.Parser, new[]{ "Name", "BearerToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.ResetTodos), global::ServiceStack.Extensions.Tests.Protoc.ResetTodos.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.ResponseError), global::ServiceStack.Extensions.Tests.Protoc.ResponseError.Parser, new[]{ "ErrorCode", "FieldName", "Message", "Meta" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus), global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus.Parser, new[]{ "ErrorCode", "Message", "StackTrace", "Errors", "Meta" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.Rockstar), global::ServiceStack.Extensions.Tests.Protoc.Rockstar.Parser, new[]{ "Id", "FirstName", "LastName", "Age", "DateOfBirth", "DateDied", "LivingStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.RockstarAlbum), global::ServiceStack.Extensions.Tests.Protoc.RockstarAlbum.Parser, new[]{ "Id", "RockstarId", "Name", "Genre" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.RockstarReference), global::ServiceStack.Extensions.Tests.Protoc.RockstarReference.Parser, new[]{ "Id", "FirstName", "LastName", "Age", "Albums" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.Secured), global::ServiceStack.Extensions.Tests.Protoc.Secured.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.SecuredResponse), global::ServiceStack.Extensions.Tests.Protoc.SecuredResponse.Parser, new[]{ "Result", "ResponseStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.StreamFiles), global::ServiceStack.Extensions.Tests.Protoc.StreamFiles.Parser, new[]{ "Paths" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.StreamMovies), global::ServiceStack.Extensions.Tests.Protoc.StreamMovies.Parser, new[]{ "Ratings" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.StreamServerEvents), global::ServiceStack.Extensions.Tests.Protoc.StreamServerEvents.Parser, new[]{ "Channels" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.StreamServerEventsResponse), global::ServiceStack.Extensions.Tests.Protoc.StreamServerEventsResponse.Parser, new[]{ "EventId", "Channel", "Selector", "Json", "Op", "Target", "CssSelector", "Meta", "UserId", "DisplayName", "ProfileUrl", "IsAuthenticated", "Channels", "CreatedAt", "Id", "UnRegisterUrl", "UpdateSubscriberUrl", "HeartbeatUrl", "HeartbeatIntervalMs", "IdleTimeoutMs", "ResponseStatus" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.Throw), global::ServiceStack.Extensions.Tests.Protoc.Throw.Parser, new[]{ "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.ThrowCustom), global::ServiceStack.Extensions.Tests.Protoc.ThrowCustom.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.ThrowCustomResponse), global::ServiceStack.Extensions.Tests.Protoc.ThrowCustomResponse.Parser, new[]{ "ResponseStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.ThrowVoid), global::ServiceStack.Extensions.Tests.Protoc.ThrowVoid.Parser, new[]{ "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.Todo), global::ServiceStack.Extensions.Tests.Protoc.Todo.Parser, new[]{ "Id", "Title", "Order", "Completed" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.TriggerValidators), global::ServiceStack.Extensions.Tests.Protoc.TriggerValidators.Parser, new[]{ "CreditCard", "Email", "Empty", "Equal", "ExclusiveBetween", "GreaterThanOrEqual", "GreaterThan", "InclusiveBetween", "Length", "LessThanOrEqual", "LessThan", "NotEmpty", "NotEqual", "Null", "RegularExpression", "ScalePrecision" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.UnAssignRoles), global::ServiceStack.Extensions.Tests.Protoc.UnAssignRoles.Parser, new[]{ "UserName", "Permissions", "Roles", "Meta" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.UnAssignRolesResponse), global::ServiceStack.Extensions.Tests.Protoc.UnAssignRolesResponse.Parser, new[]{ "AllRoles", "AllPermissions", "Meta", "ResponseStatus" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.UpdateTodo), global::ServiceStack.Extensions.Tests.Protoc.UpdateTodo.Parser, new[]{ "Id", "Title", "Order", "Completed" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.UserApiKey), global::ServiceStack.Extensions.Tests.Protoc.UserApiKey.Parser, new[]{ "Key", "KeyType", "ExpiryDate", "Meta" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Enums
  public enum LivingStatus {
    [pbr::OriginalName("Alive")] Alive = 0,
    [pbr::OriginalName("Dead")] Dead = 1,
  }

  #endregion

  #region Messages
  public sealed partial class AddHeader : pb::IMessage<AddHeader> {
    private static readonly pb::MessageParser<AddHeader> _parser = new pb::MessageParser<AddHeader>(() => new AddHeader());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddHeader> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddHeader() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddHeader(AddHeader other) : this() {
      name_ = other.name_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddHeader Clone() {
      return new AddHeader(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Value" field.</summary>
    public const int ValueFieldNumber = 2;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddHeader);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddHeader other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddHeader other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AnyHello : pb::IMessage<AnyHello> {
    private static readonly pb::MessageParser<AnyHello> _parser = new pb::MessageParser<AnyHello>(() => new AnyHello());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AnyHello> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnyHello() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnyHello(AnyHello other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnyHello Clone() {
      return new AnyHello(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AnyHello);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AnyHello other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AnyHello other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AssignRoles : pb::IMessage<AssignRoles> {
    private static readonly pb::MessageParser<AssignRoles> _parser = new pb::MessageParser<AssignRoles>(() => new AssignRoles());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AssignRoles> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssignRoles() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssignRoles(AssignRoles other) : this() {
      userName_ = other.userName_;
      permissions_ = other.permissions_.Clone();
      roles_ = other.roles_.Clone();
      meta_ = other.meta_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssignRoles Clone() {
      return new AssignRoles(this);
    }

    /// <summary>Field number for the "UserName" field.</summary>
    public const int UserNameFieldNumber = 1;
    private string userName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Permissions" field.</summary>
    public const int PermissionsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_permissions_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> permissions_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Permissions {
      get { return permissions_; }
    }

    /// <summary>Field number for the "Roles" field.</summary>
    public const int RolesFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_roles_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> roles_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Roles {
      get { return roles_; }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AssignRoles);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AssignRoles other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserName != other.UserName) return false;
      if(!permissions_.Equals(other.permissions_)) return false;
      if(!roles_.Equals(other.roles_)) return false;
      if (!Meta.Equals(other.Meta)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      hash ^= permissions_.GetHashCode();
      hash ^= roles_.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserName);
      }
      permissions_.WriteTo(output, _repeated_permissions_codec);
      roles_.WriteTo(output, _repeated_roles_codec);
      meta_.WriteTo(output, _map_meta_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      size += permissions_.CalculateSize(_repeated_permissions_codec);
      size += roles_.CalculateSize(_repeated_roles_codec);
      size += meta_.CalculateSize(_map_meta_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AssignRoles other) {
      if (other == null) {
        return;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      permissions_.Add(other.permissions_);
      roles_.Add(other.roles_);
      meta_.Add(other.meta_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserName = input.ReadString();
            break;
          }
          case 18: {
            permissions_.AddEntriesFrom(input, _repeated_permissions_codec);
            break;
          }
          case 26: {
            roles_.AddEntriesFrom(input, _repeated_roles_codec);
            break;
          }
          case 34: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AssignRolesResponse : pb::IMessage<AssignRolesResponse> {
    private static readonly pb::MessageParser<AssignRolesResponse> _parser = new pb::MessageParser<AssignRolesResponse>(() => new AssignRolesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AssignRolesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssignRolesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssignRolesResponse(AssignRolesResponse other) : this() {
      allRoles_ = other.allRoles_.Clone();
      allPermissions_ = other.allPermissions_.Clone();
      meta_ = other.meta_.Clone();
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssignRolesResponse Clone() {
      return new AssignRolesResponse(this);
    }

    /// <summary>Field number for the "AllRoles" field.</summary>
    public const int AllRolesFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_allRoles_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> allRoles_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> AllRoles {
      get { return allRoles_; }
    }

    /// <summary>Field number for the "AllPermissions" field.</summary>
    public const int AllPermissionsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_allPermissions_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> allPermissions_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> AllPermissions {
      get { return allPermissions_; }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 3;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 26);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 4;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AssignRolesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AssignRolesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!allRoles_.Equals(other.allRoles_)) return false;
      if(!allPermissions_.Equals(other.allPermissions_)) return false;
      if (!Meta.Equals(other.Meta)) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= allRoles_.GetHashCode();
      hash ^= allPermissions_.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      allRoles_.WriteTo(output, _repeated_allRoles_codec);
      allPermissions_.WriteTo(output, _repeated_allPermissions_codec);
      meta_.WriteTo(output, _map_meta_codec);
      if (responseStatus_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += allRoles_.CalculateSize(_repeated_allRoles_codec);
      size += allPermissions_.CalculateSize(_repeated_allPermissions_codec);
      size += meta_.CalculateSize(_map_meta_codec);
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AssignRolesResponse other) {
      if (other == null) {
        return;
      }
      allRoles_.Add(other.allRoles_);
      allPermissions_.Add(other.allPermissions_);
      meta_.Add(other.meta_);
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            allRoles_.AddEntriesFrom(input, _repeated_allRoles_codec);
            break;
          }
          case 18: {
            allPermissions_.AddEntriesFrom(input, _repeated_allPermissions_codec);
            break;
          }
          case 26: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
          case 34: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Authenticate : pb::IMessage<Authenticate> {
    private static readonly pb::MessageParser<Authenticate> _parser = new pb::MessageParser<Authenticate>(() => new Authenticate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Authenticate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Authenticate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Authenticate(Authenticate other) : this() {
      provider_ = other.provider_;
      state_ = other.state_;
      oauthToken_ = other.oauthToken_;
      oauthVerifier_ = other.oauthVerifier_;
      userName_ = other.userName_;
      password_ = other.password_;
      rememberMe_ = other.rememberMe_;
      continue_ = other.continue_;
      errorView_ = other.errorView_;
      nonce_ = other.nonce_;
      uri_ = other.uri_;
      response_ = other.response_;
      qop_ = other.qop_;
      nc_ = other.nc_;
      cnonce_ = other.cnonce_;
      useTokenCookie_ = other.useTokenCookie_;
      accessToken_ = other.accessToken_;
      accessTokenSecret_ = other.accessTokenSecret_;
      scope_ = other.scope_;
      meta_ = other.meta_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Authenticate Clone() {
      return new Authenticate(this);
    }

    /// <summary>Field number for the "provider" field.</summary>
    public const int ProviderFieldNumber = 1;
    private string provider_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Provider {
      get { return provider_; }
      set {
        provider_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "State" field.</summary>
    public const int StateFieldNumber = 2;
    private string state_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string State {
      get { return state_; }
      set {
        state_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "oauth_token" field.</summary>
    public const int OauthTokenFieldNumber = 3;
    private string oauthToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OauthToken {
      get { return oauthToken_; }
      set {
        oauthToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "oauth_verifier" field.</summary>
    public const int OauthVerifierFieldNumber = 4;
    private string oauthVerifier_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OauthVerifier {
      get { return oauthVerifier_; }
      set {
        oauthVerifier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UserName" field.</summary>
    public const int UserNameFieldNumber = 5;
    private string userName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Password" field.</summary>
    public const int PasswordFieldNumber = 6;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RememberMe" field.</summary>
    public const int RememberMeFieldNumber = 7;
    private bool rememberMe_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool RememberMe {
      get { return rememberMe_; }
      set {
        rememberMe_ = value;
      }
    }

    /// <summary>Field number for the "Continue" field.</summary>
    public const int ContinueFieldNumber = 8;
    private string continue_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Continue {
      get { return continue_; }
      set {
        continue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ErrorView" field.</summary>
    public const int ErrorViewFieldNumber = 9;
    private string errorView_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrorView {
      get { return errorView_; }
      set {
        errorView_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nonce" field.</summary>
    public const int NonceFieldNumber = 10;
    private string nonce_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Nonce {
      get { return nonce_; }
      set {
        nonce_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "uri" field.</summary>
    public const int UriFieldNumber = 11;
    private string uri_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uri {
      get { return uri_; }
      set {
        uri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 12;
    private string response_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Response {
      get { return response_; }
      set {
        response_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "qop" field.</summary>
    public const int QopFieldNumber = 13;
    private string qop_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Qop {
      get { return qop_; }
      set {
        qop_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nc" field.</summary>
    public const int NcFieldNumber = 14;
    private string nc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Nc {
      get { return nc_; }
      set {
        nc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cnonce" field.</summary>
    public const int CnonceFieldNumber = 15;
    private string cnonce_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cnonce {
      get { return cnonce_; }
      set {
        cnonce_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UseTokenCookie" field.</summary>
    public const int UseTokenCookieFieldNumber = 16;
    private bool useTokenCookie_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UseTokenCookie {
      get { return useTokenCookie_; }
      set {
        useTokenCookie_ = value;
      }
    }

    /// <summary>Field number for the "AccessToken" field.</summary>
    public const int AccessTokenFieldNumber = 17;
    private string accessToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccessToken {
      get { return accessToken_; }
      set {
        accessToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AccessTokenSecret" field.</summary>
    public const int AccessTokenSecretFieldNumber = 18;
    private string accessTokenSecret_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccessTokenSecret {
      get { return accessTokenSecret_; }
      set {
        accessTokenSecret_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "scope" field.</summary>
    public const int ScopeFieldNumber = 19;
    private string scope_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Scope {
      get { return scope_; }
      set {
        scope_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 20;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 162);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Authenticate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Authenticate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Provider != other.Provider) return false;
      if (State != other.State) return false;
      if (OauthToken != other.OauthToken) return false;
      if (OauthVerifier != other.OauthVerifier) return false;
      if (UserName != other.UserName) return false;
      if (Password != other.Password) return false;
      if (RememberMe != other.RememberMe) return false;
      if (Continue != other.Continue) return false;
      if (ErrorView != other.ErrorView) return false;
      if (Nonce != other.Nonce) return false;
      if (Uri != other.Uri) return false;
      if (Response != other.Response) return false;
      if (Qop != other.Qop) return false;
      if (Nc != other.Nc) return false;
      if (Cnonce != other.Cnonce) return false;
      if (UseTokenCookie != other.UseTokenCookie) return false;
      if (AccessToken != other.AccessToken) return false;
      if (AccessTokenSecret != other.AccessTokenSecret) return false;
      if (Scope != other.Scope) return false;
      if (!Meta.Equals(other.Meta)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Provider.Length != 0) hash ^= Provider.GetHashCode();
      if (State.Length != 0) hash ^= State.GetHashCode();
      if (OauthToken.Length != 0) hash ^= OauthToken.GetHashCode();
      if (OauthVerifier.Length != 0) hash ^= OauthVerifier.GetHashCode();
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (RememberMe != false) hash ^= RememberMe.GetHashCode();
      if (Continue.Length != 0) hash ^= Continue.GetHashCode();
      if (ErrorView.Length != 0) hash ^= ErrorView.GetHashCode();
      if (Nonce.Length != 0) hash ^= Nonce.GetHashCode();
      if (Uri.Length != 0) hash ^= Uri.GetHashCode();
      if (Response.Length != 0) hash ^= Response.GetHashCode();
      if (Qop.Length != 0) hash ^= Qop.GetHashCode();
      if (Nc.Length != 0) hash ^= Nc.GetHashCode();
      if (Cnonce.Length != 0) hash ^= Cnonce.GetHashCode();
      if (UseTokenCookie != false) hash ^= UseTokenCookie.GetHashCode();
      if (AccessToken.Length != 0) hash ^= AccessToken.GetHashCode();
      if (AccessTokenSecret.Length != 0) hash ^= AccessTokenSecret.GetHashCode();
      if (Scope.Length != 0) hash ^= Scope.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Provider.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Provider);
      }
      if (State.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(State);
      }
      if (OauthToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(OauthToken);
      }
      if (OauthVerifier.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(OauthVerifier);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(UserName);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Password);
      }
      if (RememberMe != false) {
        output.WriteRawTag(56);
        output.WriteBool(RememberMe);
      }
      if (Continue.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Continue);
      }
      if (ErrorView.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ErrorView);
      }
      if (Nonce.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Nonce);
      }
      if (Uri.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Uri);
      }
      if (Response.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Response);
      }
      if (Qop.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Qop);
      }
      if (Nc.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(Nc);
      }
      if (Cnonce.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(Cnonce);
      }
      if (UseTokenCookie != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(UseTokenCookie);
      }
      if (AccessToken.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(AccessToken);
      }
      if (AccessTokenSecret.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(AccessTokenSecret);
      }
      if (Scope.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(Scope);
      }
      meta_.WriteTo(output, _map_meta_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Provider.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Provider);
      }
      if (State.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(State);
      }
      if (OauthToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OauthToken);
      }
      if (OauthVerifier.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OauthVerifier);
      }
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (RememberMe != false) {
        size += 1 + 1;
      }
      if (Continue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Continue);
      }
      if (ErrorView.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorView);
      }
      if (Nonce.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nonce);
      }
      if (Uri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uri);
      }
      if (Response.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Response);
      }
      if (Qop.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Qop);
      }
      if (Nc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nc);
      }
      if (Cnonce.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cnonce);
      }
      if (UseTokenCookie != false) {
        size += 2 + 1;
      }
      if (AccessToken.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AccessToken);
      }
      if (AccessTokenSecret.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AccessTokenSecret);
      }
      if (Scope.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Scope);
      }
      size += meta_.CalculateSize(_map_meta_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Authenticate other) {
      if (other == null) {
        return;
      }
      if (other.Provider.Length != 0) {
        Provider = other.Provider;
      }
      if (other.State.Length != 0) {
        State = other.State;
      }
      if (other.OauthToken.Length != 0) {
        OauthToken = other.OauthToken;
      }
      if (other.OauthVerifier.Length != 0) {
        OauthVerifier = other.OauthVerifier;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.RememberMe != false) {
        RememberMe = other.RememberMe;
      }
      if (other.Continue.Length != 0) {
        Continue = other.Continue;
      }
      if (other.ErrorView.Length != 0) {
        ErrorView = other.ErrorView;
      }
      if (other.Nonce.Length != 0) {
        Nonce = other.Nonce;
      }
      if (other.Uri.Length != 0) {
        Uri = other.Uri;
      }
      if (other.Response.Length != 0) {
        Response = other.Response;
      }
      if (other.Qop.Length != 0) {
        Qop = other.Qop;
      }
      if (other.Nc.Length != 0) {
        Nc = other.Nc;
      }
      if (other.Cnonce.Length != 0) {
        Cnonce = other.Cnonce;
      }
      if (other.UseTokenCookie != false) {
        UseTokenCookie = other.UseTokenCookie;
      }
      if (other.AccessToken.Length != 0) {
        AccessToken = other.AccessToken;
      }
      if (other.AccessTokenSecret.Length != 0) {
        AccessTokenSecret = other.AccessTokenSecret;
      }
      if (other.Scope.Length != 0) {
        Scope = other.Scope;
      }
      meta_.Add(other.meta_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Provider = input.ReadString();
            break;
          }
          case 18: {
            State = input.ReadString();
            break;
          }
          case 26: {
            OauthToken = input.ReadString();
            break;
          }
          case 34: {
            OauthVerifier = input.ReadString();
            break;
          }
          case 42: {
            UserName = input.ReadString();
            break;
          }
          case 50: {
            Password = input.ReadString();
            break;
          }
          case 56: {
            RememberMe = input.ReadBool();
            break;
          }
          case 66: {
            Continue = input.ReadString();
            break;
          }
          case 74: {
            ErrorView = input.ReadString();
            break;
          }
          case 82: {
            Nonce = input.ReadString();
            break;
          }
          case 90: {
            Uri = input.ReadString();
            break;
          }
          case 98: {
            Response = input.ReadString();
            break;
          }
          case 106: {
            Qop = input.ReadString();
            break;
          }
          case 114: {
            Nc = input.ReadString();
            break;
          }
          case 122: {
            Cnonce = input.ReadString();
            break;
          }
          case 128: {
            UseTokenCookie = input.ReadBool();
            break;
          }
          case 138: {
            AccessToken = input.ReadString();
            break;
          }
          case 146: {
            AccessTokenSecret = input.ReadString();
            break;
          }
          case 154: {
            Scope = input.ReadString();
            break;
          }
          case 162: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AuthenticateResponse : pb::IMessage<AuthenticateResponse> {
    private static readonly pb::MessageParser<AuthenticateResponse> _parser = new pb::MessageParser<AuthenticateResponse>(() => new AuthenticateResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AuthenticateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthenticateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthenticateResponse(AuthenticateResponse other) : this() {
      userId_ = other.userId_;
      sessionId_ = other.sessionId_;
      userName_ = other.userName_;
      displayName_ = other.displayName_;
      referrerUrl_ = other.referrerUrl_;
      bearerToken_ = other.bearerToken_;
      refreshToken_ = other.refreshToken_;
      profileUrl_ = other.profileUrl_;
      roles_ = other.roles_.Clone();
      permissions_ = other.permissions_.Clone();
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      meta_ = other.meta_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthenticateResponse Clone() {
      return new AuthenticateResponse(this);
    }

    /// <summary>Field number for the "UserId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SessionId" field.</summary>
    public const int SessionIdFieldNumber = 2;
    private string sessionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UserName" field.</summary>
    public const int UserNameFieldNumber = 3;
    private string userName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DisplayName" field.</summary>
    public const int DisplayNameFieldNumber = 4;
    private string displayName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ReferrerUrl" field.</summary>
    public const int ReferrerUrlFieldNumber = 5;
    private string referrerUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReferrerUrl {
      get { return referrerUrl_; }
      set {
        referrerUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "BearerToken" field.</summary>
    public const int BearerTokenFieldNumber = 6;
    private string bearerToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BearerToken {
      get { return bearerToken_; }
      set {
        bearerToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RefreshToken" field.</summary>
    public const int RefreshTokenFieldNumber = 7;
    private string refreshToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RefreshToken {
      get { return refreshToken_; }
      set {
        refreshToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ProfileUrl" field.</summary>
    public const int ProfileUrlFieldNumber = 8;
    private string profileUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProfileUrl {
      get { return profileUrl_; }
      set {
        profileUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Roles" field.</summary>
    public const int RolesFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _repeated_roles_codec
        = pb::FieldCodec.ForString(74);
    private readonly pbc::RepeatedField<string> roles_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Roles {
      get { return roles_; }
    }

    /// <summary>Field number for the "Permissions" field.</summary>
    public const int PermissionsFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _repeated_permissions_codec
        = pb::FieldCodec.ForString(82);
    private readonly pbc::RepeatedField<string> permissions_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Permissions {
      get { return permissions_; }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 11;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 12;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 98);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AuthenticateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AuthenticateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (SessionId != other.SessionId) return false;
      if (UserName != other.UserName) return false;
      if (DisplayName != other.DisplayName) return false;
      if (ReferrerUrl != other.ReferrerUrl) return false;
      if (BearerToken != other.BearerToken) return false;
      if (RefreshToken != other.RefreshToken) return false;
      if (ProfileUrl != other.ProfileUrl) return false;
      if(!roles_.Equals(other.roles_)) return false;
      if(!permissions_.Equals(other.permissions_)) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      if (!Meta.Equals(other.Meta)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (ReferrerUrl.Length != 0) hash ^= ReferrerUrl.GetHashCode();
      if (BearerToken.Length != 0) hash ^= BearerToken.GetHashCode();
      if (RefreshToken.Length != 0) hash ^= RefreshToken.GetHashCode();
      if (ProfileUrl.Length != 0) hash ^= ProfileUrl.GetHashCode();
      hash ^= roles_.GetHashCode();
      hash ^= permissions_.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (SessionId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SessionId);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UserName);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DisplayName);
      }
      if (ReferrerUrl.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ReferrerUrl);
      }
      if (BearerToken.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(BearerToken);
      }
      if (RefreshToken.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(RefreshToken);
      }
      if (ProfileUrl.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ProfileUrl);
      }
      roles_.WriteTo(output, _repeated_roles_codec);
      permissions_.WriteTo(output, _repeated_permissions_codec);
      if (responseStatus_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(ResponseStatus);
      }
      meta_.WriteTo(output, _map_meta_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (SessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
      }
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (ReferrerUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReferrerUrl);
      }
      if (BearerToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BearerToken);
      }
      if (RefreshToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RefreshToken);
      }
      if (ProfileUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProfileUrl);
      }
      size += roles_.CalculateSize(_repeated_roles_codec);
      size += permissions_.CalculateSize(_repeated_permissions_codec);
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      size += meta_.CalculateSize(_map_meta_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AuthenticateResponse other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.SessionId.Length != 0) {
        SessionId = other.SessionId;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.ReferrerUrl.Length != 0) {
        ReferrerUrl = other.ReferrerUrl;
      }
      if (other.BearerToken.Length != 0) {
        BearerToken = other.BearerToken;
      }
      if (other.RefreshToken.Length != 0) {
        RefreshToken = other.RefreshToken;
      }
      if (other.ProfileUrl.Length != 0) {
        ProfileUrl = other.ProfileUrl;
      }
      roles_.Add(other.roles_);
      permissions_.Add(other.permissions_);
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      meta_.Add(other.meta_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            SessionId = input.ReadString();
            break;
          }
          case 26: {
            UserName = input.ReadString();
            break;
          }
          case 34: {
            DisplayName = input.ReadString();
            break;
          }
          case 42: {
            ReferrerUrl = input.ReadString();
            break;
          }
          case 50: {
            BearerToken = input.ReadString();
            break;
          }
          case 58: {
            RefreshToken = input.ReadString();
            break;
          }
          case 66: {
            ProfileUrl = input.ReadString();
            break;
          }
          case 74: {
            roles_.AddEntriesFrom(input, _repeated_roles_codec);
            break;
          }
          case 82: {
            permissions_.AddEntriesFrom(input, _repeated_permissions_codec);
            break;
          }
          case 90: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
          case 98: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChangeConnectionInfo : pb::IMessage<ChangeConnectionInfo> {
    private static readonly pb::MessageParser<ChangeConnectionInfo> _parser = new pb::MessageParser<ChangeConnectionInfo>(() => new ChangeConnectionInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChangeConnectionInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeConnectionInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeConnectionInfo(ChangeConnectionInfo other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeConnectionInfo Clone() {
      return new ChangeConnectionInfo(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChangeConnectionInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChangeConnectionInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChangeConnectionInfo other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class ChangeDb : pb::IMessage<ChangeDb> {
    private static readonly pb::MessageParser<ChangeDb> _parser = new pb::MessageParser<ChangeDb>(() => new ChangeDb());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChangeDb> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeDb() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeDb(ChangeDb other) : this() {
      namedConnection_ = other.namedConnection_;
      connectionString_ = other.connectionString_;
      providerName_ = other.providerName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeDb Clone() {
      return new ChangeDb(this);
    }

    /// <summary>Field number for the "NamedConnection" field.</summary>
    public const int NamedConnectionFieldNumber = 1;
    private string namedConnection_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NamedConnection {
      get { return namedConnection_; }
      set {
        namedConnection_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConnectionString" field.</summary>
    public const int ConnectionStringFieldNumber = 2;
    private string connectionString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConnectionString {
      get { return connectionString_; }
      set {
        connectionString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ProviderName" field.</summary>
    public const int ProviderNameFieldNumber = 3;
    private string providerName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProviderName {
      get { return providerName_; }
      set {
        providerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChangeDb);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChangeDb other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NamedConnection != other.NamedConnection) return false;
      if (ConnectionString != other.ConnectionString) return false;
      if (ProviderName != other.ProviderName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NamedConnection.Length != 0) hash ^= NamedConnection.GetHashCode();
      if (ConnectionString.Length != 0) hash ^= ConnectionString.GetHashCode();
      if (ProviderName.Length != 0) hash ^= ProviderName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NamedConnection.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NamedConnection);
      }
      if (ConnectionString.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ConnectionString);
      }
      if (ProviderName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ProviderName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NamedConnection.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NamedConnection);
      }
      if (ConnectionString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectionString);
      }
      if (ProviderName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProviderName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChangeDb other) {
      if (other == null) {
        return;
      }
      if (other.NamedConnection.Length != 0) {
        NamedConnection = other.NamedConnection;
      }
      if (other.ConnectionString.Length != 0) {
        ConnectionString = other.ConnectionString;
      }
      if (other.ProviderName.Length != 0) {
        ProviderName = other.ProviderName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NamedConnection = input.ReadString();
            break;
          }
          case 18: {
            ConnectionString = input.ReadString();
            break;
          }
          case 26: {
            ProviderName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChangeDbResponse : pb::IMessage<ChangeDbResponse> {
    private static readonly pb::MessageParser<ChangeDbResponse> _parser = new pb::MessageParser<ChangeDbResponse>(() => new ChangeDbResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChangeDbResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeDbResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeDbResponse(ChangeDbResponse other) : this() {
      results_ = other.results_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeDbResponse Clone() {
      return new ChangeDbResponse(this);
    }

    /// <summary>Field number for the "Results" field.</summary>
    public const int ResultsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ServiceStack.Extensions.Tests.Protoc.Rockstar> _repeated_results_codec
        = pb::FieldCodec.ForMessage(10, global::ServiceStack.Extensions.Tests.Protoc.Rockstar.Parser);
    private readonly pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.Rockstar> results_ = new pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.Rockstar>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.Rockstar> Results {
      get { return results_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChangeDbResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChangeDbResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!results_.Equals(other.results_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= results_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      results_.WriteTo(output, _repeated_results_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += results_.CalculateSize(_repeated_results_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChangeDbResponse other) {
      if (other == null) {
        return;
      }
      results_.Add(other.results_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChatMessage : pb::IMessage<ChatMessage> {
    private static readonly pb::MessageParser<ChatMessage> _parser = new pb::MessageParser<ChatMessage>(() => new ChatMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChatMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatMessage(ChatMessage other) : this() {
      id_ = other.id_;
      channel_ = other.channel_;
      fromUserId_ = other.fromUserId_;
      fromName_ = other.fromName_;
      displayName_ = other.displayName_;
      message_ = other.message_;
      userAuthId_ = other.userAuthId_;
      private_ = other.private_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatMessage Clone() {
      return new ChatMessage(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Channel" field.</summary>
    public const int ChannelFieldNumber = 2;
    private string channel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Channel {
      get { return channel_; }
      set {
        channel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "FromUserId" field.</summary>
    public const int FromUserIdFieldNumber = 3;
    private string fromUserId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FromUserId {
      get { return fromUserId_; }
      set {
        fromUserId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "FromName" field.</summary>
    public const int FromNameFieldNumber = 4;
    private string fromName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FromName {
      get { return fromName_; }
      set {
        fromName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DisplayName" field.</summary>
    public const int DisplayNameFieldNumber = 5;
    private string displayName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Message" field.</summary>
    public const int MessageFieldNumber = 6;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UserAuthId" field.</summary>
    public const int UserAuthIdFieldNumber = 7;
    private string userAuthId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserAuthId {
      get { return userAuthId_; }
      set {
        userAuthId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Private" field.</summary>
    public const int PrivateFieldNumber = 8;
    private bool private_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Private {
      get { return private_; }
      set {
        private_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChatMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChatMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Channel != other.Channel) return false;
      if (FromUserId != other.FromUserId) return false;
      if (FromName != other.FromName) return false;
      if (DisplayName != other.DisplayName) return false;
      if (Message != other.Message) return false;
      if (UserAuthId != other.UserAuthId) return false;
      if (Private != other.Private) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Channel.Length != 0) hash ^= Channel.GetHashCode();
      if (FromUserId.Length != 0) hash ^= FromUserId.GetHashCode();
      if (FromName.Length != 0) hash ^= FromName.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (UserAuthId.Length != 0) hash ^= UserAuthId.GetHashCode();
      if (Private != false) hash ^= Private.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (Channel.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Channel);
      }
      if (FromUserId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FromUserId);
      }
      if (FromName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(FromName);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DisplayName);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Message);
      }
      if (UserAuthId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(UserAuthId);
      }
      if (Private != false) {
        output.WriteRawTag(64);
        output.WriteBool(Private);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Channel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Channel);
      }
      if (FromUserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FromUserId);
      }
      if (FromName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FromName);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (UserAuthId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserAuthId);
      }
      if (Private != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChatMessage other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Channel.Length != 0) {
        Channel = other.Channel;
      }
      if (other.FromUserId.Length != 0) {
        FromUserId = other.FromUserId;
      }
      if (other.FromName.Length != 0) {
        FromName = other.FromName;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.UserAuthId.Length != 0) {
        UserAuthId = other.UserAuthId;
      }
      if (other.Private != false) {
        Private = other.Private;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            Channel = input.ReadString();
            break;
          }
          case 26: {
            FromUserId = input.ReadString();
            break;
          }
          case 34: {
            FromName = input.ReadString();
            break;
          }
          case 42: {
            DisplayName = input.ReadString();
            break;
          }
          case 50: {
            Message = input.ReadString();
            break;
          }
          case 58: {
            UserAuthId = input.ReadString();
            break;
          }
          case 64: {
            Private = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ConvertSessionToToken : pb::IMessage<ConvertSessionToToken> {
    private static readonly pb::MessageParser<ConvertSessionToToken> _parser = new pb::MessageParser<ConvertSessionToToken>(() => new ConvertSessionToToken());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConvertSessionToToken> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConvertSessionToToken() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConvertSessionToToken(ConvertSessionToToken other) : this() {
      preserveSession_ = other.preserveSession_;
      meta_ = other.meta_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConvertSessionToToken Clone() {
      return new ConvertSessionToToken(this);
    }

    /// <summary>Field number for the "PreserveSession" field.</summary>
    public const int PreserveSessionFieldNumber = 1;
    private bool preserveSession_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool PreserveSession {
      get { return preserveSession_; }
      set {
        preserveSession_ = value;
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 2;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 18);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConvertSessionToToken);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConvertSessionToToken other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PreserveSession != other.PreserveSession) return false;
      if (!Meta.Equals(other.Meta)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PreserveSession != false) hash ^= PreserveSession.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PreserveSession != false) {
        output.WriteRawTag(8);
        output.WriteBool(PreserveSession);
      }
      meta_.WriteTo(output, _map_meta_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PreserveSession != false) {
        size += 1 + 1;
      }
      size += meta_.CalculateSize(_map_meta_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConvertSessionToToken other) {
      if (other == null) {
        return;
      }
      if (other.PreserveSession != false) {
        PreserveSession = other.PreserveSession;
      }
      meta_.Add(other.meta_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PreserveSession = input.ReadBool();
            break;
          }
          case 18: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ConvertSessionToTokenResponse : pb::IMessage<ConvertSessionToTokenResponse> {
    private static readonly pb::MessageParser<ConvertSessionToTokenResponse> _parser = new pb::MessageParser<ConvertSessionToTokenResponse>(() => new ConvertSessionToTokenResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConvertSessionToTokenResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConvertSessionToTokenResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConvertSessionToTokenResponse(ConvertSessionToTokenResponse other) : this() {
      meta_ = other.meta_.Clone();
      accessToken_ = other.accessToken_;
      refreshToken_ = other.refreshToken_;
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConvertSessionToTokenResponse Clone() {
      return new ConvertSessionToTokenResponse(this);
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 1;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 10);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    /// <summary>Field number for the "AccessToken" field.</summary>
    public const int AccessTokenFieldNumber = 2;
    private string accessToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccessToken {
      get { return accessToken_; }
      set {
        accessToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RefreshToken" field.</summary>
    public const int RefreshTokenFieldNumber = 3;
    private string refreshToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RefreshToken {
      get { return refreshToken_; }
      set {
        refreshToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 4;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConvertSessionToTokenResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConvertSessionToTokenResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Meta.Equals(other.Meta)) return false;
      if (AccessToken != other.AccessToken) return false;
      if (RefreshToken != other.RefreshToken) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Meta.GetHashCode();
      if (AccessToken.Length != 0) hash ^= AccessToken.GetHashCode();
      if (RefreshToken.Length != 0) hash ^= RefreshToken.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      meta_.WriteTo(output, _map_meta_codec);
      if (AccessToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AccessToken);
      }
      if (RefreshToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RefreshToken);
      }
      if (responseStatus_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += meta_.CalculateSize(_map_meta_codec);
      if (AccessToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessToken);
      }
      if (RefreshToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RefreshToken);
      }
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConvertSessionToTokenResponse other) {
      if (other == null) {
        return;
      }
      meta_.Add(other.meta_);
      if (other.AccessToken.Length != 0) {
        AccessToken = other.AccessToken;
      }
      if (other.RefreshToken.Length != 0) {
        RefreshToken = other.RefreshToken;
      }
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
          case 18: {
            AccessToken = input.ReadString();
            break;
          }
          case 26: {
            RefreshToken = input.ReadString();
            break;
          }
          case 34: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateTodo : pb::IMessage<CreateTodo> {
    private static readonly pb::MessageParser<CreateTodo> _parser = new pb::MessageParser<CreateTodo>(() => new CreateTodo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateTodo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTodo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTodo(CreateTodo other) : this() {
      title_ = other.title_;
      order_ = other.order_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTodo Clone() {
      return new CreateTodo(this);
    }

    /// <summary>Field number for the "Title" field.</summary>
    public const int TitleFieldNumber = 1;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Order" field.</summary>
    public const int OrderFieldNumber = 2;
    private int order_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Order {
      get { return order_; }
      set {
        order_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateTodo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateTodo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Title != other.Title) return false;
      if (Order != other.Order) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (Order != 0) hash ^= Order.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Title.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Title);
      }
      if (Order != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Order);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (Order != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Order);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateTodo other) {
      if (other == null) {
        return;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.Order != 0) {
        Order = other.Order;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Title = input.ReadString();
            break;
          }
          case 16: {
            Order = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateTodoResponse : pb::IMessage<CreateTodoResponse> {
    private static readonly pb::MessageParser<CreateTodoResponse> _parser = new pb::MessageParser<CreateTodoResponse>(() => new CreateTodoResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateTodoResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTodoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTodoResponse(CreateTodoResponse other) : this() {
      result_ = other.result_ != null ? other.result_.Clone() : null;
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTodoResponse Clone() {
      return new CreateTodoResponse(this);
    }

    /// <summary>Field number for the "Result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::ServiceStack.Extensions.Tests.Protoc.Todo result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.Todo Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 2;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateTodoResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateTodoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Result, other.Result)) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (result_ != null) hash ^= Result.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (result_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Result);
      }
      if (responseStatus_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (result_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Result);
      }
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateTodoResponse other) {
      if (other == null) {
        return;
      }
      if (other.result_ != null) {
        if (result_ == null) {
          Result = new global::ServiceStack.Extensions.Tests.Protoc.Todo();
        }
        Result.MergeFrom(other.Result);
      }
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (result_ == null) {
              Result = new global::ServiceStack.Extensions.Tests.Protoc.Todo();
            }
            input.ReadMessage(Result);
            break;
          }
          case 18: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CustomRockstar : pb::IMessage<CustomRockstar> {
    private static readonly pb::MessageParser<CustomRockstar> _parser = new pb::MessageParser<CustomRockstar>(() => new CustomRockstar());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CustomRockstar> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomRockstar() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomRockstar(CustomRockstar other) : this() {
      firstName_ = other.firstName_;
      lastName_ = other.lastName_;
      age_ = other.age_;
      rockstarAlbumName_ = other.rockstarAlbumName_;
      rockstarGenreName_ = other.rockstarGenreName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomRockstar Clone() {
      return new CustomRockstar(this);
    }

    /// <summary>Field number for the "FirstName" field.</summary>
    public const int FirstNameFieldNumber = 1;
    private string firstName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FirstName {
      get { return firstName_; }
      set {
        firstName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LastName" field.</summary>
    public const int LastNameFieldNumber = 2;
    private string lastName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastName {
      get { return lastName_; }
      set {
        lastName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Age" field.</summary>
    public const int AgeFieldNumber = 3;
    private int age_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Age {
      get { return age_; }
      set {
        age_ = value;
      }
    }

    /// <summary>Field number for the "RockstarAlbumName" field.</summary>
    public const int RockstarAlbumNameFieldNumber = 4;
    private string rockstarAlbumName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RockstarAlbumName {
      get { return rockstarAlbumName_; }
      set {
        rockstarAlbumName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RockstarGenreName" field.</summary>
    public const int RockstarGenreNameFieldNumber = 5;
    private string rockstarGenreName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RockstarGenreName {
      get { return rockstarGenreName_; }
      set {
        rockstarGenreName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CustomRockstar);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CustomRockstar other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FirstName != other.FirstName) return false;
      if (LastName != other.LastName) return false;
      if (Age != other.Age) return false;
      if (RockstarAlbumName != other.RockstarAlbumName) return false;
      if (RockstarGenreName != other.RockstarGenreName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FirstName.Length != 0) hash ^= FirstName.GetHashCode();
      if (LastName.Length != 0) hash ^= LastName.GetHashCode();
      if (Age != 0) hash ^= Age.GetHashCode();
      if (RockstarAlbumName.Length != 0) hash ^= RockstarAlbumName.GetHashCode();
      if (RockstarGenreName.Length != 0) hash ^= RockstarGenreName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FirstName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FirstName);
      }
      if (LastName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(LastName);
      }
      if (Age != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Age);
      }
      if (RockstarAlbumName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RockstarAlbumName);
      }
      if (RockstarGenreName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(RockstarGenreName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FirstName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstName);
      }
      if (LastName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastName);
      }
      if (Age != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Age);
      }
      if (RockstarAlbumName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RockstarAlbumName);
      }
      if (RockstarGenreName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RockstarGenreName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CustomRockstar other) {
      if (other == null) {
        return;
      }
      if (other.FirstName.Length != 0) {
        FirstName = other.FirstName;
      }
      if (other.LastName.Length != 0) {
        LastName = other.LastName;
      }
      if (other.Age != 0) {
        Age = other.Age;
      }
      if (other.RockstarAlbumName.Length != 0) {
        RockstarAlbumName = other.RockstarAlbumName;
      }
      if (other.RockstarGenreName.Length != 0) {
        RockstarGenreName = other.RockstarGenreName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FirstName = input.ReadString();
            break;
          }
          case 18: {
            LastName = input.ReadString();
            break;
          }
          case 24: {
            Age = input.ReadInt32();
            break;
          }
          case 34: {
            RockstarAlbumName = input.ReadString();
            break;
          }
          case 42: {
            RockstarGenreName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteTodo : pb::IMessage<DeleteTodo> {
    private static readonly pb::MessageParser<DeleteTodo> _parser = new pb::MessageParser<DeleteTodo>(() => new DeleteTodo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteTodo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteTodo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteTodo(DeleteTodo other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteTodo Clone() {
      return new DeleteTodo(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteTodo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteTodo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteTodo other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteTodos : pb::IMessage<DeleteTodos> {
    private static readonly pb::MessageParser<DeleteTodos> _parser = new pb::MessageParser<DeleteTodos>(() => new DeleteTodos());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteTodos> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteTodos() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteTodos(DeleteTodos other) : this() {
      ids_ = other.ids_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteTodos Clone() {
      return new DeleteTodos(this);
    }

    /// <summary>Field number for the "Ids" field.</summary>
    public const int IdsFieldNumber = 1;
    private static readonly pb::FieldCodec<long> _repeated_ids_codec
        = pb::FieldCodec.ForInt64(8);
    private readonly pbc::RepeatedField<long> ids_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> Ids {
      get { return ids_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteTodos);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteTodos other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!ids_.Equals(other.ids_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ids_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      ids_.WriteTo(output, _repeated_ids_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += ids_.CalculateSize(_repeated_ids_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteTodos other) {
      if (other == null) {
        return;
      }
      ids_.Add(other.ids_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            ids_.AddEntriesFrom(input, _repeated_ids_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class EmptyResponse : pb::IMessage<EmptyResponse> {
    private static readonly pb::MessageParser<EmptyResponse> _parser = new pb::MessageParser<EmptyResponse>(() => new EmptyResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EmptyResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmptyResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmptyResponse(EmptyResponse other) : this() {
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmptyResponse Clone() {
      return new EmptyResponse(this);
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 1;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EmptyResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EmptyResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (responseStatus_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EmptyResponse other) {
      if (other == null) {
        return;
      }
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class FileContent : pb::IMessage<FileContent> {
    private static readonly pb::MessageParser<FileContent> _parser = new pb::MessageParser<FileContent>(() => new FileContent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FileContent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileContent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileContent(FileContent other) : this() {
      name_ = other.name_;
      type_ = other.type_;
      length_ = other.length_;
      body_ = other.body_;
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileContent Clone() {
      return new FileContent(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 2;
    private string type_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Length" field.</summary>
    public const int LengthFieldNumber = 3;
    private int length_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Length {
      get { return length_; }
      set {
        length_ = value;
      }
    }

    /// <summary>Field number for the "Body" field.</summary>
    public const int BodyFieldNumber = 4;
    private pb::ByteString body_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Body {
      get { return body_; }
      set {
        body_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 5;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FileContent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FileContent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Type != other.Type) return false;
      if (Length != other.Length) return false;
      if (Body != other.Body) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (Length != 0) hash ^= Length.GetHashCode();
      if (Body.Length != 0) hash ^= Body.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Type);
      }
      if (Length != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Length);
      }
      if (Body.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Body);
      }
      if (responseStatus_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Length);
      }
      if (Body.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Body);
      }
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FileContent other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.Length != 0) {
        Length = other.Length;
      }
      if (other.Body.Length != 0) {
        Body = other.Body;
      }
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Type = input.ReadString();
            break;
          }
          case 24: {
            Length = input.ReadInt32();
            break;
          }
          case 34: {
            Body = input.ReadBytes();
            break;
          }
          case 42: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAccessToken : pb::IMessage<GetAccessToken> {
    private static readonly pb::MessageParser<GetAccessToken> _parser = new pb::MessageParser<GetAccessToken>(() => new GetAccessToken());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAccessToken> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccessToken() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccessToken(GetAccessToken other) : this() {
      refreshToken_ = other.refreshToken_;
      useTokenCookie_ = other.useTokenCookie_;
      meta_ = other.meta_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccessToken Clone() {
      return new GetAccessToken(this);
    }

    /// <summary>Field number for the "RefreshToken" field.</summary>
    public const int RefreshTokenFieldNumber = 1;
    private string refreshToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RefreshToken {
      get { return refreshToken_; }
      set {
        refreshToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UseTokenCookie" field.</summary>
    public const int UseTokenCookieFieldNumber = 2;
    private bool useTokenCookie_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UseTokenCookie {
      get { return useTokenCookie_; }
      set {
        useTokenCookie_ = value;
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 3;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 26);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAccessToken);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAccessToken other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RefreshToken != other.RefreshToken) return false;
      if (UseTokenCookie != other.UseTokenCookie) return false;
      if (!Meta.Equals(other.Meta)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RefreshToken.Length != 0) hash ^= RefreshToken.GetHashCode();
      if (UseTokenCookie != false) hash ^= UseTokenCookie.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RefreshToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RefreshToken);
      }
      if (UseTokenCookie != false) {
        output.WriteRawTag(16);
        output.WriteBool(UseTokenCookie);
      }
      meta_.WriteTo(output, _map_meta_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RefreshToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RefreshToken);
      }
      if (UseTokenCookie != false) {
        size += 1 + 1;
      }
      size += meta_.CalculateSize(_map_meta_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAccessToken other) {
      if (other == null) {
        return;
      }
      if (other.RefreshToken.Length != 0) {
        RefreshToken = other.RefreshToken;
      }
      if (other.UseTokenCookie != false) {
        UseTokenCookie = other.UseTokenCookie;
      }
      meta_.Add(other.meta_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RefreshToken = input.ReadString();
            break;
          }
          case 16: {
            UseTokenCookie = input.ReadBool();
            break;
          }
          case 26: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAccessTokenResponse : pb::IMessage<GetAccessTokenResponse> {
    private static readonly pb::MessageParser<GetAccessTokenResponse> _parser = new pb::MessageParser<GetAccessTokenResponse>(() => new GetAccessTokenResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAccessTokenResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccessTokenResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccessTokenResponse(GetAccessTokenResponse other) : this() {
      accessToken_ = other.accessToken_;
      meta_ = other.meta_.Clone();
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccessTokenResponse Clone() {
      return new GetAccessTokenResponse(this);
    }

    /// <summary>Field number for the "AccessToken" field.</summary>
    public const int AccessTokenFieldNumber = 1;
    private string accessToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccessToken {
      get { return accessToken_; }
      set {
        accessToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 2;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 18);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 3;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAccessTokenResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAccessTokenResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccessToken != other.AccessToken) return false;
      if (!Meta.Equals(other.Meta)) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccessToken.Length != 0) hash ^= AccessToken.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccessToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccessToken);
      }
      meta_.WriteTo(output, _map_meta_codec);
      if (responseStatus_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccessToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessToken);
      }
      size += meta_.CalculateSize(_map_meta_codec);
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAccessTokenResponse other) {
      if (other == null) {
        return;
      }
      if (other.AccessToken.Length != 0) {
        AccessToken = other.AccessToken;
      }
      meta_.Add(other.meta_);
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccessToken = input.ReadString();
            break;
          }
          case 18: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
          case 26: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetApiKeys : pb::IMessage<GetApiKeys> {
    private static readonly pb::MessageParser<GetApiKeys> _parser = new pb::MessageParser<GetApiKeys>(() => new GetApiKeys());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetApiKeys> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetApiKeys() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetApiKeys(GetApiKeys other) : this() {
      environment_ = other.environment_;
      meta_ = other.meta_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetApiKeys Clone() {
      return new GetApiKeys(this);
    }

    /// <summary>Field number for the "Environment" field.</summary>
    public const int EnvironmentFieldNumber = 1;
    private string environment_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Environment {
      get { return environment_; }
      set {
        environment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 2;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 18);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetApiKeys);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetApiKeys other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Environment != other.Environment) return false;
      if (!Meta.Equals(other.Meta)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Environment.Length != 0) hash ^= Environment.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Environment.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Environment);
      }
      meta_.WriteTo(output, _map_meta_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Environment.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Environment);
      }
      size += meta_.CalculateSize(_map_meta_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetApiKeys other) {
      if (other == null) {
        return;
      }
      if (other.Environment.Length != 0) {
        Environment = other.Environment;
      }
      meta_.Add(other.meta_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Environment = input.ReadString();
            break;
          }
          case 18: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetApiKeysResponse : pb::IMessage<GetApiKeysResponse> {
    private static readonly pb::MessageParser<GetApiKeysResponse> _parser = new pb::MessageParser<GetApiKeysResponse>(() => new GetApiKeysResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetApiKeysResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetApiKeysResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetApiKeysResponse(GetApiKeysResponse other) : this() {
      results_ = other.results_.Clone();
      meta_ = other.meta_.Clone();
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetApiKeysResponse Clone() {
      return new GetApiKeysResponse(this);
    }

    /// <summary>Field number for the "Results" field.</summary>
    public const int ResultsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ServiceStack.Extensions.Tests.Protoc.UserApiKey> _repeated_results_codec
        = pb::FieldCodec.ForMessage(10, global::ServiceStack.Extensions.Tests.Protoc.UserApiKey.Parser);
    private readonly pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.UserApiKey> results_ = new pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.UserApiKey>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.UserApiKey> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 2;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 18);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 3;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetApiKeysResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetApiKeysResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!results_.Equals(other.results_)) return false;
      if (!Meta.Equals(other.Meta)) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= results_.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      results_.WriteTo(output, _repeated_results_codec);
      meta_.WriteTo(output, _map_meta_codec);
      if (responseStatus_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += results_.CalculateSize(_repeated_results_codec);
      size += meta_.CalculateSize(_map_meta_codec);
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetApiKeysResponse other) {
      if (other == null) {
        return;
      }
      results_.Add(other.results_);
      meta_.Add(other.meta_);
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
          case 18: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
          case 26: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetHello : pb::IMessage<GetHello> {
    private static readonly pb::MessageParser<GetHello> _parser = new pb::MessageParser<GetHello>(() => new GetHello());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetHello> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetHello() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetHello(GetHello other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetHello Clone() {
      return new GetHello(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetHello);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetHello other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetHello other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetTodo : pb::IMessage<GetTodo> {
    private static readonly pb::MessageParser<GetTodo> _parser = new pb::MessageParser<GetTodo>(() => new GetTodo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTodo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTodo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTodo(GetTodo other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTodo Clone() {
      return new GetTodo(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTodo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTodo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTodo other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetTodoResponse : pb::IMessage<GetTodoResponse> {
    private static readonly pb::MessageParser<GetTodoResponse> _parser = new pb::MessageParser<GetTodoResponse>(() => new GetTodoResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTodoResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTodoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTodoResponse(GetTodoResponse other) : this() {
      result_ = other.result_ != null ? other.result_.Clone() : null;
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTodoResponse Clone() {
      return new GetTodoResponse(this);
    }

    /// <summary>Field number for the "Result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::ServiceStack.Extensions.Tests.Protoc.Todo result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.Todo Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 2;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTodoResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTodoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Result, other.Result)) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (result_ != null) hash ^= Result.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (result_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Result);
      }
      if (responseStatus_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (result_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Result);
      }
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTodoResponse other) {
      if (other == null) {
        return;
      }
      if (other.result_ != null) {
        if (result_ == null) {
          Result = new global::ServiceStack.Extensions.Tests.Protoc.Todo();
        }
        Result.MergeFrom(other.Result);
      }
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (result_ == null) {
              Result = new global::ServiceStack.Extensions.Tests.Protoc.Todo();
            }
            input.ReadMessage(Result);
            break;
          }
          case 18: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetTodos : pb::IMessage<GetTodos> {
    private static readonly pb::MessageParser<GetTodos> _parser = new pb::MessageParser<GetTodos>(() => new GetTodos());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTodos> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTodos() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTodos(GetTodos other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTodos Clone() {
      return new GetTodos(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTodos);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTodos other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTodos other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GetTodosResponse : pb::IMessage<GetTodosResponse> {
    private static readonly pb::MessageParser<GetTodosResponse> _parser = new pb::MessageParser<GetTodosResponse>(() => new GetTodosResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTodosResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTodosResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTodosResponse(GetTodosResponse other) : this() {
      results_ = other.results_.Clone();
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTodosResponse Clone() {
      return new GetTodosResponse(this);
    }

    /// <summary>Field number for the "Results" field.</summary>
    public const int ResultsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ServiceStack.Extensions.Tests.Protoc.Todo> _repeated_results_codec
        = pb::FieldCodec.ForMessage(10, global::ServiceStack.Extensions.Tests.Protoc.Todo.Parser);
    private readonly pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.Todo> results_ = new pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.Todo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.Todo> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 2;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTodosResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTodosResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!results_.Equals(other.results_)) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= results_.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      results_.WriteTo(output, _repeated_results_codec);
      if (responseStatus_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += results_.CalculateSize(_repeated_results_codec);
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTodosResponse other) {
      if (other == null) {
        return;
      }
      results_.Add(other.results_);
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
          case 18: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class HelloJwt : pb::IMessage<HelloJwt> {
    private static readonly pb::MessageParser<HelloJwt> _parser = new pb::MessageParser<HelloJwt>(() => new HelloJwt());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HelloJwt> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelloJwt() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelloJwt(HelloJwt other) : this() {
      name_ = other.name_;
      bearerToken_ = other.bearerToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelloJwt Clone() {
      return new HelloJwt(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "BearerToken" field.</summary>
    public const int BearerTokenFieldNumber = 2;
    private string bearerToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BearerToken {
      get { return bearerToken_; }
      set {
        bearerToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HelloJwt);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HelloJwt other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (BearerToken != other.BearerToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (BearerToken.Length != 0) hash ^= BearerToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (BearerToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BearerToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (BearerToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BearerToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HelloJwt other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.BearerToken.Length != 0) {
        BearerToken = other.BearerToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            BearerToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class HelloJwtResponse : pb::IMessage<HelloJwtResponse> {
    private static readonly pb::MessageParser<HelloJwtResponse> _parser = new pb::MessageParser<HelloJwtResponse>(() => new HelloJwtResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HelloJwtResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelloJwtResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelloJwtResponse(HelloJwtResponse other) : this() {
      result_ = other.result_;
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelloJwtResponse Clone() {
      return new HelloJwtResponse(this);
    }

    /// <summary>Field number for the "Result" field.</summary>
    public const int ResultFieldNumber = 1;
    private string result_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Result {
      get { return result_; }
      set {
        result_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 2;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HelloJwtResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HelloJwtResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result.Length != 0) hash ^= Result.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Result);
      }
      if (responseStatus_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Result);
      }
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HelloJwtResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result.Length != 0) {
        Result = other.Result;
      }
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Result = input.ReadString();
            break;
          }
          case 18: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class HelloResponse : pb::IMessage<HelloResponse> {
    private static readonly pb::MessageParser<HelloResponse> _parser = new pb::MessageParser<HelloResponse>(() => new HelloResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HelloResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelloResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelloResponse(HelloResponse other) : this() {
      result_ = other.result_;
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelloResponse Clone() {
      return new HelloResponse(this);
    }

    /// <summary>Field number for the "Result" field.</summary>
    public const int ResultFieldNumber = 1;
    private string result_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Result {
      get { return result_; }
      set {
        result_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 2;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HelloResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HelloResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result.Length != 0) hash ^= Result.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Result);
      }
      if (responseStatus_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Result);
      }
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HelloResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result.Length != 0) {
        Result = other.Result;
      }
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Result = input.ReadString();
            break;
          }
          case 18: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Incr : pb::IMessage<Incr> {
    private static readonly pb::MessageParser<Incr> _parser = new pb::MessageParser<Incr>(() => new Incr());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Incr> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Incr() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Incr(Incr other) : this() {
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Incr Clone() {
      return new Incr(this);
    }

    /// <summary>Field number for the "Amount" field.</summary>
    public const int AmountFieldNumber = 1;
    private int amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Incr);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Incr other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Amount != 0) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Amount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Amount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Incr other) {
      if (other == null) {
        return;
      }
      if (other.Amount != 0) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Amount = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Movie : pb::IMessage<Movie> {
    private static readonly pb::MessageParser<Movie> _parser = new pb::MessageParser<Movie>(() => new Movie());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Movie> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Movie() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Movie(Movie other) : this() {
      id_ = other.id_;
      imdbId_ = other.imdbId_;
      title_ = other.title_;
      rating_ = other.rating_;
      score_ = other.score_ != null ? other.score_.Clone() : null;
      director_ = other.director_;
      releaseDate_ = other.releaseDate_ != null ? other.releaseDate_.Clone() : null;
      tagLine_ = other.tagLine_;
      genres_ = other.genres_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Movie Clone() {
      return new Movie(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "ImdbId" field.</summary>
    public const int ImdbIdFieldNumber = 2;
    private string imdbId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImdbId {
      get { return imdbId_; }
      set {
        imdbId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Title" field.</summary>
    public const int TitleFieldNumber = 3;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Rating" field.</summary>
    public const int RatingFieldNumber = 4;
    private string rating_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Rating {
      get { return rating_; }
      set {
        rating_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Score" field.</summary>
    public const int ScoreFieldNumber = 5;
    private global::ProtoBuf.Bcl.Decimal score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBuf.Bcl.Decimal Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "Director" field.</summary>
    public const int DirectorFieldNumber = 6;
    private string director_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Director {
      get { return director_; }
      set {
        director_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ReleaseDate" field.</summary>
    public const int ReleaseDateFieldNumber = 7;
    private global::ProtoBuf.Bcl.DateTime releaseDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBuf.Bcl.DateTime ReleaseDate {
      get { return releaseDate_; }
      set {
        releaseDate_ = value;
      }
    }

    /// <summary>Field number for the "TagLine" field.</summary>
    public const int TagLineFieldNumber = 8;
    private string tagLine_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TagLine {
      get { return tagLine_; }
      set {
        tagLine_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Genres" field.</summary>
    public const int GenresFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _repeated_genres_codec
        = pb::FieldCodec.ForString(74);
    private readonly pbc::RepeatedField<string> genres_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Genres {
      get { return genres_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Movie);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Movie other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ImdbId != other.ImdbId) return false;
      if (Title != other.Title) return false;
      if (Rating != other.Rating) return false;
      if (!object.Equals(Score, other.Score)) return false;
      if (Director != other.Director) return false;
      if (!object.Equals(ReleaseDate, other.ReleaseDate)) return false;
      if (TagLine != other.TagLine) return false;
      if(!genres_.Equals(other.genres_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (ImdbId.Length != 0) hash ^= ImdbId.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (Rating.Length != 0) hash ^= Rating.GetHashCode();
      if (score_ != null) hash ^= Score.GetHashCode();
      if (Director.Length != 0) hash ^= Director.GetHashCode();
      if (releaseDate_ != null) hash ^= ReleaseDate.GetHashCode();
      if (TagLine.Length != 0) hash ^= TagLine.GetHashCode();
      hash ^= genres_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (ImdbId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ImdbId);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Title);
      }
      if (Rating.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Rating);
      }
      if (score_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Score);
      }
      if (Director.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Director);
      }
      if (releaseDate_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ReleaseDate);
      }
      if (TagLine.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(TagLine);
      }
      genres_.WriteTo(output, _repeated_genres_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (ImdbId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImdbId);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (Rating.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Rating);
      }
      if (score_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Score);
      }
      if (Director.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Director);
      }
      if (releaseDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReleaseDate);
      }
      if (TagLine.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TagLine);
      }
      size += genres_.CalculateSize(_repeated_genres_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Movie other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.ImdbId.Length != 0) {
        ImdbId = other.ImdbId;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.Rating.Length != 0) {
        Rating = other.Rating;
      }
      if (other.score_ != null) {
        if (score_ == null) {
          Score = new global::ProtoBuf.Bcl.Decimal();
        }
        Score.MergeFrom(other.Score);
      }
      if (other.Director.Length != 0) {
        Director = other.Director;
      }
      if (other.releaseDate_ != null) {
        if (releaseDate_ == null) {
          ReleaseDate = new global::ProtoBuf.Bcl.DateTime();
        }
        ReleaseDate.MergeFrom(other.ReleaseDate);
      }
      if (other.TagLine.Length != 0) {
        TagLine = other.TagLine;
      }
      genres_.Add(other.genres_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            ImdbId = input.ReadString();
            break;
          }
          case 26: {
            Title = input.ReadString();
            break;
          }
          case 34: {
            Rating = input.ReadString();
            break;
          }
          case 42: {
            if (score_ == null) {
              Score = new global::ProtoBuf.Bcl.Decimal();
            }
            input.ReadMessage(Score);
            break;
          }
          case 50: {
            Director = input.ReadString();
            break;
          }
          case 58: {
            if (releaseDate_ == null) {
              ReleaseDate = new global::ProtoBuf.Bcl.DateTime();
            }
            input.ReadMessage(ReleaseDate);
            break;
          }
          case 66: {
            TagLine = input.ReadString();
            break;
          }
          case 74: {
            genres_.AddEntriesFrom(input, _repeated_genres_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Multiply : pb::IMessage<Multiply> {
    private static readonly pb::MessageParser<Multiply> _parser = new pb::MessageParser<Multiply>(() => new Multiply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Multiply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Multiply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Multiply(Multiply other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Multiply Clone() {
      return new Multiply(this);
    }

    /// <summary>Field number for the "X" field.</summary>
    public const int XFieldNumber = 1;
    private int x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "Y" field.</summary>
    public const int YFieldNumber = 2;
    private int y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Multiply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Multiply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0) hash ^= X.GetHashCode();
      if (Y != 0) hash ^= Y.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
      }
      if (Y != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Multiply other) {
      if (other == null) {
        return;
      }
      if (other.X != 0) {
        X = other.X;
      }
      if (other.Y != 0) {
        Y = other.Y;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            X = input.ReadInt32();
            break;
          }
          case 16: {
            Y = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MultiplyResponse : pb::IMessage<MultiplyResponse> {
    private static readonly pb::MessageParser<MultiplyResponse> _parser = new pb::MessageParser<MultiplyResponse>(() => new MultiplyResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MultiplyResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiplyResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiplyResponse(MultiplyResponse other) : this() {
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiplyResponse Clone() {
      return new MultiplyResponse(this);
    }

    /// <summary>Field number for the "Result" field.</summary>
    public const int ResultFieldNumber = 1;
    private int result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MultiplyResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MultiplyResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MultiplyResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PostChatToChannel : pb::IMessage<PostChatToChannel> {
    private static readonly pb::MessageParser<PostChatToChannel> _parser = new pb::MessageParser<PostChatToChannel>(() => new PostChatToChannel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostChatToChannel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostChatToChannel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostChatToChannel(PostChatToChannel other) : this() {
      from_ = other.from_;
      toUserId_ = other.toUserId_;
      channel_ = other.channel_;
      message_ = other.message_;
      selector_ = other.selector_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostChatToChannel Clone() {
      return new PostChatToChannel(this);
    }

    /// <summary>Field number for the "From" field.</summary>
    public const int FromFieldNumber = 1;
    private string from_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string From {
      get { return from_; }
      set {
        from_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ToUserId" field.</summary>
    public const int ToUserIdFieldNumber = 2;
    private string toUserId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ToUserId {
      get { return toUserId_; }
      set {
        toUserId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Channel" field.</summary>
    public const int ChannelFieldNumber = 3;
    private string channel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Channel {
      get { return channel_; }
      set {
        channel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Message" field.</summary>
    public const int MessageFieldNumber = 4;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Selector" field.</summary>
    public const int SelectorFieldNumber = 5;
    private string selector_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Selector {
      get { return selector_; }
      set {
        selector_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostChatToChannel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostChatToChannel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (From != other.From) return false;
      if (ToUserId != other.ToUserId) return false;
      if (Channel != other.Channel) return false;
      if (Message != other.Message) return false;
      if (Selector != other.Selector) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (From.Length != 0) hash ^= From.GetHashCode();
      if (ToUserId.Length != 0) hash ^= ToUserId.GetHashCode();
      if (Channel.Length != 0) hash ^= Channel.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (Selector.Length != 0) hash ^= Selector.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (From.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(From);
      }
      if (ToUserId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ToUserId);
      }
      if (Channel.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Channel);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Message);
      }
      if (Selector.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Selector);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (From.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(From);
      }
      if (ToUserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ToUserId);
      }
      if (Channel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Channel);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (Selector.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Selector);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostChatToChannel other) {
      if (other == null) {
        return;
      }
      if (other.From.Length != 0) {
        From = other.From;
      }
      if (other.ToUserId.Length != 0) {
        ToUserId = other.ToUserId;
      }
      if (other.Channel.Length != 0) {
        Channel = other.Channel;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.Selector.Length != 0) {
        Selector = other.Selector;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            From = input.ReadString();
            break;
          }
          case 18: {
            ToUserId = input.ReadString();
            break;
          }
          case 26: {
            Channel = input.ReadString();
            break;
          }
          case 34: {
            Message = input.ReadString();
            break;
          }
          case 42: {
            Selector = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryBase : pb::IMessage<QueryBase> {
    private static readonly pb::MessageParser<QueryBase> _parser = new pb::MessageParser<QueryBase>(() => new QueryBase());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryBase> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryBase() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryBase(QueryBase other) : this() {
      skip_ = other.skip_;
      take_ = other.take_;
      orderBy_ = other.orderBy_;
      orderByDesc_ = other.orderByDesc_;
      include_ = other.include_;
      fields_ = other.fields_;
      meta_ = other.meta_.Clone();
      switch (other.SubtypeCase) {
        case SubtypeOneofCase.QueryDbRockstarCustomRockstar:
          QueryDbRockstarCustomRockstar = other.QueryDbRockstarCustomRockstar.Clone();
          break;
        case SubtypeOneofCase.QueryDbMovie:
          QueryDbMovie = other.QueryDbMovie.Clone();
          break;
        case SubtypeOneofCase.QueryDbRockstarReference:
          QueryDbRockstarReference = other.QueryDbRockstarReference.Clone();
          break;
        case SubtypeOneofCase.QueryDbRockstar:
          QueryDbRockstar = other.QueryDbRockstar.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryBase Clone() {
      return new QueryBase(this);
    }

    /// <summary>Field number for the "Skip" field.</summary>
    public const int SkipFieldNumber = 1;
    private int skip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Skip {
      get { return skip_; }
      set {
        skip_ = value;
      }
    }

    /// <summary>Field number for the "Take" field.</summary>
    public const int TakeFieldNumber = 2;
    private int take_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Take {
      get { return take_; }
      set {
        take_ = value;
      }
    }

    /// <summary>Field number for the "OrderBy" field.</summary>
    public const int OrderByFieldNumber = 3;
    private string orderBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderBy {
      get { return orderBy_; }
      set {
        orderBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OrderByDesc" field.</summary>
    public const int OrderByDescFieldNumber = 4;
    private string orderByDesc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderByDesc {
      get { return orderByDesc_; }
      set {
        orderByDesc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Include" field.</summary>
    public const int IncludeFieldNumber = 5;
    private string include_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Include {
      get { return include_; }
      set {
        include_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Fields" field.</summary>
    public const int FieldsFieldNumber = 6;
    private string fields_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Fields {
      get { return fields_; }
      set {
        fields_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 7;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 58);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    /// <summary>Field number for the "QueryDb_Rockstar_CustomRockstar" field.</summary>
    public const int QueryDbRockstarCustomRockstarFieldNumber = 1595516;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Rockstar_CustomRockstar QueryDbRockstarCustomRockstar {
      get { return subtypeCase_ == SubtypeOneofCase.QueryDbRockstarCustomRockstar ? (global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Rockstar_CustomRockstar) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryDbRockstarCustomRockstar;
      }
    }

    /// <summary>Field number for the "QueryDb_Movie" field.</summary>
    public const int QueryDbMovieFieldNumber = 133134611;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Movie QueryDbMovie {
      get { return subtypeCase_ == SubtypeOneofCase.QueryDbMovie ? (global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Movie) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryDbMovie;
      }
    }

    /// <summary>Field number for the "QueryDb_RockstarReference" field.</summary>
    public const int QueryDbRockstarReferenceFieldNumber = 139856298;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryDb_RockstarReference QueryDbRockstarReference {
      get { return subtypeCase_ == SubtypeOneofCase.QueryDbRockstarReference ? (global::ServiceStack.Extensions.Tests.Protoc.QueryDb_RockstarReference) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryDbRockstarReference;
      }
    }

    /// <summary>Field number for the "QueryDb_Rockstar" field.</summary>
    public const int QueryDbRockstarFieldNumber = 447773769;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Rockstar QueryDbRockstar {
      get { return subtypeCase_ == SubtypeOneofCase.QueryDbRockstar ? (global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Rockstar) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryDbRockstar;
      }
    }

    private object subtype_;
    /// <summary>Enum of possible cases for the "subtype" oneof.</summary>
    public enum SubtypeOneofCase {
      None = 0,
      QueryDbRockstarCustomRockstar = 1595516,
      QueryDbMovie = 133134611,
      QueryDbRockstarReference = 139856298,
      QueryDbRockstar = 447773769,
    }
    private SubtypeOneofCase subtypeCase_ = SubtypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubtypeOneofCase SubtypeCase {
      get { return subtypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubtype() {
      subtypeCase_ = SubtypeOneofCase.None;
      subtype_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryBase);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryBase other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Skip != other.Skip) return false;
      if (Take != other.Take) return false;
      if (OrderBy != other.OrderBy) return false;
      if (OrderByDesc != other.OrderByDesc) return false;
      if (Include != other.Include) return false;
      if (Fields != other.Fields) return false;
      if (!Meta.Equals(other.Meta)) return false;
      if (!object.Equals(QueryDbRockstarCustomRockstar, other.QueryDbRockstarCustomRockstar)) return false;
      if (!object.Equals(QueryDbMovie, other.QueryDbMovie)) return false;
      if (!object.Equals(QueryDbRockstarReference, other.QueryDbRockstarReference)) return false;
      if (!object.Equals(QueryDbRockstar, other.QueryDbRockstar)) return false;
      if (SubtypeCase != other.SubtypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Skip != 0) hash ^= Skip.GetHashCode();
      if (Take != 0) hash ^= Take.GetHashCode();
      if (OrderBy.Length != 0) hash ^= OrderBy.GetHashCode();
      if (OrderByDesc.Length != 0) hash ^= OrderByDesc.GetHashCode();
      if (Include.Length != 0) hash ^= Include.GetHashCode();
      if (Fields.Length != 0) hash ^= Fields.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (subtypeCase_ == SubtypeOneofCase.QueryDbRockstarCustomRockstar) hash ^= QueryDbRockstarCustomRockstar.GetHashCode();
      if (subtypeCase_ == SubtypeOneofCase.QueryDbMovie) hash ^= QueryDbMovie.GetHashCode();
      if (subtypeCase_ == SubtypeOneofCase.QueryDbRockstarReference) hash ^= QueryDbRockstarReference.GetHashCode();
      if (subtypeCase_ == SubtypeOneofCase.QueryDbRockstar) hash ^= QueryDbRockstar.GetHashCode();
      hash ^= (int) subtypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Skip != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Skip);
      }
      if (Take != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Take);
      }
      if (OrderBy.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(OrderBy);
      }
      if (OrderByDesc.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(OrderByDesc);
      }
      if (Include.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Include);
      }
      if (Fields.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Fields);
      }
      meta_.WriteTo(output, _map_meta_codec);
      if (subtypeCase_ == SubtypeOneofCase.QueryDbRockstarCustomRockstar) {
        output.WriteRawTag(226, 135, 139, 6);
        output.WriteMessage(QueryDbRockstarCustomRockstar);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryDbMovie) {
        output.WriteRawTag(154, 145, 239, 251, 3);
        output.WriteMessage(QueryDbMovie);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryDbRockstarReference) {
        output.WriteRawTag(210, 154, 193, 149, 4);
        output.WriteMessage(QueryDbRockstarReference);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryDbRockstar) {
        output.WriteRawTag(202, 196, 143, 172, 13);
        output.WriteMessage(QueryDbRockstar);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Skip != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Skip);
      }
      if (Take != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Take);
      }
      if (OrderBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderBy);
      }
      if (OrderByDesc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderByDesc);
      }
      if (Include.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Include);
      }
      if (Fields.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fields);
      }
      size += meta_.CalculateSize(_map_meta_codec);
      if (subtypeCase_ == SubtypeOneofCase.QueryDbRockstarCustomRockstar) {
        size += 4 + pb::CodedOutputStream.ComputeMessageSize(QueryDbRockstarCustomRockstar);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryDbMovie) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryDbMovie);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryDbRockstarReference) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryDbRockstarReference);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryDbRockstar) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryDbRockstar);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryBase other) {
      if (other == null) {
        return;
      }
      if (other.Skip != 0) {
        Skip = other.Skip;
      }
      if (other.Take != 0) {
        Take = other.Take;
      }
      if (other.OrderBy.Length != 0) {
        OrderBy = other.OrderBy;
      }
      if (other.OrderByDesc.Length != 0) {
        OrderByDesc = other.OrderByDesc;
      }
      if (other.Include.Length != 0) {
        Include = other.Include;
      }
      if (other.Fields.Length != 0) {
        Fields = other.Fields;
      }
      meta_.Add(other.meta_);
      switch (other.SubtypeCase) {
        case SubtypeOneofCase.QueryDbRockstarCustomRockstar:
          if (QueryDbRockstarCustomRockstar == null) {
            QueryDbRockstarCustomRockstar = new global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Rockstar_CustomRockstar();
          }
          QueryDbRockstarCustomRockstar.MergeFrom(other.QueryDbRockstarCustomRockstar);
          break;
        case SubtypeOneofCase.QueryDbMovie:
          if (QueryDbMovie == null) {
            QueryDbMovie = new global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Movie();
          }
          QueryDbMovie.MergeFrom(other.QueryDbMovie);
          break;
        case SubtypeOneofCase.QueryDbRockstarReference:
          if (QueryDbRockstarReference == null) {
            QueryDbRockstarReference = new global::ServiceStack.Extensions.Tests.Protoc.QueryDb_RockstarReference();
          }
          QueryDbRockstarReference.MergeFrom(other.QueryDbRockstarReference);
          break;
        case SubtypeOneofCase.QueryDbRockstar:
          if (QueryDbRockstar == null) {
            QueryDbRockstar = new global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Rockstar();
          }
          QueryDbRockstar.MergeFrom(other.QueryDbRockstar);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Skip = input.ReadInt32();
            break;
          }
          case 16: {
            Take = input.ReadInt32();
            break;
          }
          case 26: {
            OrderBy = input.ReadString();
            break;
          }
          case 34: {
            OrderByDesc = input.ReadString();
            break;
          }
          case 42: {
            Include = input.ReadString();
            break;
          }
          case 50: {
            Fields = input.ReadString();
            break;
          }
          case 58: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
          case 12764130: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Rockstar_CustomRockstar subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Rockstar_CustomRockstar();
            if (subtypeCase_ == SubtypeOneofCase.QueryDbRockstarCustomRockstar) {
              subBuilder.MergeFrom(QueryDbRockstarCustomRockstar);
            }
            input.ReadMessage(subBuilder);
            QueryDbRockstarCustomRockstar = subBuilder;
            break;
          }
          case 1065076890: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Movie subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Movie();
            if (subtypeCase_ == SubtypeOneofCase.QueryDbMovie) {
              subBuilder.MergeFrom(QueryDbMovie);
            }
            input.ReadMessage(subBuilder);
            QueryDbMovie = subBuilder;
            break;
          }
          case 1118850386: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryDb_RockstarReference subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryDb_RockstarReference();
            if (subtypeCase_ == SubtypeOneofCase.QueryDbRockstarReference) {
              subBuilder.MergeFrom(QueryDbRockstarReference);
            }
            input.ReadMessage(subBuilder);
            QueryDbRockstarReference = subBuilder;
            break;
          }
          case 3582190154: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Rockstar subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Rockstar();
            if (subtypeCase_ == SubtypeOneofCase.QueryDbRockstar) {
              subBuilder.MergeFrom(QueryDbRockstar);
            }
            input.ReadMessage(subBuilder);
            QueryDbRockstar = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryCaseInsensitiveOrderBy : pb::IMessage<QueryCaseInsensitiveOrderBy> {
    private static readonly pb::MessageParser<QueryCaseInsensitiveOrderBy> _parser = new pb::MessageParser<QueryCaseInsensitiveOrderBy>(() => new QueryCaseInsensitiveOrderBy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryCaseInsensitiveOrderBy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryCaseInsensitiveOrderBy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryCaseInsensitiveOrderBy(QueryCaseInsensitiveOrderBy other) : this() {
      age_ = other.age_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryCaseInsensitiveOrderBy Clone() {
      return new QueryCaseInsensitiveOrderBy(this);
    }

    /// <summary>Field number for the "Age" field.</summary>
    public const int AgeFieldNumber = 1;
    private int age_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Age {
      get { return age_; }
      set {
        age_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryCaseInsensitiveOrderBy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryCaseInsensitiveOrderBy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Age != other.Age) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Age != 0) hash ^= Age.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Age != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Age);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Age != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Age);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryCaseInsensitiveOrderBy other) {
      if (other == null) {
        return;
      }
      if (other.Age != 0) {
        Age = other.Age;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Age = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryChangeConnectionInfo : pb::IMessage<QueryChangeConnectionInfo> {
    private static readonly pb::MessageParser<QueryChangeConnectionInfo> _parser = new pb::MessageParser<QueryChangeConnectionInfo>(() => new QueryChangeConnectionInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryChangeConnectionInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryChangeConnectionInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryChangeConnectionInfo(QueryChangeConnectionInfo other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryChangeConnectionInfo Clone() {
      return new QueryChangeConnectionInfo(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryChangeConnectionInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryChangeConnectionInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryChangeConnectionInfo other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class QueryCustomRockstarsReferences : pb::IMessage<QueryCustomRockstarsReferences> {
    private static readonly pb::MessageParser<QueryCustomRockstarsReferences> _parser = new pb::MessageParser<QueryCustomRockstarsReferences>(() => new QueryCustomRockstarsReferences());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryCustomRockstarsReferences> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryCustomRockstarsReferences() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryCustomRockstarsReferences(QueryCustomRockstarsReferences other) : this() {
      age_ = other.age_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryCustomRockstarsReferences Clone() {
      return new QueryCustomRockstarsReferences(this);
    }

    /// <summary>Field number for the "Age" field.</summary>
    public const int AgeFieldNumber = 1;
    private int age_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Age {
      get { return age_; }
      set {
        age_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryCustomRockstarsReferences);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryCustomRockstarsReferences other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Age != other.Age) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Age != 0) hash ^= Age.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Age != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Age);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Age != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Age);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryCustomRockstarsReferences other) {
      if (other == null) {
        return;
      }
      if (other.Age != 0) {
        Age = other.Age;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Age = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryDb_Movie : pb::IMessage<QueryDb_Movie> {
    private static readonly pb::MessageParser<QueryDb_Movie> _parser = new pb::MessageParser<QueryDb_Movie>(() => new QueryDb_Movie());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryDb_Movie> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_Movie() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_Movie(QueryDb_Movie other) : this() {
      switch (other.SubtypeCase) {
        case SubtypeOneofCase.StreamMovies:
          StreamMovies = other.StreamMovies.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_Movie Clone() {
      return new QueryDb_Movie(this);
    }

    /// <summary>Field number for the "StreamMovies" field.</summary>
    public const int StreamMoviesFieldNumber = 254558360;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.StreamMovies StreamMovies {
      get { return subtypeCase_ == SubtypeOneofCase.StreamMovies ? (global::ServiceStack.Extensions.Tests.Protoc.StreamMovies) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.StreamMovies;
      }
    }

    private object subtype_;
    /// <summary>Enum of possible cases for the "subtype" oneof.</summary>
    public enum SubtypeOneofCase {
      None = 0,
      StreamMovies = 254558360,
    }
    private SubtypeOneofCase subtypeCase_ = SubtypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubtypeOneofCase SubtypeCase {
      get { return subtypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubtype() {
      subtypeCase_ = SubtypeOneofCase.None;
      subtype_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryDb_Movie);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryDb_Movie other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StreamMovies, other.StreamMovies)) return false;
      if (SubtypeCase != other.SubtypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (subtypeCase_ == SubtypeOneofCase.StreamMovies) hash ^= StreamMovies.GetHashCode();
      hash ^= (int) subtypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (subtypeCase_ == SubtypeOneofCase.StreamMovies) {
        output.WriteRawTag(194, 137, 136, 203, 7);
        output.WriteMessage(StreamMovies);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (subtypeCase_ == SubtypeOneofCase.StreamMovies) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(StreamMovies);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryDb_Movie other) {
      if (other == null) {
        return;
      }
      switch (other.SubtypeCase) {
        case SubtypeOneofCase.StreamMovies:
          if (StreamMovies == null) {
            StreamMovies = new global::ServiceStack.Extensions.Tests.Protoc.StreamMovies();
          }
          StreamMovies.MergeFrom(other.StreamMovies);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 2036466882: {
            global::ServiceStack.Extensions.Tests.Protoc.StreamMovies subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.StreamMovies();
            if (subtypeCase_ == SubtypeOneofCase.StreamMovies) {
              subBuilder.MergeFrom(StreamMovies);
            }
            input.ReadMessage(subBuilder);
            StreamMovies = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryDb_Rockstar : pb::IMessage<QueryDb_Rockstar> {
    private static readonly pb::MessageParser<QueryDb_Rockstar> _parser = new pb::MessageParser<QueryDb_Rockstar>(() => new QueryDb_Rockstar());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryDb_Rockstar> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_Rockstar() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_Rockstar(QueryDb_Rockstar other) : this() {
      switch (other.SubtypeCase) {
        case SubtypeOneofCase.QueryChangeConnectionInfo:
          QueryChangeConnectionInfo = other.QueryChangeConnectionInfo.Clone();
          break;
        case SubtypeOneofCase.QueryOverridedRockstars:
          QueryOverridedRockstars = other.QueryOverridedRockstars.Clone();
          break;
        case SubtypeOneofCase.QueryCaseInsensitiveOrderBy:
          QueryCaseInsensitiveOrderBy = other.QueryCaseInsensitiveOrderBy.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_Rockstar Clone() {
      return new QueryDb_Rockstar(this);
    }

    /// <summary>Field number for the "QueryChangeConnectionInfo" field.</summary>
    public const int QueryChangeConnectionInfoFieldNumber = 48758375;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryChangeConnectionInfo QueryChangeConnectionInfo {
      get { return subtypeCase_ == SubtypeOneofCase.QueryChangeConnectionInfo ? (global::ServiceStack.Extensions.Tests.Protoc.QueryChangeConnectionInfo) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryChangeConnectionInfo;
      }
    }

    /// <summary>Field number for the "QueryOverridedRockstars" field.</summary>
    public const int QueryOverridedRockstarsFieldNumber = 120014899;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryOverridedRockstars QueryOverridedRockstars {
      get { return subtypeCase_ == SubtypeOneofCase.QueryOverridedRockstars ? (global::ServiceStack.Extensions.Tests.Protoc.QueryOverridedRockstars) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryOverridedRockstars;
      }
    }

    /// <summary>Field number for the "QueryCaseInsensitiveOrderBy" field.</summary>
    public const int QueryCaseInsensitiveOrderByFieldNumber = 425975099;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryCaseInsensitiveOrderBy QueryCaseInsensitiveOrderBy {
      get { return subtypeCase_ == SubtypeOneofCase.QueryCaseInsensitiveOrderBy ? (global::ServiceStack.Extensions.Tests.Protoc.QueryCaseInsensitiveOrderBy) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryCaseInsensitiveOrderBy;
      }
    }

    private object subtype_;
    /// <summary>Enum of possible cases for the "subtype" oneof.</summary>
    public enum SubtypeOneofCase {
      None = 0,
      QueryChangeConnectionInfo = 48758375,
      QueryOverridedRockstars = 120014899,
      QueryCaseInsensitiveOrderBy = 425975099,
    }
    private SubtypeOneofCase subtypeCase_ = SubtypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubtypeOneofCase SubtypeCase {
      get { return subtypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubtype() {
      subtypeCase_ = SubtypeOneofCase.None;
      subtype_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryDb_Rockstar);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryDb_Rockstar other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(QueryChangeConnectionInfo, other.QueryChangeConnectionInfo)) return false;
      if (!object.Equals(QueryOverridedRockstars, other.QueryOverridedRockstars)) return false;
      if (!object.Equals(QueryCaseInsensitiveOrderBy, other.QueryCaseInsensitiveOrderBy)) return false;
      if (SubtypeCase != other.SubtypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (subtypeCase_ == SubtypeOneofCase.QueryChangeConnectionInfo) hash ^= QueryChangeConnectionInfo.GetHashCode();
      if (subtypeCase_ == SubtypeOneofCase.QueryOverridedRockstars) hash ^= QueryOverridedRockstars.GetHashCode();
      if (subtypeCase_ == SubtypeOneofCase.QueryCaseInsensitiveOrderBy) hash ^= QueryCaseInsensitiveOrderBy.GetHashCode();
      hash ^= (int) subtypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (subtypeCase_ == SubtypeOneofCase.QueryChangeConnectionInfo) {
        output.WriteRawTag(186, 230, 255, 185, 1);
        output.WriteMessage(QueryChangeConnectionInfo);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryOverridedRockstars) {
        output.WriteRawTag(154, 131, 233, 201, 3);
        output.WriteMessage(QueryOverridedRockstars);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryCaseInsensitiveOrderBy) {
        output.WriteRawTag(218, 211, 251, 216, 12);
        output.WriteMessage(QueryCaseInsensitiveOrderBy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (subtypeCase_ == SubtypeOneofCase.QueryChangeConnectionInfo) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryChangeConnectionInfo);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryOverridedRockstars) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryOverridedRockstars);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryCaseInsensitiveOrderBy) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryCaseInsensitiveOrderBy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryDb_Rockstar other) {
      if (other == null) {
        return;
      }
      switch (other.SubtypeCase) {
        case SubtypeOneofCase.QueryChangeConnectionInfo:
          if (QueryChangeConnectionInfo == null) {
            QueryChangeConnectionInfo = new global::ServiceStack.Extensions.Tests.Protoc.QueryChangeConnectionInfo();
          }
          QueryChangeConnectionInfo.MergeFrom(other.QueryChangeConnectionInfo);
          break;
        case SubtypeOneofCase.QueryOverridedRockstars:
          if (QueryOverridedRockstars == null) {
            QueryOverridedRockstars = new global::ServiceStack.Extensions.Tests.Protoc.QueryOverridedRockstars();
          }
          QueryOverridedRockstars.MergeFrom(other.QueryOverridedRockstars);
          break;
        case SubtypeOneofCase.QueryCaseInsensitiveOrderBy:
          if (QueryCaseInsensitiveOrderBy == null) {
            QueryCaseInsensitiveOrderBy = new global::ServiceStack.Extensions.Tests.Protoc.QueryCaseInsensitiveOrderBy();
          }
          QueryCaseInsensitiveOrderBy.MergeFrom(other.QueryCaseInsensitiveOrderBy);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 390067002: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryChangeConnectionInfo subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryChangeConnectionInfo();
            if (subtypeCase_ == SubtypeOneofCase.QueryChangeConnectionInfo) {
              subBuilder.MergeFrom(QueryChangeConnectionInfo);
            }
            input.ReadMessage(subBuilder);
            QueryChangeConnectionInfo = subBuilder;
            break;
          }
          case 960119194: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryOverridedRockstars subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryOverridedRockstars();
            if (subtypeCase_ == SubtypeOneofCase.QueryOverridedRockstars) {
              subBuilder.MergeFrom(QueryOverridedRockstars);
            }
            input.ReadMessage(subBuilder);
            QueryOverridedRockstars = subBuilder;
            break;
          }
          case 3407800794: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryCaseInsensitiveOrderBy subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryCaseInsensitiveOrderBy();
            if (subtypeCase_ == SubtypeOneofCase.QueryCaseInsensitiveOrderBy) {
              subBuilder.MergeFrom(QueryCaseInsensitiveOrderBy);
            }
            input.ReadMessage(subBuilder);
            QueryCaseInsensitiveOrderBy = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryDb_RockstarReference : pb::IMessage<QueryDb_RockstarReference> {
    private static readonly pb::MessageParser<QueryDb_RockstarReference> _parser = new pb::MessageParser<QueryDb_RockstarReference>(() => new QueryDb_RockstarReference());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryDb_RockstarReference> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_RockstarReference() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_RockstarReference(QueryDb_RockstarReference other) : this() {
      switch (other.SubtypeCase) {
        case SubtypeOneofCase.QueryCustomRockstarsReferences:
          QueryCustomRockstarsReferences = other.QueryCustomRockstarsReferences.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_RockstarReference Clone() {
      return new QueryDb_RockstarReference(this);
    }

    /// <summary>Field number for the "QueryCustomRockstarsReferences" field.</summary>
    public const int QueryCustomRockstarsReferencesFieldNumber = 376893524;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryCustomRockstarsReferences QueryCustomRockstarsReferences {
      get { return subtypeCase_ == SubtypeOneofCase.QueryCustomRockstarsReferences ? (global::ServiceStack.Extensions.Tests.Protoc.QueryCustomRockstarsReferences) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryCustomRockstarsReferences;
      }
    }

    private object subtype_;
    /// <summary>Enum of possible cases for the "subtype" oneof.</summary>
    public enum SubtypeOneofCase {
      None = 0,
      QueryCustomRockstarsReferences = 376893524,
    }
    private SubtypeOneofCase subtypeCase_ = SubtypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubtypeOneofCase SubtypeCase {
      get { return subtypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubtype() {
      subtypeCase_ = SubtypeOneofCase.None;
      subtype_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryDb_RockstarReference);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryDb_RockstarReference other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(QueryCustomRockstarsReferences, other.QueryCustomRockstarsReferences)) return false;
      if (SubtypeCase != other.SubtypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (subtypeCase_ == SubtypeOneofCase.QueryCustomRockstarsReferences) hash ^= QueryCustomRockstarsReferences.GetHashCode();
      hash ^= (int) subtypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (subtypeCase_ == SubtypeOneofCase.QueryCustomRockstarsReferences) {
        output.WriteRawTag(162, 133, 222, 157, 11);
        output.WriteMessage(QueryCustomRockstarsReferences);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (subtypeCase_ == SubtypeOneofCase.QueryCustomRockstarsReferences) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryCustomRockstarsReferences);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryDb_RockstarReference other) {
      if (other == null) {
        return;
      }
      switch (other.SubtypeCase) {
        case SubtypeOneofCase.QueryCustomRockstarsReferences:
          if (QueryCustomRockstarsReferences == null) {
            QueryCustomRockstarsReferences = new global::ServiceStack.Extensions.Tests.Protoc.QueryCustomRockstarsReferences();
          }
          QueryCustomRockstarsReferences.MergeFrom(other.QueryCustomRockstarsReferences);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 3015148194: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryCustomRockstarsReferences subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryCustomRockstarsReferences();
            if (subtypeCase_ == SubtypeOneofCase.QueryCustomRockstarsReferences) {
              subBuilder.MergeFrom(QueryCustomRockstarsReferences);
            }
            input.ReadMessage(subBuilder);
            QueryCustomRockstarsReferences = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryDb_Rockstar_CustomRockstar : pb::IMessage<QueryDb_Rockstar_CustomRockstar> {
    private static readonly pb::MessageParser<QueryDb_Rockstar_CustomRockstar> _parser = new pb::MessageParser<QueryDb_Rockstar_CustomRockstar>(() => new QueryDb_Rockstar_CustomRockstar());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryDb_Rockstar_CustomRockstar> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_Rockstar_CustomRockstar() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_Rockstar_CustomRockstar(QueryDb_Rockstar_CustomRockstar other) : this() {
      switch (other.SubtypeCase) {
        case SubtypeOneofCase.QueryRockstarAlbumsCustomLeftJoin:
          QueryRockstarAlbumsCustomLeftJoin = other.QueryRockstarAlbumsCustomLeftJoin.Clone();
          break;
        case SubtypeOneofCase.QueryOverridedCustomRockstars:
          QueryOverridedCustomRockstars = other.QueryOverridedCustomRockstars.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_Rockstar_CustomRockstar Clone() {
      return new QueryDb_Rockstar_CustomRockstar(this);
    }

    /// <summary>Field number for the "QueryRockstarAlbumsCustomLeftJoin" field.</summary>
    public const int QueryRockstarAlbumsCustomLeftJoinFieldNumber = 396185863;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarAlbumsCustomLeftJoin QueryRockstarAlbumsCustomLeftJoin {
      get { return subtypeCase_ == SubtypeOneofCase.QueryRockstarAlbumsCustomLeftJoin ? (global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarAlbumsCustomLeftJoin) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryRockstarAlbumsCustomLeftJoin;
      }
    }

    /// <summary>Field number for the "QueryOverridedCustomRockstars" field.</summary>
    public const int QueryOverridedCustomRockstarsFieldNumber = 442785347;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryOverridedCustomRockstars QueryOverridedCustomRockstars {
      get { return subtypeCase_ == SubtypeOneofCase.QueryOverridedCustomRockstars ? (global::ServiceStack.Extensions.Tests.Protoc.QueryOverridedCustomRockstars) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryOverridedCustomRockstars;
      }
    }

    private object subtype_;
    /// <summary>Enum of possible cases for the "subtype" oneof.</summary>
    public enum SubtypeOneofCase {
      None = 0,
      QueryRockstarAlbumsCustomLeftJoin = 396185863,
      QueryOverridedCustomRockstars = 442785347,
    }
    private SubtypeOneofCase subtypeCase_ = SubtypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubtypeOneofCase SubtypeCase {
      get { return subtypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubtype() {
      subtypeCase_ = SubtypeOneofCase.None;
      subtype_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryDb_Rockstar_CustomRockstar);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryDb_Rockstar_CustomRockstar other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(QueryRockstarAlbumsCustomLeftJoin, other.QueryRockstarAlbumsCustomLeftJoin)) return false;
      if (!object.Equals(QueryOverridedCustomRockstars, other.QueryOverridedCustomRockstars)) return false;
      if (SubtypeCase != other.SubtypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (subtypeCase_ == SubtypeOneofCase.QueryRockstarAlbumsCustomLeftJoin) hash ^= QueryRockstarAlbumsCustomLeftJoin.GetHashCode();
      if (subtypeCase_ == SubtypeOneofCase.QueryOverridedCustomRockstars) hash ^= QueryOverridedCustomRockstars.GetHashCode();
      hash ^= (int) subtypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (subtypeCase_ == SubtypeOneofCase.QueryRockstarAlbumsCustomLeftJoin) {
        output.WriteRawTag(186, 144, 170, 231, 11);
        output.WriteMessage(QueryRockstarAlbumsCustomLeftJoin);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryOverridedCustomRockstars) {
        output.WriteRawTag(154, 228, 139, 153, 13);
        output.WriteMessage(QueryOverridedCustomRockstars);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (subtypeCase_ == SubtypeOneofCase.QueryRockstarAlbumsCustomLeftJoin) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryRockstarAlbumsCustomLeftJoin);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryOverridedCustomRockstars) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryOverridedCustomRockstars);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryDb_Rockstar_CustomRockstar other) {
      if (other == null) {
        return;
      }
      switch (other.SubtypeCase) {
        case SubtypeOneofCase.QueryRockstarAlbumsCustomLeftJoin:
          if (QueryRockstarAlbumsCustomLeftJoin == null) {
            QueryRockstarAlbumsCustomLeftJoin = new global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarAlbumsCustomLeftJoin();
          }
          QueryRockstarAlbumsCustomLeftJoin.MergeFrom(other.QueryRockstarAlbumsCustomLeftJoin);
          break;
        case SubtypeOneofCase.QueryOverridedCustomRockstars:
          if (QueryOverridedCustomRockstars == null) {
            QueryOverridedCustomRockstars = new global::ServiceStack.Extensions.Tests.Protoc.QueryOverridedCustomRockstars();
          }
          QueryOverridedCustomRockstars.MergeFrom(other.QueryOverridedCustomRockstars);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 3169486906: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarAlbumsCustomLeftJoin subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarAlbumsCustomLeftJoin();
            if (subtypeCase_ == SubtypeOneofCase.QueryRockstarAlbumsCustomLeftJoin) {
              subBuilder.MergeFrom(QueryRockstarAlbumsCustomLeftJoin);
            }
            input.ReadMessage(subBuilder);
            QueryRockstarAlbumsCustomLeftJoin = subBuilder;
            break;
          }
          case 3542282778: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryOverridedCustomRockstars subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryOverridedCustomRockstars();
            if (subtypeCase_ == SubtypeOneofCase.QueryOverridedCustomRockstars) {
              subBuilder.MergeFrom(QueryOverridedCustomRockstars);
            }
            input.ReadMessage(subBuilder);
            QueryOverridedCustomRockstars = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryOverridedCustomRockstars : pb::IMessage<QueryOverridedCustomRockstars> {
    private static readonly pb::MessageParser<QueryOverridedCustomRockstars> _parser = new pb::MessageParser<QueryOverridedCustomRockstars>(() => new QueryOverridedCustomRockstars());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryOverridedCustomRockstars> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryOverridedCustomRockstars() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryOverridedCustomRockstars(QueryOverridedCustomRockstars other) : this() {
      age_ = other.age_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryOverridedCustomRockstars Clone() {
      return new QueryOverridedCustomRockstars(this);
    }

    /// <summary>Field number for the "Age" field.</summary>
    public const int AgeFieldNumber = 1;
    private int age_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Age {
      get { return age_; }
      set {
        age_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryOverridedCustomRockstars);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryOverridedCustomRockstars other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Age != other.Age) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Age != 0) hash ^= Age.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Age != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Age);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Age != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Age);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryOverridedCustomRockstars other) {
      if (other == null) {
        return;
      }
      if (other.Age != 0) {
        Age = other.Age;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Age = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryOverridedRockstars : pb::IMessage<QueryOverridedRockstars> {
    private static readonly pb::MessageParser<QueryOverridedRockstars> _parser = new pb::MessageParser<QueryOverridedRockstars>(() => new QueryOverridedRockstars());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryOverridedRockstars> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryOverridedRockstars() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryOverridedRockstars(QueryOverridedRockstars other) : this() {
      age_ = other.age_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryOverridedRockstars Clone() {
      return new QueryOverridedRockstars(this);
    }

    /// <summary>Field number for the "Age" field.</summary>
    public const int AgeFieldNumber = 1;
    private int age_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Age {
      get { return age_; }
      set {
        age_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryOverridedRockstars);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryOverridedRockstars other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Age != other.Age) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Age != 0) hash ^= Age.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Age != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Age);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Age != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Age);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryOverridedRockstars other) {
      if (other == null) {
        return;
      }
      if (other.Age != 0) {
        Age = other.Age;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Age = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryResponse_CustomRockstar : pb::IMessage<QueryResponse_CustomRockstar> {
    private static readonly pb::MessageParser<QueryResponse_CustomRockstar> _parser = new pb::MessageParser<QueryResponse_CustomRockstar>(() => new QueryResponse_CustomRockstar());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryResponse_CustomRockstar> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_CustomRockstar() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_CustomRockstar(QueryResponse_CustomRockstar other) : this() {
      offset_ = other.offset_;
      total_ = other.total_;
      results_ = other.results_.Clone();
      meta_ = other.meta_.Clone();
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_CustomRockstar Clone() {
      return new QueryResponse_CustomRockstar(this);
    }

    /// <summary>Field number for the "Offset" field.</summary>
    public const int OffsetFieldNumber = 1;
    private int offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "Total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    /// <summary>Field number for the "Results" field.</summary>
    public const int ResultsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::ServiceStack.Extensions.Tests.Protoc.CustomRockstar> _repeated_results_codec
        = pb::FieldCodec.ForMessage(26, global::ServiceStack.Extensions.Tests.Protoc.CustomRockstar.Parser);
    private readonly pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.CustomRockstar> results_ = new pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.CustomRockstar>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.CustomRockstar> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 5;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryResponse_CustomRockstar);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryResponse_CustomRockstar other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Offset != other.Offset) return false;
      if (Total != other.Total) return false;
      if(!results_.Equals(other.results_)) return false;
      if (!Meta.Equals(other.Meta)) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Offset != 0) hash ^= Offset.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      hash ^= results_.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Offset != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Offset);
      }
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      results_.WriteTo(output, _repeated_results_codec);
      meta_.WriteTo(output, _map_meta_codec);
      if (responseStatus_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Offset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Offset);
      }
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      size += results_.CalculateSize(_repeated_results_codec);
      size += meta_.CalculateSize(_map_meta_codec);
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryResponse_CustomRockstar other) {
      if (other == null) {
        return;
      }
      if (other.Offset != 0) {
        Offset = other.Offset;
      }
      if (other.Total != 0) {
        Total = other.Total;
      }
      results_.Add(other.results_);
      meta_.Add(other.meta_);
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Offset = input.ReadInt32();
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
          case 26: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
          case 34: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
          case 42: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryResponse_Movie : pb::IMessage<QueryResponse_Movie> {
    private static readonly pb::MessageParser<QueryResponse_Movie> _parser = new pb::MessageParser<QueryResponse_Movie>(() => new QueryResponse_Movie());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryResponse_Movie> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_Movie() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_Movie(QueryResponse_Movie other) : this() {
      offset_ = other.offset_;
      total_ = other.total_;
      results_ = other.results_.Clone();
      meta_ = other.meta_.Clone();
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_Movie Clone() {
      return new QueryResponse_Movie(this);
    }

    /// <summary>Field number for the "Offset" field.</summary>
    public const int OffsetFieldNumber = 1;
    private int offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "Total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    /// <summary>Field number for the "Results" field.</summary>
    public const int ResultsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::ServiceStack.Extensions.Tests.Protoc.Movie> _repeated_results_codec
        = pb::FieldCodec.ForMessage(26, global::ServiceStack.Extensions.Tests.Protoc.Movie.Parser);
    private readonly pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.Movie> results_ = new pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.Movie>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.Movie> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 5;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryResponse_Movie);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryResponse_Movie other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Offset != other.Offset) return false;
      if (Total != other.Total) return false;
      if(!results_.Equals(other.results_)) return false;
      if (!Meta.Equals(other.Meta)) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Offset != 0) hash ^= Offset.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      hash ^= results_.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Offset != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Offset);
      }
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      results_.WriteTo(output, _repeated_results_codec);
      meta_.WriteTo(output, _map_meta_codec);
      if (responseStatus_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Offset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Offset);
      }
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      size += results_.CalculateSize(_repeated_results_codec);
      size += meta_.CalculateSize(_map_meta_codec);
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryResponse_Movie other) {
      if (other == null) {
        return;
      }
      if (other.Offset != 0) {
        Offset = other.Offset;
      }
      if (other.Total != 0) {
        Total = other.Total;
      }
      results_.Add(other.results_);
      meta_.Add(other.meta_);
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Offset = input.ReadInt32();
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
          case 26: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
          case 34: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
          case 42: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryResponse_Rockstar : pb::IMessage<QueryResponse_Rockstar> {
    private static readonly pb::MessageParser<QueryResponse_Rockstar> _parser = new pb::MessageParser<QueryResponse_Rockstar>(() => new QueryResponse_Rockstar());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryResponse_Rockstar> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_Rockstar() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_Rockstar(QueryResponse_Rockstar other) : this() {
      offset_ = other.offset_;
      total_ = other.total_;
      results_ = other.results_.Clone();
      meta_ = other.meta_.Clone();
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_Rockstar Clone() {
      return new QueryResponse_Rockstar(this);
    }

    /// <summary>Field number for the "Offset" field.</summary>
    public const int OffsetFieldNumber = 1;
    private int offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "Total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    /// <summary>Field number for the "Results" field.</summary>
    public const int ResultsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::ServiceStack.Extensions.Tests.Protoc.Rockstar> _repeated_results_codec
        = pb::FieldCodec.ForMessage(26, global::ServiceStack.Extensions.Tests.Protoc.Rockstar.Parser);
    private readonly pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.Rockstar> results_ = new pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.Rockstar>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.Rockstar> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 5;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryResponse_Rockstar);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryResponse_Rockstar other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Offset != other.Offset) return false;
      if (Total != other.Total) return false;
      if(!results_.Equals(other.results_)) return false;
      if (!Meta.Equals(other.Meta)) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Offset != 0) hash ^= Offset.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      hash ^= results_.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Offset != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Offset);
      }
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      results_.WriteTo(output, _repeated_results_codec);
      meta_.WriteTo(output, _map_meta_codec);
      if (responseStatus_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Offset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Offset);
      }
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      size += results_.CalculateSize(_repeated_results_codec);
      size += meta_.CalculateSize(_map_meta_codec);
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryResponse_Rockstar other) {
      if (other == null) {
        return;
      }
      if (other.Offset != 0) {
        Offset = other.Offset;
      }
      if (other.Total != 0) {
        Total = other.Total;
      }
      results_.Add(other.results_);
      meta_.Add(other.meta_);
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Offset = input.ReadInt32();
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
          case 26: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
          case 34: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
          case 42: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryResponse_RockstarReference : pb::IMessage<QueryResponse_RockstarReference> {
    private static readonly pb::MessageParser<QueryResponse_RockstarReference> _parser = new pb::MessageParser<QueryResponse_RockstarReference>(() => new QueryResponse_RockstarReference());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryResponse_RockstarReference> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_RockstarReference() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_RockstarReference(QueryResponse_RockstarReference other) : this() {
      offset_ = other.offset_;
      total_ = other.total_;
      results_ = other.results_.Clone();
      meta_ = other.meta_.Clone();
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_RockstarReference Clone() {
      return new QueryResponse_RockstarReference(this);
    }

    /// <summary>Field number for the "Offset" field.</summary>
    public const int OffsetFieldNumber = 1;
    private int offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "Total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    /// <summary>Field number for the "Results" field.</summary>
    public const int ResultsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::ServiceStack.Extensions.Tests.Protoc.RockstarReference> _repeated_results_codec
        = pb::FieldCodec.ForMessage(26, global::ServiceStack.Extensions.Tests.Protoc.RockstarReference.Parser);
    private readonly pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.RockstarReference> results_ = new pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.RockstarReference>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.RockstarReference> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 5;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryResponse_RockstarReference);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryResponse_RockstarReference other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Offset != other.Offset) return false;
      if (Total != other.Total) return false;
      if(!results_.Equals(other.results_)) return false;
      if (!Meta.Equals(other.Meta)) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Offset != 0) hash ^= Offset.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      hash ^= results_.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Offset != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Offset);
      }
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      results_.WriteTo(output, _repeated_results_codec);
      meta_.WriteTo(output, _map_meta_codec);
      if (responseStatus_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Offset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Offset);
      }
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      size += results_.CalculateSize(_repeated_results_codec);
      size += meta_.CalculateSize(_map_meta_codec);
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryResponse_RockstarReference other) {
      if (other == null) {
        return;
      }
      if (other.Offset != 0) {
        Offset = other.Offset;
      }
      if (other.Total != 0) {
        Total = other.Total;
      }
      results_.Add(other.results_);
      meta_.Add(other.meta_);
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Offset = input.ReadInt32();
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
          case 26: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
          case 34: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
          case 42: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryRockstarAlbumsCustomLeftJoin : pb::IMessage<QueryRockstarAlbumsCustomLeftJoin> {
    private static readonly pb::MessageParser<QueryRockstarAlbumsCustomLeftJoin> _parser = new pb::MessageParser<QueryRockstarAlbumsCustomLeftJoin>(() => new QueryRockstarAlbumsCustomLeftJoin());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryRockstarAlbumsCustomLeftJoin> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRockstarAlbumsCustomLeftJoin() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRockstarAlbumsCustomLeftJoin(QueryRockstarAlbumsCustomLeftJoin other) : this() {
      age_ = other.age_;
      albumName_ = other.albumName_;
      idNotEqualTo_ = other.idNotEqualTo_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRockstarAlbumsCustomLeftJoin Clone() {
      return new QueryRockstarAlbumsCustomLeftJoin(this);
    }

    /// <summary>Field number for the "Age" field.</summary>
    public const int AgeFieldNumber = 1;
    private int age_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Age {
      get { return age_; }
      set {
        age_ = value;
      }
    }

    /// <summary>Field number for the "AlbumName" field.</summary>
    public const int AlbumNameFieldNumber = 2;
    private string albumName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AlbumName {
      get { return albumName_; }
      set {
        albumName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IdNotEqualTo" field.</summary>
    public const int IdNotEqualToFieldNumber = 3;
    private int idNotEqualTo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IdNotEqualTo {
      get { return idNotEqualTo_; }
      set {
        idNotEqualTo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryRockstarAlbumsCustomLeftJoin);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryRockstarAlbumsCustomLeftJoin other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Age != other.Age) return false;
      if (AlbumName != other.AlbumName) return false;
      if (IdNotEqualTo != other.IdNotEqualTo) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Age != 0) hash ^= Age.GetHashCode();
      if (AlbumName.Length != 0) hash ^= AlbumName.GetHashCode();
      if (IdNotEqualTo != 0) hash ^= IdNotEqualTo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Age != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Age);
      }
      if (AlbumName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AlbumName);
      }
      if (IdNotEqualTo != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(IdNotEqualTo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Age != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Age);
      }
      if (AlbumName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AlbumName);
      }
      if (IdNotEqualTo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IdNotEqualTo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryRockstarAlbumsCustomLeftJoin other) {
      if (other == null) {
        return;
      }
      if (other.Age != 0) {
        Age = other.Age;
      }
      if (other.AlbumName.Length != 0) {
        AlbumName = other.AlbumName;
      }
      if (other.IdNotEqualTo != 0) {
        IdNotEqualTo = other.IdNotEqualTo;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Age = input.ReadInt32();
            break;
          }
          case 18: {
            AlbumName = input.ReadString();
            break;
          }
          case 24: {
            IdNotEqualTo = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RegenerateApiKeys : pb::IMessage<RegenerateApiKeys> {
    private static readonly pb::MessageParser<RegenerateApiKeys> _parser = new pb::MessageParser<RegenerateApiKeys>(() => new RegenerateApiKeys());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegenerateApiKeys> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegenerateApiKeys() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegenerateApiKeys(RegenerateApiKeys other) : this() {
      environment_ = other.environment_;
      meta_ = other.meta_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegenerateApiKeys Clone() {
      return new RegenerateApiKeys(this);
    }

    /// <summary>Field number for the "Environment" field.</summary>
    public const int EnvironmentFieldNumber = 1;
    private string environment_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Environment {
      get { return environment_; }
      set {
        environment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 2;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 18);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegenerateApiKeys);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegenerateApiKeys other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Environment != other.Environment) return false;
      if (!Meta.Equals(other.Meta)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Environment.Length != 0) hash ^= Environment.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Environment.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Environment);
      }
      meta_.WriteTo(output, _map_meta_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Environment.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Environment);
      }
      size += meta_.CalculateSize(_map_meta_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegenerateApiKeys other) {
      if (other == null) {
        return;
      }
      if (other.Environment.Length != 0) {
        Environment = other.Environment;
      }
      meta_.Add(other.meta_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Environment = input.ReadString();
            break;
          }
          case 18: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RegenerateApiKeysResponse : pb::IMessage<RegenerateApiKeysResponse> {
    private static readonly pb::MessageParser<RegenerateApiKeysResponse> _parser = new pb::MessageParser<RegenerateApiKeysResponse>(() => new RegenerateApiKeysResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegenerateApiKeysResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegenerateApiKeysResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegenerateApiKeysResponse(RegenerateApiKeysResponse other) : this() {
      results_ = other.results_.Clone();
      meta_ = other.meta_.Clone();
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegenerateApiKeysResponse Clone() {
      return new RegenerateApiKeysResponse(this);
    }

    /// <summary>Field number for the "Results" field.</summary>
    public const int ResultsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ServiceStack.Extensions.Tests.Protoc.UserApiKey> _repeated_results_codec
        = pb::FieldCodec.ForMessage(10, global::ServiceStack.Extensions.Tests.Protoc.UserApiKey.Parser);
    private readonly pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.UserApiKey> results_ = new pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.UserApiKey>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.UserApiKey> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 2;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 18);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 3;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegenerateApiKeysResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegenerateApiKeysResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!results_.Equals(other.results_)) return false;
      if (!Meta.Equals(other.Meta)) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= results_.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      results_.WriteTo(output, _repeated_results_codec);
      meta_.WriteTo(output, _map_meta_codec);
      if (responseStatus_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += results_.CalculateSize(_repeated_results_codec);
      size += meta_.CalculateSize(_map_meta_codec);
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegenerateApiKeysResponse other) {
      if (other == null) {
        return;
      }
      results_.Add(other.results_);
      meta_.Add(other.meta_);
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
          case 18: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
          case 26: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Register : pb::IMessage<Register> {
    private static readonly pb::MessageParser<Register> _parser = new pb::MessageParser<Register>(() => new Register());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Register> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Register() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Register(Register other) : this() {
      userName_ = other.userName_;
      firstName_ = other.firstName_;
      lastName_ = other.lastName_;
      displayName_ = other.displayName_;
      email_ = other.email_;
      password_ = other.password_;
      confirmPassword_ = other.confirmPassword_;
      autoLogin_ = other.autoLogin_;
      continue_ = other.continue_;
      errorView_ = other.errorView_;
      meta_ = other.meta_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Register Clone() {
      return new Register(this);
    }

    /// <summary>Field number for the "UserName" field.</summary>
    public const int UserNameFieldNumber = 1;
    private string userName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "FirstName" field.</summary>
    public const int FirstNameFieldNumber = 2;
    private string firstName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FirstName {
      get { return firstName_; }
      set {
        firstName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LastName" field.</summary>
    public const int LastNameFieldNumber = 3;
    private string lastName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastName {
      get { return lastName_; }
      set {
        lastName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DisplayName" field.</summary>
    public const int DisplayNameFieldNumber = 4;
    private string displayName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Email" field.</summary>
    public const int EmailFieldNumber = 5;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Password" field.</summary>
    public const int PasswordFieldNumber = 6;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConfirmPassword" field.</summary>
    public const int ConfirmPasswordFieldNumber = 7;
    private string confirmPassword_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConfirmPassword {
      get { return confirmPassword_; }
      set {
        confirmPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AutoLogin" field.</summary>
    public const int AutoLoginFieldNumber = 8;
    private bool autoLogin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AutoLogin {
      get { return autoLogin_; }
      set {
        autoLogin_ = value;
      }
    }

    /// <summary>Field number for the "Continue" field.</summary>
    public const int ContinueFieldNumber = 9;
    private string continue_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Continue {
      get { return continue_; }
      set {
        continue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ErrorView" field.</summary>
    public const int ErrorViewFieldNumber = 10;
    private string errorView_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrorView {
      get { return errorView_; }
      set {
        errorView_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 11;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 90);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Register);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Register other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserName != other.UserName) return false;
      if (FirstName != other.FirstName) return false;
      if (LastName != other.LastName) return false;
      if (DisplayName != other.DisplayName) return false;
      if (Email != other.Email) return false;
      if (Password != other.Password) return false;
      if (ConfirmPassword != other.ConfirmPassword) return false;
      if (AutoLogin != other.AutoLogin) return false;
      if (Continue != other.Continue) return false;
      if (ErrorView != other.ErrorView) return false;
      if (!Meta.Equals(other.Meta)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (FirstName.Length != 0) hash ^= FirstName.GetHashCode();
      if (LastName.Length != 0) hash ^= LastName.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (ConfirmPassword.Length != 0) hash ^= ConfirmPassword.GetHashCode();
      if (AutoLogin != false) hash ^= AutoLogin.GetHashCode();
      if (Continue.Length != 0) hash ^= Continue.GetHashCode();
      if (ErrorView.Length != 0) hash ^= ErrorView.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserName);
      }
      if (FirstName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FirstName);
      }
      if (LastName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LastName);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DisplayName);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Email);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Password);
      }
      if (ConfirmPassword.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ConfirmPassword);
      }
      if (AutoLogin != false) {
        output.WriteRawTag(64);
        output.WriteBool(AutoLogin);
      }
      if (Continue.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Continue);
      }
      if (ErrorView.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ErrorView);
      }
      meta_.WriteTo(output, _map_meta_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (FirstName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstName);
      }
      if (LastName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastName);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (ConfirmPassword.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConfirmPassword);
      }
      if (AutoLogin != false) {
        size += 1 + 1;
      }
      if (Continue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Continue);
      }
      if (ErrorView.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorView);
      }
      size += meta_.CalculateSize(_map_meta_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Register other) {
      if (other == null) {
        return;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.FirstName.Length != 0) {
        FirstName = other.FirstName;
      }
      if (other.LastName.Length != 0) {
        LastName = other.LastName;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.ConfirmPassword.Length != 0) {
        ConfirmPassword = other.ConfirmPassword;
      }
      if (other.AutoLogin != false) {
        AutoLogin = other.AutoLogin;
      }
      if (other.Continue.Length != 0) {
        Continue = other.Continue;
      }
      if (other.ErrorView.Length != 0) {
        ErrorView = other.ErrorView;
      }
      meta_.Add(other.meta_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserName = input.ReadString();
            break;
          }
          case 18: {
            FirstName = input.ReadString();
            break;
          }
          case 26: {
            LastName = input.ReadString();
            break;
          }
          case 34: {
            DisplayName = input.ReadString();
            break;
          }
          case 42: {
            Email = input.ReadString();
            break;
          }
          case 50: {
            Password = input.ReadString();
            break;
          }
          case 58: {
            ConfirmPassword = input.ReadString();
            break;
          }
          case 64: {
            AutoLogin = input.ReadBool();
            break;
          }
          case 74: {
            Continue = input.ReadString();
            break;
          }
          case 82: {
            ErrorView = input.ReadString();
            break;
          }
          case 90: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RegisterResponse : pb::IMessage<RegisterResponse> {
    private static readonly pb::MessageParser<RegisterResponse> _parser = new pb::MessageParser<RegisterResponse>(() => new RegisterResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegisterResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterResponse(RegisterResponse other) : this() {
      userId_ = other.userId_;
      sessionId_ = other.sessionId_;
      userName_ = other.userName_;
      referrerUrl_ = other.referrerUrl_;
      bearerToken_ = other.bearerToken_;
      refreshToken_ = other.refreshToken_;
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      meta_ = other.meta_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterResponse Clone() {
      return new RegisterResponse(this);
    }

    /// <summary>Field number for the "UserId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SessionId" field.</summary>
    public const int SessionIdFieldNumber = 2;
    private string sessionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UserName" field.</summary>
    public const int UserNameFieldNumber = 3;
    private string userName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ReferrerUrl" field.</summary>
    public const int ReferrerUrlFieldNumber = 4;
    private string referrerUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReferrerUrl {
      get { return referrerUrl_; }
      set {
        referrerUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "BearerToken" field.</summary>
    public const int BearerTokenFieldNumber = 5;
    private string bearerToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BearerToken {
      get { return bearerToken_; }
      set {
        bearerToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RefreshToken" field.</summary>
    public const int RefreshTokenFieldNumber = 6;
    private string refreshToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RefreshToken {
      get { return refreshToken_; }
      set {
        refreshToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 7;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 8;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 66);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegisterResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegisterResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (SessionId != other.SessionId) return false;
      if (UserName != other.UserName) return false;
      if (ReferrerUrl != other.ReferrerUrl) return false;
      if (BearerToken != other.BearerToken) return false;
      if (RefreshToken != other.RefreshToken) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      if (!Meta.Equals(other.Meta)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (ReferrerUrl.Length != 0) hash ^= ReferrerUrl.GetHashCode();
      if (BearerToken.Length != 0) hash ^= BearerToken.GetHashCode();
      if (RefreshToken.Length != 0) hash ^= RefreshToken.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (SessionId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SessionId);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UserName);
      }
      if (ReferrerUrl.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ReferrerUrl);
      }
      if (BearerToken.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(BearerToken);
      }
      if (RefreshToken.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(RefreshToken);
      }
      if (responseStatus_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ResponseStatus);
      }
      meta_.WriteTo(output, _map_meta_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (SessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
      }
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (ReferrerUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReferrerUrl);
      }
      if (BearerToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BearerToken);
      }
      if (RefreshToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RefreshToken);
      }
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      size += meta_.CalculateSize(_map_meta_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegisterResponse other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.SessionId.Length != 0) {
        SessionId = other.SessionId;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.ReferrerUrl.Length != 0) {
        ReferrerUrl = other.ReferrerUrl;
      }
      if (other.BearerToken.Length != 0) {
        BearerToken = other.BearerToken;
      }
      if (other.RefreshToken.Length != 0) {
        RefreshToken = other.RefreshToken;
      }
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      meta_.Add(other.meta_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            SessionId = input.ReadString();
            break;
          }
          case 26: {
            UserName = input.ReadString();
            break;
          }
          case 34: {
            ReferrerUrl = input.ReadString();
            break;
          }
          case 42: {
            BearerToken = input.ReadString();
            break;
          }
          case 50: {
            RefreshToken = input.ReadString();
            break;
          }
          case 58: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
          case 66: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RequiresAuth : pb::IMessage<RequiresAuth> {
    private static readonly pb::MessageParser<RequiresAuth> _parser = new pb::MessageParser<RequiresAuth>(() => new RequiresAuth());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequiresAuth> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequiresAuth() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequiresAuth(RequiresAuth other) : this() {
      name_ = other.name_;
      bearerToken_ = other.bearerToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequiresAuth Clone() {
      return new RequiresAuth(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "BearerToken" field.</summary>
    public const int BearerTokenFieldNumber = 2;
    private string bearerToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BearerToken {
      get { return bearerToken_; }
      set {
        bearerToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequiresAuth);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequiresAuth other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (BearerToken != other.BearerToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (BearerToken.Length != 0) hash ^= BearerToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (BearerToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BearerToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (BearerToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BearerToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequiresAuth other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.BearerToken.Length != 0) {
        BearerToken = other.BearerToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            BearerToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ResetTodos : pb::IMessage<ResetTodos> {
    private static readonly pb::MessageParser<ResetTodos> _parser = new pb::MessageParser<ResetTodos>(() => new ResetTodos());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResetTodos> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResetTodos() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResetTodos(ResetTodos other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResetTodos Clone() {
      return new ResetTodos(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResetTodos);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResetTodos other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResetTodos other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class ResponseError : pb::IMessage<ResponseError> {
    private static readonly pb::MessageParser<ResponseError> _parser = new pb::MessageParser<ResponseError>(() => new ResponseError());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResponseError> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseError() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseError(ResponseError other) : this() {
      errorCode_ = other.errorCode_;
      fieldName_ = other.fieldName_;
      message_ = other.message_;
      meta_ = other.meta_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseError Clone() {
      return new ResponseError(this);
    }

    /// <summary>Field number for the "ErrorCode" field.</summary>
    public const int ErrorCodeFieldNumber = 1;
    private string errorCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "FieldName" field.</summary>
    public const int FieldNameFieldNumber = 2;
    private string fieldName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FieldName {
      get { return fieldName_; }
      set {
        fieldName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Message" field.</summary>
    public const int MessageFieldNumber = 3;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResponseError);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResponseError other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ErrorCode != other.ErrorCode) return false;
      if (FieldName != other.FieldName) return false;
      if (Message != other.Message) return false;
      if (!Meta.Equals(other.Meta)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ErrorCode.Length != 0) hash ^= ErrorCode.GetHashCode();
      if (FieldName.Length != 0) hash ^= FieldName.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ErrorCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ErrorCode);
      }
      if (FieldName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FieldName);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Message);
      }
      meta_.WriteTo(output, _map_meta_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ErrorCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorCode);
      }
      if (FieldName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FieldName);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      size += meta_.CalculateSize(_map_meta_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResponseError other) {
      if (other == null) {
        return;
      }
      if (other.ErrorCode.Length != 0) {
        ErrorCode = other.ErrorCode;
      }
      if (other.FieldName.Length != 0) {
        FieldName = other.FieldName;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      meta_.Add(other.meta_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ErrorCode = input.ReadString();
            break;
          }
          case 18: {
            FieldName = input.ReadString();
            break;
          }
          case 26: {
            Message = input.ReadString();
            break;
          }
          case 34: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ResponseStatus : pb::IMessage<ResponseStatus> {
    private static readonly pb::MessageParser<ResponseStatus> _parser = new pb::MessageParser<ResponseStatus>(() => new ResponseStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResponseStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseStatus(ResponseStatus other) : this() {
      errorCode_ = other.errorCode_;
      message_ = other.message_;
      stackTrace_ = other.stackTrace_;
      errors_ = other.errors_.Clone();
      meta_ = other.meta_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseStatus Clone() {
      return new ResponseStatus(this);
    }

    /// <summary>Field number for the "ErrorCode" field.</summary>
    public const int ErrorCodeFieldNumber = 1;
    private string errorCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "StackTrace" field.</summary>
    public const int StackTraceFieldNumber = 3;
    private string stackTrace_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StackTrace {
      get { return stackTrace_; }
      set {
        stackTrace_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Errors" field.</summary>
    public const int ErrorsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::ServiceStack.Extensions.Tests.Protoc.ResponseError> _repeated_errors_codec
        = pb::FieldCodec.ForMessage(34, global::ServiceStack.Extensions.Tests.Protoc.ResponseError.Parser);
    private readonly pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.ResponseError> errors_ = new pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.ResponseError>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.ResponseError> Errors {
      get { return errors_; }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 5;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 42);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResponseStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResponseStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ErrorCode != other.ErrorCode) return false;
      if (Message != other.Message) return false;
      if (StackTrace != other.StackTrace) return false;
      if(!errors_.Equals(other.errors_)) return false;
      if (!Meta.Equals(other.Meta)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ErrorCode.Length != 0) hash ^= ErrorCode.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (StackTrace.Length != 0) hash ^= StackTrace.GetHashCode();
      hash ^= errors_.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ErrorCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ErrorCode);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (StackTrace.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(StackTrace);
      }
      errors_.WriteTo(output, _repeated_errors_codec);
      meta_.WriteTo(output, _map_meta_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ErrorCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorCode);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (StackTrace.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StackTrace);
      }
      size += errors_.CalculateSize(_repeated_errors_codec);
      size += meta_.CalculateSize(_map_meta_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResponseStatus other) {
      if (other == null) {
        return;
      }
      if (other.ErrorCode.Length != 0) {
        ErrorCode = other.ErrorCode;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.StackTrace.Length != 0) {
        StackTrace = other.StackTrace;
      }
      errors_.Add(other.errors_);
      meta_.Add(other.meta_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ErrorCode = input.ReadString();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
          case 26: {
            StackTrace = input.ReadString();
            break;
          }
          case 34: {
            errors_.AddEntriesFrom(input, _repeated_errors_codec);
            break;
          }
          case 42: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Rockstar : pb::IMessage<Rockstar> {
    private static readonly pb::MessageParser<Rockstar> _parser = new pb::MessageParser<Rockstar>(() => new Rockstar());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Rockstar> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[59]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rockstar() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rockstar(Rockstar other) : this() {
      id_ = other.id_;
      firstName_ = other.firstName_;
      lastName_ = other.lastName_;
      age_ = other.age_;
      dateOfBirth_ = other.dateOfBirth_ != null ? other.dateOfBirth_.Clone() : null;
      dateDied_ = other.dateDied_ != null ? other.dateDied_.Clone() : null;
      livingStatus_ = other.livingStatus_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rockstar Clone() {
      return new Rockstar(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "FirstName" field.</summary>
    public const int FirstNameFieldNumber = 2;
    private string firstName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FirstName {
      get { return firstName_; }
      set {
        firstName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LastName" field.</summary>
    public const int LastNameFieldNumber = 3;
    private string lastName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastName {
      get { return lastName_; }
      set {
        lastName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Age" field.</summary>
    public const int AgeFieldNumber = 4;
    private int age_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Age {
      get { return age_; }
      set {
        age_ = value;
      }
    }

    /// <summary>Field number for the "DateOfBirth" field.</summary>
    public const int DateOfBirthFieldNumber = 5;
    private global::ProtoBuf.Bcl.DateTime dateOfBirth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBuf.Bcl.DateTime DateOfBirth {
      get { return dateOfBirth_; }
      set {
        dateOfBirth_ = value;
      }
    }

    /// <summary>Field number for the "DateDied" field.</summary>
    public const int DateDiedFieldNumber = 6;
    private global::ProtoBuf.Bcl.DateTime dateDied_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBuf.Bcl.DateTime DateDied {
      get { return dateDied_; }
      set {
        dateDied_ = value;
      }
    }

    /// <summary>Field number for the "LivingStatus" field.</summary>
    public const int LivingStatusFieldNumber = 7;
    private global::ServiceStack.Extensions.Tests.Protoc.LivingStatus livingStatus_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.LivingStatus LivingStatus {
      get { return livingStatus_; }
      set {
        livingStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Rockstar);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Rockstar other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (FirstName != other.FirstName) return false;
      if (LastName != other.LastName) return false;
      if (Age != other.Age) return false;
      if (!object.Equals(DateOfBirth, other.DateOfBirth)) return false;
      if (!object.Equals(DateDied, other.DateDied)) return false;
      if (LivingStatus != other.LivingStatus) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (FirstName.Length != 0) hash ^= FirstName.GetHashCode();
      if (LastName.Length != 0) hash ^= LastName.GetHashCode();
      if (Age != 0) hash ^= Age.GetHashCode();
      if (dateOfBirth_ != null) hash ^= DateOfBirth.GetHashCode();
      if (dateDied_ != null) hash ^= DateDied.GetHashCode();
      if (LivingStatus != 0) hash ^= LivingStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (FirstName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FirstName);
      }
      if (LastName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LastName);
      }
      if (Age != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Age);
      }
      if (dateOfBirth_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(DateOfBirth);
      }
      if (dateDied_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(DateDied);
      }
      if (LivingStatus != 0) {
        output.WriteRawTag(56);
        output.WriteEnum((int) LivingStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (FirstName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstName);
      }
      if (LastName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastName);
      }
      if (Age != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Age);
      }
      if (dateOfBirth_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DateOfBirth);
      }
      if (dateDied_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DateDied);
      }
      if (LivingStatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LivingStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Rockstar other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.FirstName.Length != 0) {
        FirstName = other.FirstName;
      }
      if (other.LastName.Length != 0) {
        LastName = other.LastName;
      }
      if (other.Age != 0) {
        Age = other.Age;
      }
      if (other.dateOfBirth_ != null) {
        if (dateOfBirth_ == null) {
          DateOfBirth = new global::ProtoBuf.Bcl.DateTime();
        }
        DateOfBirth.MergeFrom(other.DateOfBirth);
      }
      if (other.dateDied_ != null) {
        if (dateDied_ == null) {
          DateDied = new global::ProtoBuf.Bcl.DateTime();
        }
        DateDied.MergeFrom(other.DateDied);
      }
      if (other.LivingStatus != 0) {
        LivingStatus = other.LivingStatus;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            FirstName = input.ReadString();
            break;
          }
          case 26: {
            LastName = input.ReadString();
            break;
          }
          case 32: {
            Age = input.ReadInt32();
            break;
          }
          case 42: {
            if (dateOfBirth_ == null) {
              DateOfBirth = new global::ProtoBuf.Bcl.DateTime();
            }
            input.ReadMessage(DateOfBirth);
            break;
          }
          case 50: {
            if (dateDied_ == null) {
              DateDied = new global::ProtoBuf.Bcl.DateTime();
            }
            input.ReadMessage(DateDied);
            break;
          }
          case 56: {
            LivingStatus = (global::ServiceStack.Extensions.Tests.Protoc.LivingStatus) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RockstarAlbum : pb::IMessage<RockstarAlbum> {
    private static readonly pb::MessageParser<RockstarAlbum> _parser = new pb::MessageParser<RockstarAlbum>(() => new RockstarAlbum());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RockstarAlbum> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[60]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RockstarAlbum() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RockstarAlbum(RockstarAlbum other) : this() {
      id_ = other.id_;
      rockstarId_ = other.rockstarId_;
      name_ = other.name_;
      genre_ = other.genre_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RockstarAlbum Clone() {
      return new RockstarAlbum(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "RockstarId" field.</summary>
    public const int RockstarIdFieldNumber = 2;
    private int rockstarId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RockstarId {
      get { return rockstarId_; }
      set {
        rockstarId_ = value;
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Genre" field.</summary>
    public const int GenreFieldNumber = 4;
    private string genre_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Genre {
      get { return genre_; }
      set {
        genre_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RockstarAlbum);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RockstarAlbum other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (RockstarId != other.RockstarId) return false;
      if (Name != other.Name) return false;
      if (Genre != other.Genre) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (RockstarId != 0) hash ^= RockstarId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Genre.Length != 0) hash ^= Genre.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (RockstarId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RockstarId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Genre.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Genre);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (RockstarId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RockstarId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Genre.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Genre);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RockstarAlbum other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.RockstarId != 0) {
        RockstarId = other.RockstarId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Genre.Length != 0) {
        Genre = other.Genre;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            RockstarId = input.ReadInt32();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Genre = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RockstarReference : pb::IMessage<RockstarReference> {
    private static readonly pb::MessageParser<RockstarReference> _parser = new pb::MessageParser<RockstarReference>(() => new RockstarReference());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RockstarReference> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[61]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RockstarReference() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RockstarReference(RockstarReference other) : this() {
      id_ = other.id_;
      firstName_ = other.firstName_;
      lastName_ = other.lastName_;
      age_ = other.age_;
      albums_ = other.albums_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RockstarReference Clone() {
      return new RockstarReference(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "FirstName" field.</summary>
    public const int FirstNameFieldNumber = 2;
    private string firstName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FirstName {
      get { return firstName_; }
      set {
        firstName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LastName" field.</summary>
    public const int LastNameFieldNumber = 3;
    private string lastName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastName {
      get { return lastName_; }
      set {
        lastName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Age" field.</summary>
    public const int AgeFieldNumber = 4;
    private int age_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Age {
      get { return age_; }
      set {
        age_ = value;
      }
    }

    /// <summary>Field number for the "Albums" field.</summary>
    public const int AlbumsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::ServiceStack.Extensions.Tests.Protoc.RockstarAlbum> _repeated_albums_codec
        = pb::FieldCodec.ForMessage(42, global::ServiceStack.Extensions.Tests.Protoc.RockstarAlbum.Parser);
    private readonly pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.RockstarAlbum> albums_ = new pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.RockstarAlbum>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.RockstarAlbum> Albums {
      get { return albums_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RockstarReference);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RockstarReference other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (FirstName != other.FirstName) return false;
      if (LastName != other.LastName) return false;
      if (Age != other.Age) return false;
      if(!albums_.Equals(other.albums_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (FirstName.Length != 0) hash ^= FirstName.GetHashCode();
      if (LastName.Length != 0) hash ^= LastName.GetHashCode();
      if (Age != 0) hash ^= Age.GetHashCode();
      hash ^= albums_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (FirstName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FirstName);
      }
      if (LastName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LastName);
      }
      if (Age != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Age);
      }
      albums_.WriteTo(output, _repeated_albums_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (FirstName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstName);
      }
      if (LastName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastName);
      }
      if (Age != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Age);
      }
      size += albums_.CalculateSize(_repeated_albums_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RockstarReference other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.FirstName.Length != 0) {
        FirstName = other.FirstName;
      }
      if (other.LastName.Length != 0) {
        LastName = other.LastName;
      }
      if (other.Age != 0) {
        Age = other.Age;
      }
      albums_.Add(other.albums_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            FirstName = input.ReadString();
            break;
          }
          case 26: {
            LastName = input.ReadString();
            break;
          }
          case 32: {
            Age = input.ReadInt32();
            break;
          }
          case 42: {
            albums_.AddEntriesFrom(input, _repeated_albums_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Secured : pb::IMessage<Secured> {
    private static readonly pb::MessageParser<Secured> _parser = new pb::MessageParser<Secured>(() => new Secured());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Secured> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[62]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Secured() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Secured(Secured other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Secured Clone() {
      return new Secured(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Secured);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Secured other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Secured other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SecuredResponse : pb::IMessage<SecuredResponse> {
    private static readonly pb::MessageParser<SecuredResponse> _parser = new pb::MessageParser<SecuredResponse>(() => new SecuredResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SecuredResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[63]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SecuredResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SecuredResponse(SecuredResponse other) : this() {
      result_ = other.result_;
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SecuredResponse Clone() {
      return new SecuredResponse(this);
    }

    /// <summary>Field number for the "Result" field.</summary>
    public const int ResultFieldNumber = 1;
    private string result_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Result {
      get { return result_; }
      set {
        result_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 2;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SecuredResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SecuredResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result.Length != 0) hash ^= Result.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Result);
      }
      if (responseStatus_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Result);
      }
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SecuredResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result.Length != 0) {
        Result = other.Result;
      }
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Result = input.ReadString();
            break;
          }
          case 18: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class StreamFiles : pb::IMessage<StreamFiles> {
    private static readonly pb::MessageParser<StreamFiles> _parser = new pb::MessageParser<StreamFiles>(() => new StreamFiles());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StreamFiles> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[64]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamFiles() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamFiles(StreamFiles other) : this() {
      paths_ = other.paths_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamFiles Clone() {
      return new StreamFiles(this);
    }

    /// <summary>Field number for the "Paths" field.</summary>
    public const int PathsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_paths_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> paths_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Paths {
      get { return paths_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StreamFiles);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StreamFiles other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!paths_.Equals(other.paths_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= paths_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      paths_.WriteTo(output, _repeated_paths_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += paths_.CalculateSize(_repeated_paths_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StreamFiles other) {
      if (other == null) {
        return;
      }
      paths_.Add(other.paths_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            paths_.AddEntriesFrom(input, _repeated_paths_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class StreamMovies : pb::IMessage<StreamMovies> {
    private static readonly pb::MessageParser<StreamMovies> _parser = new pb::MessageParser<StreamMovies>(() => new StreamMovies());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StreamMovies> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[65]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamMovies() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamMovies(StreamMovies other) : this() {
      ratings_ = other.ratings_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamMovies Clone() {
      return new StreamMovies(this);
    }

    /// <summary>Field number for the "Ratings" field.</summary>
    public const int RatingsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_ratings_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> ratings_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Ratings {
      get { return ratings_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StreamMovies);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StreamMovies other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!ratings_.Equals(other.ratings_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ratings_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      ratings_.WriteTo(output, _repeated_ratings_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += ratings_.CalculateSize(_repeated_ratings_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StreamMovies other) {
      if (other == null) {
        return;
      }
      ratings_.Add(other.ratings_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ratings_.AddEntriesFrom(input, _repeated_ratings_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class StreamServerEvents : pb::IMessage<StreamServerEvents> {
    private static readonly pb::MessageParser<StreamServerEvents> _parser = new pb::MessageParser<StreamServerEvents>(() => new StreamServerEvents());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StreamServerEvents> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[66]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamServerEvents() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamServerEvents(StreamServerEvents other) : this() {
      channels_ = other.channels_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamServerEvents Clone() {
      return new StreamServerEvents(this);
    }

    /// <summary>Field number for the "Channels" field.</summary>
    public const int ChannelsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_channels_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> channels_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Channels {
      get { return channels_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StreamServerEvents);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StreamServerEvents other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!channels_.Equals(other.channels_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= channels_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      channels_.WriteTo(output, _repeated_channels_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += channels_.CalculateSize(_repeated_channels_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StreamServerEvents other) {
      if (other == null) {
        return;
      }
      channels_.Add(other.channels_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            channels_.AddEntriesFrom(input, _repeated_channels_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class StreamServerEventsResponse : pb::IMessage<StreamServerEventsResponse> {
    private static readonly pb::MessageParser<StreamServerEventsResponse> _parser = new pb::MessageParser<StreamServerEventsResponse>(() => new StreamServerEventsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StreamServerEventsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[67]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamServerEventsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamServerEventsResponse(StreamServerEventsResponse other) : this() {
      eventId_ = other.eventId_;
      channel_ = other.channel_;
      selector_ = other.selector_;
      json_ = other.json_;
      op_ = other.op_;
      target_ = other.target_;
      cssSelector_ = other.cssSelector_;
      meta_ = other.meta_.Clone();
      userId_ = other.userId_;
      displayName_ = other.displayName_;
      profileUrl_ = other.profileUrl_;
      isAuthenticated_ = other.isAuthenticated_;
      channels_ = other.channels_.Clone();
      createdAt_ = other.createdAt_;
      id_ = other.id_;
      unRegisterUrl_ = other.unRegisterUrl_;
      updateSubscriberUrl_ = other.updateSubscriberUrl_;
      heartbeatUrl_ = other.heartbeatUrl_;
      heartbeatIntervalMs_ = other.heartbeatIntervalMs_;
      idleTimeoutMs_ = other.idleTimeoutMs_;
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamServerEventsResponse Clone() {
      return new StreamServerEventsResponse(this);
    }

    /// <summary>Field number for the "EventId" field.</summary>
    public const int EventIdFieldNumber = 1;
    private long eventId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EventId {
      get { return eventId_; }
      set {
        eventId_ = value;
      }
    }

    /// <summary>Field number for the "Channel" field.</summary>
    public const int ChannelFieldNumber = 2;
    private string channel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Channel {
      get { return channel_; }
      set {
        channel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Selector" field.</summary>
    public const int SelectorFieldNumber = 4;
    private string selector_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Selector {
      get { return selector_; }
      set {
        selector_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Json" field.</summary>
    public const int JsonFieldNumber = 5;
    private string json_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Json {
      get { return json_; }
      set {
        json_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Op" field.</summary>
    public const int OpFieldNumber = 6;
    private string op_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Op {
      get { return op_; }
      set {
        op_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Target" field.</summary>
    public const int TargetFieldNumber = 7;
    private string target_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Target {
      get { return target_; }
      set {
        target_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CssSelector" field.</summary>
    public const int CssSelectorFieldNumber = 8;
    private string cssSelector_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CssSelector {
      get { return cssSelector_; }
      set {
        cssSelector_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 9;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 74);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    /// <summary>Field number for the "UserId" field.</summary>
    public const int UserIdFieldNumber = 10;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DisplayName" field.</summary>
    public const int DisplayNameFieldNumber = 11;
    private string displayName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ProfileUrl" field.</summary>
    public const int ProfileUrlFieldNumber = 12;
    private string profileUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProfileUrl {
      get { return profileUrl_; }
      set {
        profileUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsAuthenticated" field.</summary>
    public const int IsAuthenticatedFieldNumber = 13;
    private bool isAuthenticated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsAuthenticated {
      get { return isAuthenticated_; }
      set {
        isAuthenticated_ = value;
      }
    }

    /// <summary>Field number for the "Channels" field.</summary>
    public const int ChannelsFieldNumber = 14;
    private static readonly pb::FieldCodec<string> _repeated_channels_codec
        = pb::FieldCodec.ForString(114);
    private readonly pbc::RepeatedField<string> channels_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Channels {
      get { return channels_; }
    }

    /// <summary>Field number for the "CreatedAt" field.</summary>
    public const int CreatedAtFieldNumber = 15;
    private long createdAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = value;
      }
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 21;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UnRegisterUrl" field.</summary>
    public const int UnRegisterUrlFieldNumber = 22;
    private string unRegisterUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnRegisterUrl {
      get { return unRegisterUrl_; }
      set {
        unRegisterUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UpdateSubscriberUrl" field.</summary>
    public const int UpdateSubscriberUrlFieldNumber = 23;
    private string updateSubscriberUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UpdateSubscriberUrl {
      get { return updateSubscriberUrl_; }
      set {
        updateSubscriberUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "HeartbeatUrl" field.</summary>
    public const int HeartbeatUrlFieldNumber = 24;
    private string heartbeatUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HeartbeatUrl {
      get { return heartbeatUrl_; }
      set {
        heartbeatUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "HeartbeatIntervalMs" field.</summary>
    public const int HeartbeatIntervalMsFieldNumber = 25;
    private long heartbeatIntervalMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long HeartbeatIntervalMs {
      get { return heartbeatIntervalMs_; }
      set {
        heartbeatIntervalMs_ = value;
      }
    }

    /// <summary>Field number for the "IdleTimeoutMs" field.</summary>
    public const int IdleTimeoutMsFieldNumber = 26;
    private long idleTimeoutMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long IdleTimeoutMs {
      get { return idleTimeoutMs_; }
      set {
        idleTimeoutMs_ = value;
      }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 30;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StreamServerEventsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StreamServerEventsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EventId != other.EventId) return false;
      if (Channel != other.Channel) return false;
      if (Selector != other.Selector) return false;
      if (Json != other.Json) return false;
      if (Op != other.Op) return false;
      if (Target != other.Target) return false;
      if (CssSelector != other.CssSelector) return false;
      if (!Meta.Equals(other.Meta)) return false;
      if (UserId != other.UserId) return false;
      if (DisplayName != other.DisplayName) return false;
      if (ProfileUrl != other.ProfileUrl) return false;
      if (IsAuthenticated != other.IsAuthenticated) return false;
      if(!channels_.Equals(other.channels_)) return false;
      if (CreatedAt != other.CreatedAt) return false;
      if (Id != other.Id) return false;
      if (UnRegisterUrl != other.UnRegisterUrl) return false;
      if (UpdateSubscriberUrl != other.UpdateSubscriberUrl) return false;
      if (HeartbeatUrl != other.HeartbeatUrl) return false;
      if (HeartbeatIntervalMs != other.HeartbeatIntervalMs) return false;
      if (IdleTimeoutMs != other.IdleTimeoutMs) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EventId != 0L) hash ^= EventId.GetHashCode();
      if (Channel.Length != 0) hash ^= Channel.GetHashCode();
      if (Selector.Length != 0) hash ^= Selector.GetHashCode();
      if (Json.Length != 0) hash ^= Json.GetHashCode();
      if (Op.Length != 0) hash ^= Op.GetHashCode();
      if (Target.Length != 0) hash ^= Target.GetHashCode();
      if (CssSelector.Length != 0) hash ^= CssSelector.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (ProfileUrl.Length != 0) hash ^= ProfileUrl.GetHashCode();
      if (IsAuthenticated != false) hash ^= IsAuthenticated.GetHashCode();
      hash ^= channels_.GetHashCode();
      if (CreatedAt != 0L) hash ^= CreatedAt.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (UnRegisterUrl.Length != 0) hash ^= UnRegisterUrl.GetHashCode();
      if (UpdateSubscriberUrl.Length != 0) hash ^= UpdateSubscriberUrl.GetHashCode();
      if (HeartbeatUrl.Length != 0) hash ^= HeartbeatUrl.GetHashCode();
      if (HeartbeatIntervalMs != 0L) hash ^= HeartbeatIntervalMs.GetHashCode();
      if (IdleTimeoutMs != 0L) hash ^= IdleTimeoutMs.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EventId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(EventId);
      }
      if (Channel.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Channel);
      }
      if (Selector.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Selector);
      }
      if (Json.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Json);
      }
      if (Op.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Op);
      }
      if (Target.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Target);
      }
      if (CssSelector.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CssSelector);
      }
      meta_.WriteTo(output, _map_meta_codec);
      if (UserId.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(UserId);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(DisplayName);
      }
      if (ProfileUrl.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(ProfileUrl);
      }
      if (IsAuthenticated != false) {
        output.WriteRawTag(104);
        output.WriteBool(IsAuthenticated);
      }
      channels_.WriteTo(output, _repeated_channels_codec);
      if (CreatedAt != 0L) {
        output.WriteRawTag(120);
        output.WriteInt64(CreatedAt);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(Id);
      }
      if (UnRegisterUrl.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(UnRegisterUrl);
      }
      if (UpdateSubscriberUrl.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(UpdateSubscriberUrl);
      }
      if (HeartbeatUrl.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(HeartbeatUrl);
      }
      if (HeartbeatIntervalMs != 0L) {
        output.WriteRawTag(200, 1);
        output.WriteInt64(HeartbeatIntervalMs);
      }
      if (IdleTimeoutMs != 0L) {
        output.WriteRawTag(208, 1);
        output.WriteInt64(IdleTimeoutMs);
      }
      if (responseStatus_ != null) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EventId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EventId);
      }
      if (Channel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Channel);
      }
      if (Selector.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Selector);
      }
      if (Json.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Json);
      }
      if (Op.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Op);
      }
      if (Target.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Target);
      }
      if (CssSelector.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CssSelector);
      }
      size += meta_.CalculateSize(_map_meta_codec);
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (ProfileUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProfileUrl);
      }
      if (IsAuthenticated != false) {
        size += 1 + 1;
      }
      size += channels_.CalculateSize(_repeated_channels_codec);
      if (CreatedAt != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreatedAt);
      }
      if (Id.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (UnRegisterUrl.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(UnRegisterUrl);
      }
      if (UpdateSubscriberUrl.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(UpdateSubscriberUrl);
      }
      if (HeartbeatUrl.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(HeartbeatUrl);
      }
      if (HeartbeatIntervalMs != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(HeartbeatIntervalMs);
      }
      if (IdleTimeoutMs != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(IdleTimeoutMs);
      }
      if (responseStatus_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StreamServerEventsResponse other) {
      if (other == null) {
        return;
      }
      if (other.EventId != 0L) {
        EventId = other.EventId;
      }
      if (other.Channel.Length != 0) {
        Channel = other.Channel;
      }
      if (other.Selector.Length != 0) {
        Selector = other.Selector;
      }
      if (other.Json.Length != 0) {
        Json = other.Json;
      }
      if (other.Op.Length != 0) {
        Op = other.Op;
      }
      if (other.Target.Length != 0) {
        Target = other.Target;
      }
      if (other.CssSelector.Length != 0) {
        CssSelector = other.CssSelector;
      }
      meta_.Add(other.meta_);
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.ProfileUrl.Length != 0) {
        ProfileUrl = other.ProfileUrl;
      }
      if (other.IsAuthenticated != false) {
        IsAuthenticated = other.IsAuthenticated;
      }
      channels_.Add(other.channels_);
      if (other.CreatedAt != 0L) {
        CreatedAt = other.CreatedAt;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.UnRegisterUrl.Length != 0) {
        UnRegisterUrl = other.UnRegisterUrl;
      }
      if (other.UpdateSubscriberUrl.Length != 0) {
        UpdateSubscriberUrl = other.UpdateSubscriberUrl;
      }
      if (other.HeartbeatUrl.Length != 0) {
        HeartbeatUrl = other.HeartbeatUrl;
      }
      if (other.HeartbeatIntervalMs != 0L) {
        HeartbeatIntervalMs = other.HeartbeatIntervalMs;
      }
      if (other.IdleTimeoutMs != 0L) {
        IdleTimeoutMs = other.IdleTimeoutMs;
      }
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EventId = input.ReadInt64();
            break;
          }
          case 18: {
            Channel = input.ReadString();
            break;
          }
          case 34: {
            Selector = input.ReadString();
            break;
          }
          case 42: {
            Json = input.ReadString();
            break;
          }
          case 50: {
            Op = input.ReadString();
            break;
          }
          case 58: {
            Target = input.ReadString();
            break;
          }
          case 66: {
            CssSelector = input.ReadString();
            break;
          }
          case 74: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
          case 82: {
            UserId = input.ReadString();
            break;
          }
          case 90: {
            DisplayName = input.ReadString();
            break;
          }
          case 98: {
            ProfileUrl = input.ReadString();
            break;
          }
          case 104: {
            IsAuthenticated = input.ReadBool();
            break;
          }
          case 114: {
            channels_.AddEntriesFrom(input, _repeated_channels_codec);
            break;
          }
          case 120: {
            CreatedAt = input.ReadInt64();
            break;
          }
          case 170: {
            Id = input.ReadString();
            break;
          }
          case 178: {
            UnRegisterUrl = input.ReadString();
            break;
          }
          case 186: {
            UpdateSubscriberUrl = input.ReadString();
            break;
          }
          case 194: {
            HeartbeatUrl = input.ReadString();
            break;
          }
          case 200: {
            HeartbeatIntervalMs = input.ReadInt64();
            break;
          }
          case 208: {
            IdleTimeoutMs = input.ReadInt64();
            break;
          }
          case 242: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Throw : pb::IMessage<Throw> {
    private static readonly pb::MessageParser<Throw> _parser = new pb::MessageParser<Throw>(() => new Throw());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Throw> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[68]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Throw() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Throw(Throw other) : this() {
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Throw Clone() {
      return new Throw(this);
    }

    /// <summary>Field number for the "Message" field.</summary>
    public const int MessageFieldNumber = 1;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Throw);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Throw other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Throw other) {
      if (other == null) {
        return;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ThrowCustom : pb::IMessage<ThrowCustom> {
    private static readonly pb::MessageParser<ThrowCustom> _parser = new pb::MessageParser<ThrowCustom>(() => new ThrowCustom());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ThrowCustom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[69]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThrowCustom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThrowCustom(ThrowCustom other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThrowCustom Clone() {
      return new ThrowCustom(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ThrowCustom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ThrowCustom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ThrowCustom other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class ThrowCustomResponse : pb::IMessage<ThrowCustomResponse> {
    private static readonly pb::MessageParser<ThrowCustomResponse> _parser = new pb::MessageParser<ThrowCustomResponse>(() => new ThrowCustomResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ThrowCustomResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[70]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThrowCustomResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThrowCustomResponse(ThrowCustomResponse other) : this() {
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThrowCustomResponse Clone() {
      return new ThrowCustomResponse(this);
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 1;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ThrowCustomResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ThrowCustomResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (responseStatus_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ThrowCustomResponse other) {
      if (other == null) {
        return;
      }
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ThrowVoid : pb::IMessage<ThrowVoid> {
    private static readonly pb::MessageParser<ThrowVoid> _parser = new pb::MessageParser<ThrowVoid>(() => new ThrowVoid());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ThrowVoid> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[71]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThrowVoid() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThrowVoid(ThrowVoid other) : this() {
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThrowVoid Clone() {
      return new ThrowVoid(this);
    }

    /// <summary>Field number for the "Message" field.</summary>
    public const int MessageFieldNumber = 1;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ThrowVoid);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ThrowVoid other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ThrowVoid other) {
      if (other == null) {
        return;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Todo : pb::IMessage<Todo> {
    private static readonly pb::MessageParser<Todo> _parser = new pb::MessageParser<Todo>(() => new Todo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Todo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[72]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Todo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Todo(Todo other) : this() {
      id_ = other.id_;
      title_ = other.title_;
      order_ = other.order_;
      completed_ = other.completed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Todo Clone() {
      return new Todo(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Title" field.</summary>
    public const int TitleFieldNumber = 2;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Order" field.</summary>
    public const int OrderFieldNumber = 3;
    private int order_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Order {
      get { return order_; }
      set {
        order_ = value;
      }
    }

    /// <summary>Field number for the "Completed" field.</summary>
    public const int CompletedFieldNumber = 4;
    private bool completed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Completed {
      get { return completed_; }
      set {
        completed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Todo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Todo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Title != other.Title) return false;
      if (Order != other.Order) return false;
      if (Completed != other.Completed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (Order != 0) hash ^= Order.GetHashCode();
      if (Completed != false) hash ^= Completed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (Order != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Order);
      }
      if (Completed != false) {
        output.WriteRawTag(32);
        output.WriteBool(Completed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (Order != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Order);
      }
      if (Completed != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Todo other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.Order != 0) {
        Order = other.Order;
      }
      if (other.Completed != false) {
        Completed = other.Completed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 24: {
            Order = input.ReadInt32();
            break;
          }
          case 32: {
            Completed = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TriggerValidators : pb::IMessage<TriggerValidators> {
    private static readonly pb::MessageParser<TriggerValidators> _parser = new pb::MessageParser<TriggerValidators>(() => new TriggerValidators());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TriggerValidators> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[73]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TriggerValidators() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TriggerValidators(TriggerValidators other) : this() {
      creditCard_ = other.creditCard_;
      email_ = other.email_;
      empty_ = other.empty_;
      equal_ = other.equal_;
      exclusiveBetween_ = other.exclusiveBetween_;
      greaterThanOrEqual_ = other.greaterThanOrEqual_;
      greaterThan_ = other.greaterThan_;
      inclusiveBetween_ = other.inclusiveBetween_;
      length_ = other.length_;
      lessThanOrEqual_ = other.lessThanOrEqual_;
      lessThan_ = other.lessThan_;
      notEmpty_ = other.notEmpty_;
      notEqual_ = other.notEqual_;
      null_ = other.null_;
      regularExpression_ = other.regularExpression_;
      scalePrecision_ = other.scalePrecision_ != null ? other.scalePrecision_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TriggerValidators Clone() {
      return new TriggerValidators(this);
    }

    /// <summary>Field number for the "CreditCard" field.</summary>
    public const int CreditCardFieldNumber = 1;
    private string creditCard_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreditCard {
      get { return creditCard_; }
      set {
        creditCard_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Email" field.</summary>
    public const int EmailFieldNumber = 2;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Empty" field.</summary>
    public const int EmptyFieldNumber = 3;
    private string empty_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Empty {
      get { return empty_; }
      set {
        empty_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Equal" field.</summary>
    public const int EqualFieldNumber = 4;
    private string equal_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Equal {
      get { return equal_; }
      set {
        equal_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ExclusiveBetween" field.</summary>
    public const int ExclusiveBetweenFieldNumber = 5;
    private int exclusiveBetween_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ExclusiveBetween {
      get { return exclusiveBetween_; }
      set {
        exclusiveBetween_ = value;
      }
    }

    /// <summary>Field number for the "GreaterThanOrEqual" field.</summary>
    public const int GreaterThanOrEqualFieldNumber = 6;
    private int greaterThanOrEqual_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GreaterThanOrEqual {
      get { return greaterThanOrEqual_; }
      set {
        greaterThanOrEqual_ = value;
      }
    }

    /// <summary>Field number for the "GreaterThan" field.</summary>
    public const int GreaterThanFieldNumber = 7;
    private int greaterThan_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GreaterThan {
      get { return greaterThan_; }
      set {
        greaterThan_ = value;
      }
    }

    /// <summary>Field number for the "InclusiveBetween" field.</summary>
    public const int InclusiveBetweenFieldNumber = 8;
    private int inclusiveBetween_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int InclusiveBetween {
      get { return inclusiveBetween_; }
      set {
        inclusiveBetween_ = value;
      }
    }

    /// <summary>Field number for the "Length" field.</summary>
    public const int LengthFieldNumber = 9;
    private string length_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Length {
      get { return length_; }
      set {
        length_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LessThanOrEqual" field.</summary>
    public const int LessThanOrEqualFieldNumber = 10;
    private int lessThanOrEqual_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LessThanOrEqual {
      get { return lessThanOrEqual_; }
      set {
        lessThanOrEqual_ = value;
      }
    }

    /// <summary>Field number for the "LessThan" field.</summary>
    public const int LessThanFieldNumber = 11;
    private int lessThan_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LessThan {
      get { return lessThan_; }
      set {
        lessThan_ = value;
      }
    }

    /// <summary>Field number for the "NotEmpty" field.</summary>
    public const int NotEmptyFieldNumber = 12;
    private string notEmpty_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NotEmpty {
      get { return notEmpty_; }
      set {
        notEmpty_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "NotEqual" field.</summary>
    public const int NotEqualFieldNumber = 13;
    private string notEqual_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NotEqual {
      get { return notEqual_; }
      set {
        notEqual_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Null" field.</summary>
    public const int NullFieldNumber = 14;
    private string null_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Null {
      get { return null_; }
      set {
        null_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RegularExpression" field.</summary>
    public const int RegularExpressionFieldNumber = 15;
    private string regularExpression_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RegularExpression {
      get { return regularExpression_; }
      set {
        regularExpression_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ScalePrecision" field.</summary>
    public const int ScalePrecisionFieldNumber = 16;
    private global::ProtoBuf.Bcl.Decimal scalePrecision_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBuf.Bcl.Decimal ScalePrecision {
      get { return scalePrecision_; }
      set {
        scalePrecision_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TriggerValidators);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TriggerValidators other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CreditCard != other.CreditCard) return false;
      if (Email != other.Email) return false;
      if (Empty != other.Empty) return false;
      if (Equal != other.Equal) return false;
      if (ExclusiveBetween != other.ExclusiveBetween) return false;
      if (GreaterThanOrEqual != other.GreaterThanOrEqual) return false;
      if (GreaterThan != other.GreaterThan) return false;
      if (InclusiveBetween != other.InclusiveBetween) return false;
      if (Length != other.Length) return false;
      if (LessThanOrEqual != other.LessThanOrEqual) return false;
      if (LessThan != other.LessThan) return false;
      if (NotEmpty != other.NotEmpty) return false;
      if (NotEqual != other.NotEqual) return false;
      if (Null != other.Null) return false;
      if (RegularExpression != other.RegularExpression) return false;
      if (!object.Equals(ScalePrecision, other.ScalePrecision)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CreditCard.Length != 0) hash ^= CreditCard.GetHashCode();
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (Empty.Length != 0) hash ^= Empty.GetHashCode();
      if (Equal.Length != 0) hash ^= Equal.GetHashCode();
      if (ExclusiveBetween != 0) hash ^= ExclusiveBetween.GetHashCode();
      if (GreaterThanOrEqual != 0) hash ^= GreaterThanOrEqual.GetHashCode();
      if (GreaterThan != 0) hash ^= GreaterThan.GetHashCode();
      if (InclusiveBetween != 0) hash ^= InclusiveBetween.GetHashCode();
      if (Length.Length != 0) hash ^= Length.GetHashCode();
      if (LessThanOrEqual != 0) hash ^= LessThanOrEqual.GetHashCode();
      if (LessThan != 0) hash ^= LessThan.GetHashCode();
      if (NotEmpty.Length != 0) hash ^= NotEmpty.GetHashCode();
      if (NotEqual.Length != 0) hash ^= NotEqual.GetHashCode();
      if (Null.Length != 0) hash ^= Null.GetHashCode();
      if (RegularExpression.Length != 0) hash ^= RegularExpression.GetHashCode();
      if (scalePrecision_ != null) hash ^= ScalePrecision.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CreditCard.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CreditCard);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Email);
      }
      if (Empty.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Empty);
      }
      if (Equal.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Equal);
      }
      if (ExclusiveBetween != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ExclusiveBetween);
      }
      if (GreaterThanOrEqual != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(GreaterThanOrEqual);
      }
      if (GreaterThan != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(GreaterThan);
      }
      if (InclusiveBetween != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(InclusiveBetween);
      }
      if (Length.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Length);
      }
      if (LessThanOrEqual != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(LessThanOrEqual);
      }
      if (LessThan != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(LessThan);
      }
      if (NotEmpty.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(NotEmpty);
      }
      if (NotEqual.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(NotEqual);
      }
      if (Null.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(Null);
      }
      if (RegularExpression.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(RegularExpression);
      }
      if (scalePrecision_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(ScalePrecision);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CreditCard.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreditCard);
      }
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (Empty.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Empty);
      }
      if (Equal.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Equal);
      }
      if (ExclusiveBetween != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExclusiveBetween);
      }
      if (GreaterThanOrEqual != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GreaterThanOrEqual);
      }
      if (GreaterThan != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GreaterThan);
      }
      if (InclusiveBetween != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(InclusiveBetween);
      }
      if (Length.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Length);
      }
      if (LessThanOrEqual != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LessThanOrEqual);
      }
      if (LessThan != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LessThan);
      }
      if (NotEmpty.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NotEmpty);
      }
      if (NotEqual.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NotEqual);
      }
      if (Null.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Null);
      }
      if (RegularExpression.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RegularExpression);
      }
      if (scalePrecision_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ScalePrecision);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TriggerValidators other) {
      if (other == null) {
        return;
      }
      if (other.CreditCard.Length != 0) {
        CreditCard = other.CreditCard;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.Empty.Length != 0) {
        Empty = other.Empty;
      }
      if (other.Equal.Length != 0) {
        Equal = other.Equal;
      }
      if (other.ExclusiveBetween != 0) {
        ExclusiveBetween = other.ExclusiveBetween;
      }
      if (other.GreaterThanOrEqual != 0) {
        GreaterThanOrEqual = other.GreaterThanOrEqual;
      }
      if (other.GreaterThan != 0) {
        GreaterThan = other.GreaterThan;
      }
      if (other.InclusiveBetween != 0) {
        InclusiveBetween = other.InclusiveBetween;
      }
      if (other.Length.Length != 0) {
        Length = other.Length;
      }
      if (other.LessThanOrEqual != 0) {
        LessThanOrEqual = other.LessThanOrEqual;
      }
      if (other.LessThan != 0) {
        LessThan = other.LessThan;
      }
      if (other.NotEmpty.Length != 0) {
        NotEmpty = other.NotEmpty;
      }
      if (other.NotEqual.Length != 0) {
        NotEqual = other.NotEqual;
      }
      if (other.Null.Length != 0) {
        Null = other.Null;
      }
      if (other.RegularExpression.Length != 0) {
        RegularExpression = other.RegularExpression;
      }
      if (other.scalePrecision_ != null) {
        if (scalePrecision_ == null) {
          ScalePrecision = new global::ProtoBuf.Bcl.Decimal();
        }
        ScalePrecision.MergeFrom(other.ScalePrecision);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CreditCard = input.ReadString();
            break;
          }
          case 18: {
            Email = input.ReadString();
            break;
          }
          case 26: {
            Empty = input.ReadString();
            break;
          }
          case 34: {
            Equal = input.ReadString();
            break;
          }
          case 40: {
            ExclusiveBetween = input.ReadInt32();
            break;
          }
          case 48: {
            GreaterThanOrEqual = input.ReadInt32();
            break;
          }
          case 56: {
            GreaterThan = input.ReadInt32();
            break;
          }
          case 64: {
            InclusiveBetween = input.ReadInt32();
            break;
          }
          case 74: {
            Length = input.ReadString();
            break;
          }
          case 80: {
            LessThanOrEqual = input.ReadInt32();
            break;
          }
          case 88: {
            LessThan = input.ReadInt32();
            break;
          }
          case 98: {
            NotEmpty = input.ReadString();
            break;
          }
          case 106: {
            NotEqual = input.ReadString();
            break;
          }
          case 114: {
            Null = input.ReadString();
            break;
          }
          case 122: {
            RegularExpression = input.ReadString();
            break;
          }
          case 130: {
            if (scalePrecision_ == null) {
              ScalePrecision = new global::ProtoBuf.Bcl.Decimal();
            }
            input.ReadMessage(ScalePrecision);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnAssignRoles : pb::IMessage<UnAssignRoles> {
    private static readonly pb::MessageParser<UnAssignRoles> _parser = new pb::MessageParser<UnAssignRoles>(() => new UnAssignRoles());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnAssignRoles> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[74]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnAssignRoles() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnAssignRoles(UnAssignRoles other) : this() {
      userName_ = other.userName_;
      permissions_ = other.permissions_.Clone();
      roles_ = other.roles_.Clone();
      meta_ = other.meta_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnAssignRoles Clone() {
      return new UnAssignRoles(this);
    }

    /// <summary>Field number for the "UserName" field.</summary>
    public const int UserNameFieldNumber = 1;
    private string userName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Permissions" field.</summary>
    public const int PermissionsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_permissions_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> permissions_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Permissions {
      get { return permissions_; }
    }

    /// <summary>Field number for the "Roles" field.</summary>
    public const int RolesFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_roles_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> roles_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Roles {
      get { return roles_; }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnAssignRoles);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnAssignRoles other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserName != other.UserName) return false;
      if(!permissions_.Equals(other.permissions_)) return false;
      if(!roles_.Equals(other.roles_)) return false;
      if (!Meta.Equals(other.Meta)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      hash ^= permissions_.GetHashCode();
      hash ^= roles_.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserName);
      }
      permissions_.WriteTo(output, _repeated_permissions_codec);
      roles_.WriteTo(output, _repeated_roles_codec);
      meta_.WriteTo(output, _map_meta_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      size += permissions_.CalculateSize(_repeated_permissions_codec);
      size += roles_.CalculateSize(_repeated_roles_codec);
      size += meta_.CalculateSize(_map_meta_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnAssignRoles other) {
      if (other == null) {
        return;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      permissions_.Add(other.permissions_);
      roles_.Add(other.roles_);
      meta_.Add(other.meta_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserName = input.ReadString();
            break;
          }
          case 18: {
            permissions_.AddEntriesFrom(input, _repeated_permissions_codec);
            break;
          }
          case 26: {
            roles_.AddEntriesFrom(input, _repeated_roles_codec);
            break;
          }
          case 34: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnAssignRolesResponse : pb::IMessage<UnAssignRolesResponse> {
    private static readonly pb::MessageParser<UnAssignRolesResponse> _parser = new pb::MessageParser<UnAssignRolesResponse>(() => new UnAssignRolesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnAssignRolesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[75]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnAssignRolesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnAssignRolesResponse(UnAssignRolesResponse other) : this() {
      allRoles_ = other.allRoles_.Clone();
      allPermissions_ = other.allPermissions_.Clone();
      meta_ = other.meta_.Clone();
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnAssignRolesResponse Clone() {
      return new UnAssignRolesResponse(this);
    }

    /// <summary>Field number for the "AllRoles" field.</summary>
    public const int AllRolesFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_allRoles_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> allRoles_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> AllRoles {
      get { return allRoles_; }
    }

    /// <summary>Field number for the "AllPermissions" field.</summary>
    public const int AllPermissionsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_allPermissions_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> allPermissions_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> AllPermissions {
      get { return allPermissions_; }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 3;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 26);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 4;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnAssignRolesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnAssignRolesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!allRoles_.Equals(other.allRoles_)) return false;
      if(!allPermissions_.Equals(other.allPermissions_)) return false;
      if (!Meta.Equals(other.Meta)) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= allRoles_.GetHashCode();
      hash ^= allPermissions_.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      allRoles_.WriteTo(output, _repeated_allRoles_codec);
      allPermissions_.WriteTo(output, _repeated_allPermissions_codec);
      meta_.WriteTo(output, _map_meta_codec);
      if (responseStatus_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += allRoles_.CalculateSize(_repeated_allRoles_codec);
      size += allPermissions_.CalculateSize(_repeated_allPermissions_codec);
      size += meta_.CalculateSize(_map_meta_codec);
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnAssignRolesResponse other) {
      if (other == null) {
        return;
      }
      allRoles_.Add(other.allRoles_);
      allPermissions_.Add(other.allPermissions_);
      meta_.Add(other.meta_);
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            allRoles_.AddEntriesFrom(input, _repeated_allRoles_codec);
            break;
          }
          case 18: {
            allPermissions_.AddEntriesFrom(input, _repeated_allPermissions_codec);
            break;
          }
          case 26: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
          case 34: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateTodo : pb::IMessage<UpdateTodo> {
    private static readonly pb::MessageParser<UpdateTodo> _parser = new pb::MessageParser<UpdateTodo>(() => new UpdateTodo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateTodo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[76]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTodo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTodo(UpdateTodo other) : this() {
      id_ = other.id_;
      title_ = other.title_;
      order_ = other.order_;
      completed_ = other.completed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTodo Clone() {
      return new UpdateTodo(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Title" field.</summary>
    public const int TitleFieldNumber = 2;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Order" field.</summary>
    public const int OrderFieldNumber = 3;
    private int order_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Order {
      get { return order_; }
      set {
        order_ = value;
      }
    }

    /// <summary>Field number for the "Completed" field.</summary>
    public const int CompletedFieldNumber = 4;
    private bool completed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Completed {
      get { return completed_; }
      set {
        completed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateTodo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateTodo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Title != other.Title) return false;
      if (Order != other.Order) return false;
      if (Completed != other.Completed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (Order != 0) hash ^= Order.GetHashCode();
      if (Completed != false) hash ^= Completed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (Order != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Order);
      }
      if (Completed != false) {
        output.WriteRawTag(32);
        output.WriteBool(Completed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (Order != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Order);
      }
      if (Completed != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateTodo other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.Order != 0) {
        Order = other.Order;
      }
      if (other.Completed != false) {
        Completed = other.Completed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 24: {
            Order = input.ReadInt32();
            break;
          }
          case 32: {
            Completed = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UserApiKey : pb::IMessage<UserApiKey> {
    private static readonly pb::MessageParser<UserApiKey> _parser = new pb::MessageParser<UserApiKey>(() => new UserApiKey());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserApiKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[77]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserApiKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserApiKey(UserApiKey other) : this() {
      key_ = other.key_;
      keyType_ = other.keyType_;
      expiryDate_ = other.expiryDate_ != null ? other.expiryDate_.Clone() : null;
      meta_ = other.meta_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserApiKey Clone() {
      return new UserApiKey(this);
    }

    /// <summary>Field number for the "Key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "KeyType" field.</summary>
    public const int KeyTypeFieldNumber = 2;
    private string keyType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string KeyType {
      get { return keyType_; }
      set {
        keyType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ExpiryDate" field.</summary>
    public const int ExpiryDateFieldNumber = 3;
    private global::ProtoBuf.Bcl.DateTime expiryDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBuf.Bcl.DateTime ExpiryDate {
      get { return expiryDate_; }
      set {
        expiryDate_ = value;
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserApiKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserApiKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (KeyType != other.KeyType) return false;
      if (!object.Equals(ExpiryDate, other.ExpiryDate)) return false;
      if (!Meta.Equals(other.Meta)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (KeyType.Length != 0) hash ^= KeyType.GetHashCode();
      if (expiryDate_ != null) hash ^= ExpiryDate.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (KeyType.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(KeyType);
      }
      if (expiryDate_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ExpiryDate);
      }
      meta_.WriteTo(output, _map_meta_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (KeyType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(KeyType);
      }
      if (expiryDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExpiryDate);
      }
      size += meta_.CalculateSize(_map_meta_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserApiKey other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.KeyType.Length != 0) {
        KeyType = other.KeyType;
      }
      if (other.expiryDate_ != null) {
        if (expiryDate_ == null) {
          ExpiryDate = new global::ProtoBuf.Bcl.DateTime();
        }
        ExpiryDate.MergeFrom(other.ExpiryDate);
      }
      meta_.Add(other.meta_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            KeyType = input.ReadString();
            break;
          }
          case 26: {
            if (expiryDate_ == null) {
              ExpiryDate = new global::ProtoBuf.Bcl.DateTime();
            }
            input.ReadMessage(ExpiryDate);
            break;
          }
          case 34: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
