@inherits DynamicInputBase

@if (IsSelect)
{
    <SelectInput Id=@UseId Status=@Status TValue="string"
                @bind-Value="Value" @attributes="AllAttributes" Help=@TextUtils.Humanize(UseId)>
    @if (Input?.AllowableEntries != null)
    {
        foreach (var entry in Input!.AllowableEntries)
        {
            <option value=@entry.Key>@entry.Value</option>
        }
    }
    else if (Input?.AllowableValues != null)
    {
        foreach (var item in Input!.AllowableValues)
        {
            <option value=@item>@item</option>
        }
    }
    </SelectInput>
}
else if (IsCheckbox)
{
    <CheckboxInput Id=@UseId Status=@Status @bind-Value="Value" @attributes="AllAttributes" Help=@UseHelp />
}
else if (UseType == "file")
{
    <FileInput type=@UseType Id=@UseId Status=@Status @attributes="AllAttributes" Help=@UseHelp 
               Value=@(ValueObject as string)      Values=@(ValueObject as List<string>) 
               File=@(ValueObject as UploadedFile) Files=@(ValueObject as List<UploadedFile>)
               OnInput="e => Model[Input!.Id] = e" />
}
else
{
    <TextInput type=@UseType Id=@UseId Status=@Status @bind-Value="Value" @attributes="AllAttributes" Help=@UseHelp />
}
