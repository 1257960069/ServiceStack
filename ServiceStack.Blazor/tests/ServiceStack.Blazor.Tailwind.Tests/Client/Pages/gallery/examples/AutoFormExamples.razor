@page "/gallery/autoform"
@layout MainLayout
@using MyApp.Client.Pages.gallery.AutoForm

<h1 class="mb-4 text-3xl font-semibold text-gray-900">
    AutoForm Examples
</h1>

<h2 class="mt-8 mb-4 text-2xl font-semibold text-gray-900">
    Create Form
</h2>

<ExampleCode Path="/AutoForm/New.razor" />

<p class="mb-4 text-lg">
    <b>AutoCreateForm</b> can be used to create an automated form based from a Request DTO definition:
</p>

<iframe class="w-full" style="height:35em" src="/gallery/autoform/create" />


<h2 class="mt-8 mb-4 text-2xl font-semibold text-gray-900">
    Edit Form
</h2>

<ExampleCode Path="/AutoForm/Edit.razor" />

<p class="mb-4 text-lg">
    <b>AutoEditForm</b> can be used to render an automated form based to update and delete an 
    <a href="https://docs.servicestack.net/autoquery-crud">AutoQuery CRUD</a> API:
</p>

<iframe class="w-full" style="height:35em" src="/gallery/autoform/edit" />

<p class="my-4 text-lg">
    The forms behavior and appearance is further customizable with the 
    <a class="text-blue-600 hover:text-blue-800" href="https://docs.servicestack.net/locode/declarative#annotate-apis">API annotation</a>,
    declarative <a class="text-blue-600 hover:text-blue-800" href="https://docs.servicestack.net/locode/declarative#type-validation-attributes">validation</a>
    and the custom
    <a class="text-blue-600 hover:text-blue-800" href="https://docs.servicestack.net/locode/declarative#custom-fields-and-inputs">Field and Input</a>
    attributes, e.g:
</p>

<ExampleCode SourceCode=@ExampleDto Language="language-csharp" />

@code {
        string ExampleDto = @"[Description(""Update an existing Booking"")]
[Notes(""Find out how to quickly create a <a class='svg-external' target='_blank' href='https://youtu.be/rSFiikDjGos'>C# Bookings App from Scratch</a>"")]
[Route(""/booking/{Id}"", ""PATCH"")]
[ValidateHasRole(""Employee"")]
[AutoApply(Behavior.AuditModify)]
public class UpdateBooking : IPatchDb<Booking>, IReturn<IdResponse>
{
    public int Id { get; set; }
    public string? Name { get; set; }
    public RoomType? RoomType { get; set; }
    [ValidateGreaterThan(0)]
    public int? RoomNumber { get; set; }
    [ValidateGreaterThan(0)]
    public decimal? Cost { get; set; }
    public DateTime? BookingStartDate { get; set; }
    public DateTime? BookingEndDate { get; set; }
    [Input(Type = ""textarea"")]
    public string? Notes { get; set; }
    public bool? Cancelled { get; set; }
}";

}
