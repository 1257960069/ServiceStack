@inherits LayoutComponentBase
@inject ServiceStackStateProvider AuthStateProvider;
@inject NavigationManager NavigationManager;

<div>
    <header class="border-b border-gray-200 pr-3">
        <div class="flex flex-wrap items-center">
            <div class="flex flex-grow flex-shrink flex-nowrap justify-end items-center">
                <nav class="relative flex flex-grow">
                    <ul class="flex flex-wrap items-center justify-end w-full m-0">
                        <li class="relative flex flex-wrap just-fu-start m-0">
                            <NavLink href="/docs/hosting" class="m-2">
                                <button type="button" class="bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500" href="/hosting">
                                    <div class="flex align-middle">
                                        <svg preserveAspectRatio="xMidYMid meet" viewBox="0 0 24 24" width="1.2em" height="1.2em" class="text-gray-700 w-5 h-5">
                                            <path fill="currentColor" d="M7 15h2c0 1.08 1.37 2 3 2s3-.92 3-2c0-1.1-1.04-1.5-3.24-2.03C9.64 12.44 7 11.78 7 9c0-1.79 1.47-3.31 3.5-3.82V3h3v2.18C15.53 5.69 17 7.21 17 9h-2c0-1.08-1.37-2-3-2s-3 .92-3 2c0 1.1 1.04 1.5 3.24 2.03C14.36 11.56 17 12.22 17 15c0 1.79-1.47 3.31-3.5 3.82V21h-3v-2.18C8.47 18.31 7 16.79 7 15Z"></path>
                                        </svg> 0.40 /mo 
                                    </div>
                                </button>
                            </NavLink>
                        </li>
                        <li class="relative flex flex-wrap just-fu-start m-0"><NavLink href="/docs/prerender" class="flex items-center justify-start mw-full p-4 hover:text-green-600">Prerendering</NavLink></li>
                        <li class="relative flex flex-wrap just-fu-start m-0"><NavLink href="/docs/deploy" class="flex items-center justify-start mw-full p-4 hover:text-green-600">Deployments</NavLink></li>

                        <AuthorizeView>
                            <Authorized>
                                <li class="relative flex flex-wrap just-fu-start m-0">
                                    <button @onclick="logout" type="button" class="bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                                        Logout
                                    </button>
                                </li>
                            </Authorized>
                            <Authorizing>
                                <span>Authorizing...</span>
                            </Authorizing>
                            <NotAuthorized>
                                <li class="relative flex flex-wrap just-fu-start m-0">
                                    <NavLink href=@LoginUrl class="router-link-active router-link-exact-active m-2" aria-current="page">
                                        <button type="button" class="bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                                            Sign In
                                        </button>
                                    </NavLink>
                                </li>
                                <li class="relative flex flex-wrap just-fu-start m-0">
                                    <NavLink href=@RegisterUrl class="m-2">
                                        <button class="inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                                            Register
                                        </button>
                                    </NavLink>
                                </li>
                            </NotAuthorized>
                        </AuthorizeView>

                    </ul>
                </nav>
            </div>
        </div>
    </header>

    <Sidebar Collapse=@CollapseSidebar Toggle=@(state => CollapseSidebar = state) />

    <div class="md:pl-64 flex flex-col flex-1">
        <div class="sticky top-0 z-10 md:hidden pl-1 pt-1 sm:pl-3 sm:pt-3 bg-white">
            <button type="button" class="-ml-0.5 -mt-0.5 h-12 w-12 inline-flex items-center justify-center rounded-md text-gray-500 hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500"
                @onclick=@(() => CollapseSidebar = false)>
            <span class="sr-only">Open sidebar</span>
            <!-- Heroicon name: outline/menu -->
            <svg class="h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true">
                <path stroke-linecap="round" stroke-linejoin="round" d="M4 6h16M4 12h16M4 18h16" />
            </svg>
            </button>
            <AuthorizeView>
                <Authorized>
                    <span class="mx-3">@context.User.GetDisplayName()</span>
                @foreach (var role in context.User.GetRoles())
                {
                    <small @key=role title="Admin" class="px-2 py-sm-1 mr-1 d-inline-flex rounded"
                           style="background-color:rgb(219 234 254);color: rgb(30 64 175);">@role</small>
                }
                    <span class="ms-2 btn btn-outline-primary" @onclick="logout">Logout</span>
                </Authorized>
                <Authorizing>
                    <NavLink class="btn btn-outline-primary" href=@LoginUrl>Login</NavLink>
                </Authorizing>
                <NotAuthorized>
                    <NavLink class="btn btn-outline-primary" href=@LoginUrl>Login</NavLink>
                </NotAuthorized>
            </AuthorizeView>
        </div>
        <main class="flex-1">
            <div class="py-6">
                <div class="px-4 sm:px-6 md:px-8">
                    @Body
                </div>
            </div>
        </main>
    </div>

</div>

@code {
    [CascadingParameter] protected Task<AuthenticationState>? AuthenticationStateTask { get; set; }
    bool CollapseSidebar = false;

    string LoginUrl { get; set; } = "/signin";
    string RegisterUrl { get; set; } = "/signup";

    protected override Task OnParametersSetAsync()
    {
        LoginUrl = NavigationManager.GetLoginUrl();
        return Task.CompletedTask;
    }

    async Task logout()
    {
        await AuthStateProvider.LogoutAsync();
        NavigationManager.NavigateTo(LoginUrl, true);
    }
}