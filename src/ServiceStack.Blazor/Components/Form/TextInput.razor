@typeparam TValue
@inherits TextInputBase<TValue>

@if (IsBootstrap)
{
    <input type="text" class=@CssUtils.ClassNames($"form-control form-control-{Size}", CssClass(invalid:"is-invalid")) 
          id=@Id name=@Id @bind="CurrentValue" placeHolder=@UseHelp @bind:event="oninput" @attributes="IncludeAttributes">
    @if (string.IsNullOrEmpty(placeHolder))
    {
        <label for=@Id>@UseHelp</label>
    }
    <ErrorField Status=@Status Id=@Id/>
}
else if (IsTailwind)
{
    @if (!string.IsNullOrEmpty(UseHelp))
    {
        <div class=@ClassNames("border rounded-md px-3 py-2 shadow-sm focus-within:ring-1",
            InputClass(valid:"border-gray-300 focus-within:ring-indigo-600 focus-within:border-indigo-600",
                        invalid:"border-red-300 focus-within:ring-red-600 focus-within:border-red-600"))>
            <label for=@Id class="block text-xs font-medium text-gray-900">@UseHelp</label>
            <input type="text" class=@ClassNames("block w-full border-0 p-0 placeholder-gray-500 focus:ring-0 sm:text-sm", 
                CssClass("text-gray-900", "text-red-900")) 
                    id=@Id name=@Id @bind="CurrentValue" placeHolder=@UseHelp @bind:event="oninput" @attributes="IncludeAttributes">
            <ErrorField Status=@Status Id=@Id/>
        </div>
    }
    else
    {
        <div class="mt-1 relative rounded-md shadow-sm">
            <input type="text"id=@Id name=@Id @bind="CurrentValue" placeHolder=@UseHelp @bind:event="oninput" @attributes="IncludeAttributes"
                   class=@ClassNames("block w-full pr-10 sm:text-sm rounded-md", 
                        CssClass(valid:"text-gray-900 focus:ring-indigo-500 focus:border-indigo-500 border-gray-300", 
                               invalid:"text-red-900 border-red-300 placeholder-red-300 focus:outline-none focus:ring-red-500 focus:border-red-500")) 
                   >
            <ErrorField Status=@Status Id=@Id/>
        </div>
    }
}
